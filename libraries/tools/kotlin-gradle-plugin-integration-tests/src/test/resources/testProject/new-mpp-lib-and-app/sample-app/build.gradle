buildscript {
	repositories {
		mavenLocal()
		mavenCentral()
	}
	dependencies {
		classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
	}
}

apply plugin: 'kotlin-multiplatform'

repositories {
    mavenLocal()
    mavenCentral()
    // NB: Build of this module depends on 'sample-lib' publication. You need to add the local
    // repository where 'sample-lib' artifacts are published.
}

kotlin {
    sourceSets {
        commonMain {
            dependencies {
                implementation 'com.example:sample-lib:1.0'
            }
        }
        allJvm {
            dependsOn commonMain
            dependencies {
                implementation 'org.jetbrains.kotlin:kotlin-stdlib'
            }
        }
        jvmMain {
            dependsOn allJvm
        }
        nodeJsMain {
            dependencies {
                implementation 'org.jetbrains.kotlin:kotlin-stdlib-js'
            }
        }
    }

    js('nodeJs') {
        nodejs {

        }
    }

    wasmJs()

    targets {
        fromPreset(presets.jvm, 'jvm') {
             compilations.main {
                tasks.getByName(compileKotlinTaskName) {
                    kotlinOptions {
                        jvmTarget = '1.8'
                    }
                }
             }
        }

        fromPreset(presets.linuxX64, 'linux64')

        configure([findByName('linux64')]) {
            binaries.executable("main", [DEBUG]) {
                entryPoint = "com.example.app.native.main"
            }
            
            binaries.all {
                // Check that linker options are correctly passed to the compiler.
                linkerOpts = ['-L.']
            }
        }
    }
}

tasks.register("resolveRuntimeDependencies", DefaultTask) {
    doFirst { 
        // KT-26301
        def configName = kotlin.targets.jvm.compilations.main.runtimeDependencyConfigurationName
        configurations[configName].resolve()
    }
}