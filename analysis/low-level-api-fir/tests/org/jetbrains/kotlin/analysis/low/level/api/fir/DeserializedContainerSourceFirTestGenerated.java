/*
 * Copyright 2010-2024 JetBrains s.r.o. and Kotlin Programming Language contributors.
 * Use of this source code is governed by the Apache 2.0 license that can be found in the license/LICENSE.txt file.
 */

package org.jetbrains.kotlin.analysis.low.level.api.fir;

import com.intellij.testFramework.TestDataPath;
import org.jetbrains.kotlin.test.util.KtTestUtil;
import org.jetbrains.kotlin.test.TestMetadata;
import org.junit.jupiter.api.Nested;
import org.junit.jupiter.api.Test;

import java.io.File;
import java.util.regex.Pattern;

/** This class is generated by {@link org.jetbrains.kotlin.generators.tests.analysis.api.GenerateAnalysisApiTestsKt}. DO NOT MODIFY MANUALLY */
@SuppressWarnings("all")
@TestMetadata("analysis/low-level-api-fir/testData/getOrBuildFirForFileFacade")
@TestDataPath("$PROJECT_ROOT")
public class DeserializedContainerSourceFirTestGenerated extends AbstractDeserializedContainerSourceFirTest {
  @Test
  public void testAllFilesPresentInGetOrBuildFirForFileFacade() {
    KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("analysis/low-level-api-fir/testData/getOrBuildFirForFileFacade"), Pattern.compile("^(.+)\\.kt$"), null, true);
  }

  @Nested
  @TestMetadata("analysis/low-level-api-fir/testData/getOrBuildFirForFileFacade/jvm")
  @TestDataPath("$PROJECT_ROOT")
  public class Jvm {
    @Test
    public void testAllFilesPresentInJvm() {
      KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("analysis/low-level-api-fir/testData/getOrBuildFirForFileFacade/jvm"), Pattern.compile("^(.+)\\.kt$"), null, true);
    }

    @Test
    @TestMetadata("topLevelFunction.kt")
    public void testTopLevelFunction() {
      runTest("analysis/low-level-api-fir/testData/getOrBuildFirForFileFacade/jvm/topLevelFunction.kt");
    }

    @Test
    @TestMetadata("topLevelFunctionWithJvmName.kt")
    public void testTopLevelFunctionWithJvmName() {
      runTest("analysis/low-level-api-fir/testData/getOrBuildFirForFileFacade/jvm/topLevelFunctionWithJvmName.kt");
    }
  }

  @Nested
  @TestMetadata("analysis/low-level-api-fir/testData/getOrBuildFirForFileFacade/metadata")
  @TestDataPath("$PROJECT_ROOT")
  public class Metadata {
    @Test
    public void testAllFilesPresentInMetadata() {
      KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("analysis/low-level-api-fir/testData/getOrBuildFirForFileFacade/metadata"), Pattern.compile("^(.+)\\.kt$"), null, true);
    }

    @Test
    @TestMetadata("topLevelFunction.kt")
    public void testTopLevelFunction() {
      runTest("analysis/low-level-api-fir/testData/getOrBuildFirForFileFacade/metadata/topLevelFunction.kt");
    }
  }
}
