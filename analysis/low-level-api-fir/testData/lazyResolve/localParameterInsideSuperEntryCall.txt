BODY_RESOLVE:
FILE: [ResolvedTo(IMPORTS)] localParameterInsideSuperEntryCall.kt
    public abstract [ResolvedTo(STATUS)] [ModuleNameKey=main] interface Interface : R|kotlin/Any| {
        public abstract [ResolvedTo(STATUS)] fun foo([ResolvedTo(STATUS)] param: R|kotlin/String|): R|kotlin/Unit|

    }
    public open [ResolvedTo(STATUS)] [ModuleNameKey=main] class ClassWithParameter : R|kotlin/Any| {
        public [ResolvedTo(STATUS)] [ContainingClassKey=ClassWithParameter] constructor([ResolvedTo(STATUS)] i: R|one/Interface|): R|one/ClassWithParameter| {
            LAZY_super<R|kotlin/Any|>
        }

    }
    public final [ResolvedTo(ANNOTATION_ARGUMENTS)] [ModuleNameKey=main] class TopLevelClass : R|one/ClassWithParameter| {
        public [ResolvedTo(BODY_RESOLVE)] [ContainingClassKey=TopLevelClass] constructor(): R|one/TopLevelClass| {
            super<R|one/ClassWithParameter|>(object : R|one/Interface| {
                private [ResolvedTo(BODY_RESOLVE)] [ContainingClassKey=<anonymous>] constructor(): R|one/<anonymous>| {
                    super<R|kotlin/Any|>()
                }

                public open override [ResolvedTo(BODY_RESOLVE)] fun foo([ResolvedTo(BODY_RESOLVE)] param: R|kotlin/String|): R|kotlin/Unit| {
                }

            }
            )
        }

    }

FILE RAW TO BODY:
FILE: [ResolvedTo(BODY_RESOLVE)] localParameterInsideSuperEntryCall.kt
    public abstract [ResolvedTo(BODY_RESOLVE)] [ModuleNameKey=main] interface Interface : R|kotlin/Any| {
        public abstract [ResolvedTo(BODY_RESOLVE)] fun foo([ResolvedTo(BODY_RESOLVE)] param: R|kotlin/String|): R|kotlin/Unit|

    }
    public open [ResolvedTo(BODY_RESOLVE)] [ModuleNameKey=main] class ClassWithParameter : R|kotlin/Any| {
        public [ResolvedTo(BODY_RESOLVE)] [ContainingClassKey=ClassWithParameter] constructor([ResolvedTo(BODY_RESOLVE)] i: R|one/Interface|): R|one/ClassWithParameter| {
            super<R|kotlin/Any|>()
        }

    }
    public final [ResolvedTo(BODY_RESOLVE)] [ModuleNameKey=main] class TopLevelClass : R|one/ClassWithParameter| {
        public [ResolvedTo(BODY_RESOLVE)] [ContainingClassKey=TopLevelClass] constructor(): R|one/TopLevelClass| {
            super<R|one/ClassWithParameter|>(object : R|one/Interface| {
                private [ResolvedTo(BODY_RESOLVE)] [ContainingClassKey=<anonymous>] constructor(): R|one/<anonymous>| {
                    super<R|kotlin/Any|>()
                }

                public open override [ResolvedTo(BODY_RESOLVE)] fun foo([ResolvedTo(BODY_RESOLVE)] param: R|kotlin/String|): R|kotlin/Unit| {
                }

            }
            )
        }

    }
