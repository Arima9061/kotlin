KtCallExpression(66,71): 'foo()'
  KtApplicableCallCandidateInfo:
    candidate = KtSimpleFunctionCall:
      isImplicitInvoke = false
      partiallyAppliedSymbol = KtPartiallyAppliedSymbol:
        dispatchReceiver = KtImplicitReceiverValue:
          symbol = one/MyClass
          type = one.MyClass
        extensionReceiver = null
        signature = KtFunctionLikeSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = one/MyClass.foo(<dispatch receiver>: one.MyClass): kotlin.Unit
          valueParameters = []
          callableIdIfNonLocal = one/MyClass.foo
      typeArgumentsMapping = {}
      argumentMapping = {}
    isInBestCandidates = true

KtCallExpression(85,90): 'foo()'
  KtApplicableCallCandidateInfo:
    candidate = KtSimpleFunctionCall:
      isImplicitInvoke = false
      partiallyAppliedSymbol = KtPartiallyAppliedSymbol:
        dispatchReceiver = KtExplicitReceiverValue:
          expression = this
          isSafeNavigation = false
          type = one.MyClass
        extensionReceiver = null
        signature = KtFunctionLikeSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = one/MyClass.foo(<dispatch receiver>: one.MyClass): kotlin.Unit
          valueParameters = []
          callableIdIfNonLocal = one/MyClass.foo
      typeArgumentsMapping = {}
      argumentMapping = {}
    isInBestCandidates = true

KtCallExpression(112,117): 'foo()'
  KtApplicableCallCandidateInfo:
    candidate = KtSimpleFunctionCall:
      isImplicitInvoke = false
      partiallyAppliedSymbol = KtPartiallyAppliedSymbol:
        dispatchReceiver = KtExplicitReceiverValue:
          expression = this@MyClass
          isSafeNavigation = false
          type = one.MyClass
        extensionReceiver = null
        signature = KtFunctionLikeSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = one/MyClass.foo(<dispatch receiver>: one.MyClass): kotlin.Unit
          valueParameters = []
          callableIdIfNonLocal = one/MyClass.foo
      typeArgumentsMapping = {}
      argumentMapping = {}
    isInBestCandidates = true

KtCallExpression(203,208): 'foo()'
  KtApplicableCallCandidateInfo:
    candidate = KtSimpleFunctionCall:
      isImplicitInvoke = false
      partiallyAppliedSymbol = KtPartiallyAppliedSymbol:
        dispatchReceiver = KtImplicitReceiverValue:
          symbol = one/MyClass
          type = one.MyClass
        extensionReceiver = null
        signature = KtFunctionLikeSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = one/MyClass.foo(<dispatch receiver>: one.MyClass): kotlin.Unit
          valueParameters = []
          callableIdIfNonLocal = one/MyClass.foo
      typeArgumentsMapping = {}
      argumentMapping = {}
    isInBestCandidates = false

  KtApplicableCallCandidateInfo:
    candidate = KtSimpleFunctionCall:
      isImplicitInvoke = false
      partiallyAppliedSymbol = KtPartiallyAppliedSymbol:
        dispatchReceiver = KtImplicitReceiverValue:
          symbol = one/MyClass.InnerOuter
          type = one.MyClass.InnerOuter
        extensionReceiver = null
        signature = KtFunctionLikeSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = one/MyClass.InnerOuter.foo(<dispatch receiver>: one.MyClass.InnerOuter): kotlin.Unit
          valueParameters = []
          callableIdIfNonLocal = one/MyClass.InnerOuter.foo
      typeArgumentsMapping = {}
      argumentMapping = {}
    isInBestCandidates = true

KtCallExpression(226,231): 'foo()'
  KtApplicableCallCandidateInfo:
    candidate = KtSimpleFunctionCall:
      isImplicitInvoke = false
      partiallyAppliedSymbol = KtPartiallyAppliedSymbol:
        dispatchReceiver = KtExplicitReceiverValue:
          expression = this
          isSafeNavigation = false
          type = one.MyClass.InnerOuter
        extensionReceiver = null
        signature = KtFunctionLikeSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = one/MyClass.InnerOuter.foo(<dispatch receiver>: one.MyClass.InnerOuter): kotlin.Unit
          valueParameters = []
          callableIdIfNonLocal = one/MyClass.InnerOuter.foo
      typeArgumentsMapping = {}
      argumentMapping = {}
    isInBestCandidates = true

KtCallExpression(260,265): 'foo()'
  KtApplicableCallCandidateInfo:
    candidate = KtSimpleFunctionCall:
      isImplicitInvoke = false
      partiallyAppliedSymbol = KtPartiallyAppliedSymbol:
        dispatchReceiver = KtExplicitReceiverValue:
          expression = this@InnerOuter
          isSafeNavigation = false
          type = one.MyClass.InnerOuter
        extensionReceiver = null
        signature = KtFunctionLikeSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = one/MyClass.InnerOuter.foo(<dispatch receiver>: one.MyClass.InnerOuter): kotlin.Unit
          valueParameters = []
          callableIdIfNonLocal = one/MyClass.InnerOuter.foo
      typeArgumentsMapping = {}
      argumentMapping = {}
    isInBestCandidates = true

KtCallExpression(291,296): 'foo()'
  KtApplicableCallCandidateInfo:
    candidate = KtSimpleFunctionCall:
      isImplicitInvoke = false
      partiallyAppliedSymbol = KtPartiallyAppliedSymbol:
        dispatchReceiver = KtExplicitReceiverValue:
          expression = this@MyClass
          isSafeNavigation = false
          type = one.MyClass
        extensionReceiver = null
        signature = KtFunctionLikeSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = one/MyClass.foo(<dispatch receiver>: one.MyClass): kotlin.Unit
          valueParameters = []
          callableIdIfNonLocal = one/MyClass.foo
      typeArgumentsMapping = {}
      argumentMapping = {}
    isInBestCandidates = true

KtCallExpression(403,408): 'foo()'
  KtApplicableCallCandidateInfo:
    candidate = KtSimpleFunctionCall:
      isImplicitInvoke = false
      partiallyAppliedSymbol = KtPartiallyAppliedSymbol:
        dispatchReceiver = KtImplicitReceiverValue:
          symbol = one/MyClass
          type = one.MyClass
        extensionReceiver = null
        signature = KtFunctionLikeSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = one/MyClass.foo(<dispatch receiver>: one.MyClass): kotlin.Unit
          valueParameters = []
          callableIdIfNonLocal = one/MyClass.foo
      typeArgumentsMapping = {}
      argumentMapping = {}
    isInBestCandidates = false

  KtApplicableCallCandidateInfo:
    candidate = KtSimpleFunctionCall:
      isImplicitInvoke = false
      partiallyAppliedSymbol = KtPartiallyAppliedSymbol:
        dispatchReceiver = KtImplicitReceiverValue:
          symbol = one/MyClass.InnerOuter
          type = one.MyClass.InnerOuter
        extensionReceiver = null
        signature = KtFunctionLikeSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = one/MyClass.InnerOuter.foo(<dispatch receiver>: one.MyClass.InnerOuter): kotlin.Unit
          valueParameters = []
          callableIdIfNonLocal = one/MyClass.InnerOuter.foo
      typeArgumentsMapping = {}
      argumentMapping = {}
    isInBestCandidates = false

  KtApplicableCallCandidateInfo:
    candidate = KtSimpleFunctionCall:
      isImplicitInvoke = false
      partiallyAppliedSymbol = KtPartiallyAppliedSymbol:
        dispatchReceiver = KtImplicitReceiverValue:
          symbol = one/MyClass.InnerOuter.InnerNested
          type = one.MyClass.InnerOuter.InnerNested
        extensionReceiver = null
        signature = KtFunctionLikeSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = one/MyClass.InnerOuter.InnerNested.foo(<dispatch receiver>: one.MyClass.InnerOuter.InnerNested): kotlin.Unit
          valueParameters = []
          callableIdIfNonLocal = one/MyClass.InnerOuter.InnerNested.foo
      typeArgumentsMapping = {}
      argumentMapping = {}
    isInBestCandidates = true

KtCallExpression(430,435): 'foo()'
  KtApplicableCallCandidateInfo:
    candidate = KtSimpleFunctionCall:
      isImplicitInvoke = false
      partiallyAppliedSymbol = KtPartiallyAppliedSymbol:
        dispatchReceiver = KtExplicitReceiverValue:
          expression = this
          isSafeNavigation = false
          type = one.MyClass.InnerOuter.InnerNested
        extensionReceiver = null
        signature = KtFunctionLikeSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = one/MyClass.InnerOuter.InnerNested.foo(<dispatch receiver>: one.MyClass.InnerOuter.InnerNested): kotlin.Unit
          valueParameters = []
          callableIdIfNonLocal = one/MyClass.InnerOuter.InnerNested.foo
      typeArgumentsMapping = {}
      argumentMapping = {}
    isInBestCandidates = true

KtCallExpression(469,474): 'foo()'
  KtApplicableCallCandidateInfo:
    candidate = KtSimpleFunctionCall:
      isImplicitInvoke = false
      partiallyAppliedSymbol = KtPartiallyAppliedSymbol:
        dispatchReceiver = KtExplicitReceiverValue:
          expression = this@InnerNested
          isSafeNavigation = false
          type = one.MyClass.InnerOuter.InnerNested
        extensionReceiver = null
        signature = KtFunctionLikeSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = one/MyClass.InnerOuter.InnerNested.foo(<dispatch receiver>: one.MyClass.InnerOuter.InnerNested): kotlin.Unit
          valueParameters = []
          callableIdIfNonLocal = one/MyClass.InnerOuter.InnerNested.foo
      typeArgumentsMapping = {}
      argumentMapping = {}
    isInBestCandidates = true

KtCallExpression(507,512): 'foo()'
  KtApplicableCallCandidateInfo:
    candidate = KtSimpleFunctionCall:
      isImplicitInvoke = false
      partiallyAppliedSymbol = KtPartiallyAppliedSymbol:
        dispatchReceiver = KtExplicitReceiverValue:
          expression = this@InnerOuter
          isSafeNavigation = false
          type = one.MyClass.InnerOuter
        extensionReceiver = null
        signature = KtFunctionLikeSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = one/MyClass.InnerOuter.foo(<dispatch receiver>: one.MyClass.InnerOuter): kotlin.Unit
          valueParameters = []
          callableIdIfNonLocal = one/MyClass.InnerOuter.foo
      typeArgumentsMapping = {}
      argumentMapping = {}
    isInBestCandidates = true

KtCallExpression(542,547): 'foo()'
  KtApplicableCallCandidateInfo:
    candidate = KtSimpleFunctionCall:
      isImplicitInvoke = false
      partiallyAppliedSymbol = KtPartiallyAppliedSymbol:
        dispatchReceiver = KtExplicitReceiverValue:
          expression = this@MyClass
          isSafeNavigation = false
          type = one.MyClass
        extensionReceiver = null
        signature = KtFunctionLikeSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = one/MyClass.foo(<dispatch receiver>: one.MyClass): kotlin.Unit
          valueParameters = []
          callableIdIfNonLocal = one/MyClass.foo
      typeArgumentsMapping = {}
      argumentMapping = {}
    isInBestCandidates = true

KtCallExpression(619,624): 'foo()'
  KtApplicableCallCandidateInfo:
    candidate = KtSimpleFunctionCall:
      isImplicitInvoke = false
      partiallyAppliedSymbol = KtPartiallyAppliedSymbol:
        dispatchReceiver = KtImplicitReceiverValue:
          symbol = <extension receiver>: one.MyClass
          type = one.MyClass
        extensionReceiver = null
        signature = KtFunctionLikeSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = one/MyClass.foo(<dispatch receiver>: one.MyClass): kotlin.Unit
          valueParameters = []
          callableIdIfNonLocal = one/MyClass.foo
      typeArgumentsMapping = {}
      argumentMapping = {}
    isInBestCandidates = true

  KtApplicableCallCandidateInfo:
    candidate = KtSimpleFunctionCall:
      isImplicitInvoke = false
      partiallyAppliedSymbol = KtPartiallyAppliedSymbol:
        dispatchReceiver = KtImplicitReceiverValue:
          symbol = one/MyClass.InnerOuter
          type = one.MyClass.InnerOuter
        extensionReceiver = null
        signature = KtFunctionLikeSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = one/MyClass.InnerOuter.foo(<dispatch receiver>: one.MyClass.InnerOuter): kotlin.Unit
          valueParameters = []
          callableIdIfNonLocal = one/MyClass.InnerOuter.foo
      typeArgumentsMapping = {}
      argumentMapping = {}
    isInBestCandidates = false

  KtApplicableCallCandidateInfo:
    candidate = KtSimpleFunctionCall:
      isImplicitInvoke = false
      partiallyAppliedSymbol = KtPartiallyAppliedSymbol:
        dispatchReceiver = KtImplicitReceiverValue:
          symbol = one/MyClass.InnerOuter.InnerNested
          type = one.MyClass.InnerOuter.InnerNested
        extensionReceiver = null
        signature = KtFunctionLikeSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = one/MyClass.InnerOuter.InnerNested.foo(<dispatch receiver>: one.MyClass.InnerOuter.InnerNested): kotlin.Unit
          valueParameters = []
          callableIdIfNonLocal = one/MyClass.InnerOuter.InnerNested.foo
      typeArgumentsMapping = {}
      argumentMapping = {}
    isInBestCandidates = false

KtCallExpression(650,655): 'foo()'
  KtApplicableCallCandidateInfo:
    candidate = KtSimpleFunctionCall:
      isImplicitInvoke = false
      partiallyAppliedSymbol = KtPartiallyAppliedSymbol:
        dispatchReceiver = KtExplicitReceiverValue:
          expression = this
          isSafeNavigation = false
          type = one.MyClass
        extensionReceiver = null
        signature = KtFunctionLikeSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = one/MyClass.foo(<dispatch receiver>: one.MyClass): kotlin.Unit
          valueParameters = []
          callableIdIfNonLocal = one/MyClass.foo
      typeArgumentsMapping = {}
      argumentMapping = {}
    isInBestCandidates = true

KtCallExpression(693,698): 'foo()'
  KtApplicableCallCandidateInfo:
    candidate = KtSimpleFunctionCall:
      isImplicitInvoke = false
      partiallyAppliedSymbol = KtPartiallyAppliedSymbol:
        dispatchReceiver = KtExplicitReceiverValue:
          expression = this@InnerNested
          isSafeNavigation = false
          type = one.MyClass.InnerOuter.InnerNested
        extensionReceiver = null
        signature = KtFunctionLikeSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = one/MyClass.InnerOuter.InnerNested.foo(<dispatch receiver>: one.MyClass.InnerOuter.InnerNested): kotlin.Unit
          valueParameters = []
          callableIdIfNonLocal = one/MyClass.InnerOuter.InnerNested.foo
      typeArgumentsMapping = {}
      argumentMapping = {}
    isInBestCandidates = true

KtCallExpression(735,740): 'foo()'
  KtApplicableCallCandidateInfo:
    candidate = KtSimpleFunctionCall:
      isImplicitInvoke = false
      partiallyAppliedSymbol = KtPartiallyAppliedSymbol:
        dispatchReceiver = KtExplicitReceiverValue:
          expression = this@InnerOuter
          isSafeNavigation = false
          type = one.MyClass.InnerOuter
        extensionReceiver = null
        signature = KtFunctionLikeSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = one/MyClass.InnerOuter.foo(<dispatch receiver>: one.MyClass.InnerOuter): kotlin.Unit
          valueParameters = []
          callableIdIfNonLocal = one/MyClass.InnerOuter.foo
      typeArgumentsMapping = {}
      argumentMapping = {}
    isInBestCandidates = true

KtCallExpression(774,779): 'foo()'
  KtApplicableCallCandidateInfo:
    candidate = KtSimpleFunctionCall:
      isImplicitInvoke = false
      partiallyAppliedSymbol = KtPartiallyAppliedSymbol:
        dispatchReceiver = KtExplicitReceiverValue:
          expression = this@MyClass
          isSafeNavigation = false
          type = one.MyClass
        extensionReceiver = null
        signature = KtFunctionLikeSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = one/MyClass.foo(<dispatch receiver>: one.MyClass): kotlin.Unit
          valueParameters = []
          callableIdIfNonLocal = one/MyClass.foo
      typeArgumentsMapping = {}
      argumentMapping = {}
    isInBestCandidates = true

