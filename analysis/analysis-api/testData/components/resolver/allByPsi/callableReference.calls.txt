KtSuperTypeCallEntry(118,127): 'MyClass()'
  KtDelegatedConstructorCall:
    kind = SUPER_CALL
    partiallyAppliedSymbol = KtPartiallyAppliedSymbol:
      dispatchReceiver = null
      extensionReceiver = null
      signature = KtFunctionLikeSignature:
        receiverType = null
        returnType = pack.MyClass
        symbol = <constructor>(): pack.MyClass
        valueParameters = []
        callableIdIfNonLocal = null
    typeArgumentsMapping = {}
    argumentMapping = {}

KtSuperTypeCallEntry(258,282): 'ClassWithType<MyClass>()'
  KtDelegatedConstructorCall:
    kind = SUPER_CALL
    partiallyAppliedSymbol = KtPartiallyAppliedSymbol:
      dispatchReceiver = null
      extensionReceiver = null
      signature = KtFunctionLikeSignature:
        receiverType = null
        returnType = pack.ClassWithType<T>
        symbol = <constructor>(): pack.ClassWithType<T>
        valueParameters = []
        callableIdIfNonLocal = null
    typeArgumentsMapping = {
      T -> (pack.MyClass)
    }
    argumentMapping = {}

KtCallExpression(521,538): 'invoke(MyClass())'
  KtSimpleFunctionCall:
    isImplicitInvoke = false
    partiallyAppliedSymbol = KtPartiallyAppliedSymbol:
      dispatchReceiver = KtExplicitReceiverValue:
        expression = MyClass::memberFunction
        isSafeNavigation = false
        type = kotlin.reflect.KFunction1<pack.MyClass, kotlin.Int>
      extensionReceiver = null
      signature = KtFunctionLikeSignature:
        receiverType = null
        returnType = kotlin.Int
        symbol = kotlin/reflect/KFunction1.invoke(<dispatch receiver>: kotlin.reflect.KFunction1<P1, R>, p1: P1): R
        valueParameters = [
          KtVariableLikeSignature:
            name = p1
            receiverType = null
            returnType = pack.MyClass
            symbol = p1: P1
            callableIdIfNonLocal = null
        ]
        callableIdIfNonLocal = kotlin/reflect/KFunction1.invoke
    typeArgumentsMapping = {}
    argumentMapping = {
      MyClass() -> (KtVariableLikeSignature:
        name = p1
        receiverType = null
        returnType = pack.MyClass
        symbol = p1: P1
        callableIdIfNonLocal = null)
    }

KtCallExpression(528,537): 'MyClass()'
  KtSimpleFunctionCall:
    isImplicitInvoke = false
    partiallyAppliedSymbol = KtPartiallyAppliedSymbol:
      dispatchReceiver = null
      extensionReceiver = null
      signature = KtFunctionLikeSignature:
        receiverType = null
        returnType = pack.MyClass
        symbol = <constructor>(): pack.MyClass
        valueParameters = []
        callableIdIfNonLocal = null
    typeArgumentsMapping = {}
    argumentMapping = {}

KtCallExpression(599,614): 'invoke(Child())'
  KtSimpleFunctionCall:
    isImplicitInvoke = false
    partiallyAppliedSymbol = KtPartiallyAppliedSymbol:
      dispatchReceiver = KtExplicitReceiverValue:
        expression = Child::memberFunction
        isSafeNavigation = false
        type = kotlin.reflect.KFunction1<pack.Child, kotlin.Int>
      extensionReceiver = null
      signature = KtFunctionLikeSignature:
        receiverType = null
        returnType = kotlin.Int
        symbol = kotlin/reflect/KFunction1.invoke(<dispatch receiver>: kotlin.reflect.KFunction1<P1, R>, p1: P1): R
        valueParameters = [
          KtVariableLikeSignature:
            name = p1
            receiverType = null
            returnType = pack.Child
            symbol = p1: P1
            callableIdIfNonLocal = null
        ]
        callableIdIfNonLocal = kotlin/reflect/KFunction1.invoke
    typeArgumentsMapping = {}
    argumentMapping = {
      Child() -> (KtVariableLikeSignature:
        name = p1
        receiverType = null
        returnType = pack.Child
        symbol = p1: P1
        callableIdIfNonLocal = null)
    }

KtCallExpression(606,613): 'Child()'
  KtSimpleFunctionCall:
    isImplicitInvoke = false
    partiallyAppliedSymbol = KtPartiallyAppliedSymbol:
      dispatchReceiver = null
      extensionReceiver = null
      signature = KtFunctionLikeSignature:
        receiverType = null
        returnType = pack.Child
        symbol = <constructor>(): pack.Child
        valueParameters = []
        callableIdIfNonLocal = null
    typeArgumentsMapping = {}
    argumentMapping = {}

KtCallExpression(890,913): 'invoke(ChildWithType())'
  KtSimpleFunctionCall:
    isImplicitInvoke = false
    partiallyAppliedSymbol = KtPartiallyAppliedSymbol:
      dispatchReceiver = KtExplicitReceiverValue:
        expression = ChildWithType::propertyWithType
        isSafeNavigation = false
        type = kotlin.reflect.KMutableProperty1<pack.ChildWithType, pack.MyClass?>
      extensionReceiver = null
      signature = KtFunctionLikeSignature:
        receiverType = null
        returnType = pack.MyClass?
        symbol = kotlin/reflect/KMutableProperty1.invoke(<dispatch receiver>: kotlin.reflect.KMutableProperty1<T, V>, p1: T): V
        valueParameters = [
          KtVariableLikeSignature:
            name = p1
            receiverType = null
            returnType = pack.ChildWithType
            symbol = p1: T
            callableIdIfNonLocal = null
        ]
        callableIdIfNonLocal = kotlin/reflect/KMutableProperty1.invoke
    typeArgumentsMapping = {}
    argumentMapping = {
      ChildWithType() -> (KtVariableLikeSignature:
        name = p1
        receiverType = null
        returnType = pack.ChildWithType
        symbol = p1: T
        callableIdIfNonLocal = null)
    }

KtCallExpression(897,912): 'ChildWithType()'
  KtSimpleFunctionCall:
    isImplicitInvoke = false
    partiallyAppliedSymbol = KtPartiallyAppliedSymbol:
      dispatchReceiver = null
      extensionReceiver = null
      signature = KtFunctionLikeSignature:
        receiverType = null
        returnType = pack.ChildWithType
        symbol = <constructor>(): pack.ChildWithType
        valueParameters = []
        callableIdIfNonLocal = null
    typeArgumentsMapping = {}
    argumentMapping = {}

