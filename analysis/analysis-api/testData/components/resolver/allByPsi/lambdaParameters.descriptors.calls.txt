KtCallExpression(85,94): 'action1()'
  KtSimpleFunctionCall:
    isImplicitInvoke = true
    partiallyAppliedSymbol = KtPartiallyAppliedSymbol:
      dispatchReceiver = KtExplicitReceiverValue:
        expression = action1
        isSafeNavigation = false
        type = kotlin.Function1<kotlin.Int, kotlin.Unit>
      extensionReceiver = KtExplicitReceiverValue:
        expression = prop
        isSafeNavigation = false
        type = kotlin.Int
      signature = KtFunctionLikeSignature:
        receiverType = kotlin.Int
        returnType = kotlin.Unit
        symbol = kotlin/Function1.invoke(<extension receiver>: P1<dispatch receiver>: kotlin.Function1<P1, R>): R
        valueParameters = []
        callableIdIfNonLocal = kotlin/Function1.invoke
    typeArgumentsMapping = {}
    argumentMapping = {}

KtCallExpression(99,112): 'action1(prop)'
  KtSimpleFunctionCall:
    isImplicitInvoke = true
    partiallyAppliedSymbol = KtPartiallyAppliedSymbol:
      dispatchReceiver = KtExplicitReceiverValue:
        expression = action1
        isSafeNavigation = false
        type = kotlin.Function1<kotlin.Int, kotlin.Unit>
      extensionReceiver = null
      signature = KtFunctionLikeSignature:
        receiverType = null
        returnType = kotlin.Unit
        symbol = kotlin/Function1.invoke(<dispatch receiver>: kotlin.Function1<P1, R>, p1: P1): R
        valueParameters = [
          KtVariableLikeSignature:
            name = p1
            receiverType = null
            returnType = kotlin.Int
            symbol = p1: P1
            callableIdIfNonLocal = null
        ]
        callableIdIfNonLocal = kotlin/Function1.invoke
    typeArgumentsMapping = {}
    argumentMapping = {
      prop -> (KtVariableLikeSignature:
        name = p1
        receiverType = null
        returnType = kotlin.Int
        symbol = p1: P1
        callableIdIfNonLocal = null)
    }

KtCallExpression(123,132): 'action2()'
  KaCallResolutionError:
    candidateCalls = []
    diagnostic = ERROR<UNRESOLVED_REFERENCE: Unresolved reference: action2>

KtCallExpression(151,164): 'action2(prop)'
  KtSimpleFunctionCall:
    isImplicitInvoke = true
    partiallyAppliedSymbol = KtPartiallyAppliedSymbol:
      dispatchReceiver = KtExplicitReceiverValue:
        expression = action2
        isSafeNavigation = false
        type = kotlin.Function1<kotlin.Int, kotlin.Unit>
      extensionReceiver = null
      signature = KtFunctionLikeSignature:
        receiverType = null
        returnType = kotlin.Unit
        symbol = kotlin/Function1.invoke(<dispatch receiver>: kotlin.Function1<P1, R>, p1: P1): R
        valueParameters = [
          KtVariableLikeSignature:
            name = p1
            receiverType = null
            returnType = kotlin.Int
            symbol = p1: P1
            callableIdIfNonLocal = null
        ]
        callableIdIfNonLocal = kotlin/Function1.invoke
    typeArgumentsMapping = {}
    argumentMapping = {
      prop -> (KtVariableLikeSignature:
        name = p1
        receiverType = null
        returnType = kotlin.Int
        symbol = p1: P1
        callableIdIfNonLocal = null)
    }

