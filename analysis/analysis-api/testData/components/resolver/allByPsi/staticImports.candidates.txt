KtCallExpression(430,435): 'foo()'
  KtApplicableCallCandidateInfo:
    candidate = KtSimpleFunctionCall:
      isImplicitInvoke = false
      partiallyAppliedSymbol = KtPartiallyAppliedSymbol:
        dispatchReceiver = KtExplicitReceiverValue:
          expression = TopLevelObject
          isSafeNavigation = false
          type = one.two.TopLevelObject
        extensionReceiver = null
        signature = KtFunctionLikeSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = one/two/TopLevelObject.foo(<dispatch receiver>: one.two.TopLevelObject): kotlin.Unit
          valueParameters = []
          callableIdIfNonLocal = one/two/TopLevelObject.foo
      typeArgumentsMapping = {}
      argumentMapping = {}
    isInBestCandidates = true

KtCallExpression(458,463): 'foo()'
  KtApplicableCallCandidateInfo:
    candidate = KtSimpleFunctionCall:
      isImplicitInvoke = false
      partiallyAppliedSymbol = KtPartiallyAppliedSymbol:
        dispatchReceiver = KtExplicitReceiverValue:
          expression = foo()
          isSafeNavigation = false
          type = one.two.TopLevelObject
        extensionReceiver = null
        signature = KtFunctionLikeSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = one/two/TopLevelObject.foo(<dispatch receiver>: one.two.TopLevelObject): kotlin.Unit
          valueParameters = []
          callableIdIfNonLocal = one/two/TopLevelObject.foo
      typeArgumentsMapping = {}
      argumentMapping = {}
    isInBestCandidates = true

KtCallExpression(687,692): 'baz()'
  KtApplicableCallCandidateInfo:
    candidate = KtSimpleFunctionCall:
      isImplicitInvoke = false
      partiallyAppliedSymbol = KtPartiallyAppliedSymbol:
        dispatchReceiver = KtExplicitReceiverValue:
          expression = TopLevelObject.NestedObject
          isSafeNavigation = false
          type = one.two.TopLevelObject.NestedObject
        extensionReceiver = null
        signature = KtFunctionLikeSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = one/two/TopLevelObject.NestedObject.baz(<dispatch receiver>: one.two.TopLevelObject.NestedObject): kotlin.Unit
          valueParameters = []
          callableIdIfNonLocal = one/two/TopLevelObject.NestedObject.baz
      typeArgumentsMapping = {}
      argumentMapping = {}
    isInBestCandidates = true

KtCallExpression(734,739): 'baz()'
  KtApplicableCallCandidateInfo:
    candidate = KtSimpleFunctionCall:
      isImplicitInvoke = false
      partiallyAppliedSymbol = KtPartiallyAppliedSymbol:
        dispatchReceiver = KtExplicitReceiverValue:
          expression = NestedObject
          isSafeNavigation = false
          type = one.two.TopLevelObject.NestedObject
        extensionReceiver = null
        signature = KtFunctionLikeSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = one/two/TopLevelObject.NestedObject.baz(<dispatch receiver>: one.two.TopLevelObject.NestedObject): kotlin.Unit
          valueParameters = []
          callableIdIfNonLocal = one/two/TopLevelObject.NestedObject.baz
      typeArgumentsMapping = {}
      argumentMapping = {}
    isInBestCandidates = true

KtCallExpression(762,767): 'baz()'
  KtApplicableCallCandidateInfo:
    candidate = KtSimpleFunctionCall:
      isImplicitInvoke = false
      partiallyAppliedSymbol = KtPartiallyAppliedSymbol:
        dispatchReceiver = KtExplicitReceiverValue:
          expression = baz()
          isSafeNavigation = false
          type = one.two.TopLevelObject.NestedObject
        extensionReceiver = null
        signature = KtFunctionLikeSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = one/two/TopLevelObject.NestedObject.baz(<dispatch receiver>: one.two.TopLevelObject.NestedObject): kotlin.Unit
          valueParameters = []
          callableIdIfNonLocal = one/two/TopLevelObject.NestedObject.baz
      typeArgumentsMapping = {}
      argumentMapping = {}
    isInBestCandidates = true

KtOperationReferenceExpression(903,904): '='
  KtApplicableCallCandidateInfo:
    candidate = KtSimpleVariableAccessCall:
      partiallyAppliedSymbol = KtPartiallyAppliedSymbol:
        dispatchReceiver = KtExplicitReceiverValue:
          expression = doo = "str"
          isSafeNavigation = false
          type = one.two.TopLevelObject.NestedObject
        extensionReceiver = null
        signature = KtVariableLikeSignature:
          name = doo
          receiverType = null
          returnType = kotlin.String
          symbol = var doo: kotlin.String
          callableIdIfNonLocal = one/two/TopLevelObject.NestedObject.doo
      simpleAccess = Write:
        value = "str"
      typeArgumentsMapping = {}
    isInBestCandidates = true

