KtAnnotationEntry(43,54): '@Repeatable'
  KtAnnotationCall:
    partiallyAppliedSymbol = KtPartiallyAppliedSymbol:
      dispatchReceiver = null
      extensionReceiver = null
      signature = KtFunctionLikeSignature:
        receiverType = null
        returnType = kotlin.annotation.Repeatable
        symbol = <constructor>(): kotlin.annotation.Repeatable
        valueParameters = []
        callableIdIfNonLocal = null
    typeArgumentsMapping = {}
    argumentMapping = {}

KtAnnotationEntry(106,117): '@Repeatable'
  KtAnnotationCall:
    partiallyAppliedSymbol = KtPartiallyAppliedSymbol:
      dispatchReceiver = null
      extensionReceiver = null
      signature = KtFunctionLikeSignature:
        receiverType = null
        returnType = kotlin.annotation.Repeatable
        symbol = <constructor>(): kotlin.annotation.Repeatable
        valueParameters = []
        callableIdIfNonLocal = null
    typeArgumentsMapping = {}
    argumentMapping = {}

KtAnnotationEntry(169,180): '@Repeatable'
  KtAnnotationCall:
    partiallyAppliedSymbol = KtPartiallyAppliedSymbol:
      dispatchReceiver = null
      extensionReceiver = null
      signature = KtFunctionLikeSignature:
        receiverType = null
        returnType = kotlin.annotation.Repeatable
        symbol = <constructor>(): kotlin.annotation.Repeatable
        valueParameters = []
        callableIdIfNonLocal = null
    typeArgumentsMapping = {}
    argumentMapping = {}

KtAnnotationEntry(407,432): '@AnnoWithArray([1, 2, 3])'
  KtAnnotationCall:
    partiallyAppliedSymbol = KtPartiallyAppliedSymbol:
      dispatchReceiver = null
      extensionReceiver = null
      signature = KtFunctionLikeSignature:
        receiverType = null
        returnType = one.AnnoWithArray
        symbol = <constructor>(arr: kotlin.IntArray): one.AnnoWithArray
        valueParameters = [
          KtVariableLikeSignature:
            name = arr
            receiverType = null
            returnType = kotlin.IntArray
            symbol = arr: kotlin.IntArray
            callableIdIfNonLocal = null
        ]
        callableIdIfNonLocal = null
    typeArgumentsMapping = {}
    argumentMapping = {
      [1, 2, 3] -> (KtVariableLikeSignature:
        name = arr
        receiverType = null
        returnType = kotlin.IntArray
        symbol = arr: kotlin.IntArray
        callableIdIfNonLocal = null)
    }

KtCollectionLiteralExpression(422,431): '[1, 2, 3]'
  KtSimpleFunctionCall:
    isImplicitInvoke = false
    partiallyAppliedSymbol = KtPartiallyAppliedSymbol:
      dispatchReceiver = null
      extensionReceiver = null
      signature = KtFunctionLikeSignature:
        receiverType = null
        returnType = kotlin.IntArray
        symbol = kotlin/intArrayOf(vararg elements: kotlin.Int): kotlin.IntArray
        valueParameters = [
          KtVariableLikeSignature:
            name = elements
            receiverType = null
            returnType = kotlin.Int
            symbol = vararg elements: kotlin.Int
            callableIdIfNonLocal = null
        ]
        callableIdIfNonLocal = kotlin/intArrayOf
    typeArgumentsMapping = {}
    argumentMapping = {
      1 -> (KtVariableLikeSignature:
        name = elements
        receiverType = null
        returnType = kotlin.Int
        symbol = vararg elements: kotlin.Int
        callableIdIfNonLocal = null),
      2 -> (KtVariableLikeSignature:
        name = elements
        receiverType = null
        returnType = kotlin.Int
        symbol = vararg elements: kotlin.Int
        callableIdIfNonLocal = null),
      3 -> (KtVariableLikeSignature:
        name = elements
        receiverType = null
        returnType = kotlin.Int
        symbol = vararg elements: kotlin.Int
        callableIdIfNonLocal = null)
    }

KtAnnotationEntry(433,464): '@AnnoWithArray(arr = [4, 5, 6])'
  KtAnnotationCall:
    partiallyAppliedSymbol = KtPartiallyAppliedSymbol:
      dispatchReceiver = null
      extensionReceiver = null
      signature = KtFunctionLikeSignature:
        receiverType = null
        returnType = one.AnnoWithArray
        symbol = <constructor>(arr: kotlin.IntArray): one.AnnoWithArray
        valueParameters = [
          KtVariableLikeSignature:
            name = arr
            receiverType = null
            returnType = kotlin.IntArray
            symbol = arr: kotlin.IntArray
            callableIdIfNonLocal = null
        ]
        callableIdIfNonLocal = null
    typeArgumentsMapping = {}
    argumentMapping = {
      [4, 5, 6] -> (KtVariableLikeSignature:
        name = arr
        receiverType = null
        returnType = kotlin.IntArray
        symbol = arr: kotlin.IntArray
        callableIdIfNonLocal = null)
    }

KtCollectionLiteralExpression(454,463): '[4, 5, 6]'
  KtSimpleFunctionCall:
    isImplicitInvoke = false
    partiallyAppliedSymbol = KtPartiallyAppliedSymbol:
      dispatchReceiver = null
      extensionReceiver = null
      signature = KtFunctionLikeSignature:
        receiverType = null
        returnType = kotlin.IntArray
        symbol = kotlin/intArrayOf(vararg elements: kotlin.Int): kotlin.IntArray
        valueParameters = [
          KtVariableLikeSignature:
            name = elements
            receiverType = null
            returnType = kotlin.Int
            symbol = vararg elements: kotlin.Int
            callableIdIfNonLocal = null
        ]
        callableIdIfNonLocal = kotlin/intArrayOf
    typeArgumentsMapping = {}
    argumentMapping = {
      4 -> (KtVariableLikeSignature:
        name = elements
        receiverType = null
        returnType = kotlin.Int
        symbol = vararg elements: kotlin.Int
        callableIdIfNonLocal = null),
      5 -> (KtVariableLikeSignature:
        name = elements
        receiverType = null
        returnType = kotlin.Int
        symbol = vararg elements: kotlin.Int
        callableIdIfNonLocal = null),
      6 -> (KtVariableLikeSignature:
        name = elements
        receiverType = null
        returnType = kotlin.Int
        symbol = vararg elements: kotlin.Int
        callableIdIfNonLocal = null)
    }

KtAnnotationEntry(465,500): '@AnnoWithArray(intArrayOf(7, 8, 9))'
  KtAnnotationCall:
    partiallyAppliedSymbol = KtPartiallyAppliedSymbol:
      dispatchReceiver = null
      extensionReceiver = null
      signature = KtFunctionLikeSignature:
        receiverType = null
        returnType = one.AnnoWithArray
        symbol = <constructor>(arr: kotlin.IntArray): one.AnnoWithArray
        valueParameters = [
          KtVariableLikeSignature:
            name = arr
            receiverType = null
            returnType = kotlin.IntArray
            symbol = arr: kotlin.IntArray
            callableIdIfNonLocal = null
        ]
        callableIdIfNonLocal = null
    typeArgumentsMapping = {}
    argumentMapping = {
      intArrayOf(7, 8, 9) -> (KtVariableLikeSignature:
        name = arr
        receiverType = null
        returnType = kotlin.IntArray
        symbol = arr: kotlin.IntArray
        callableIdIfNonLocal = null)
    }

KtCallExpression(480,499): 'intArrayOf(7, 8, 9)'
  KtSimpleFunctionCall:
    isImplicitInvoke = false
    partiallyAppliedSymbol = KtPartiallyAppliedSymbol:
      dispatchReceiver = null
      extensionReceiver = null
      signature = KtFunctionLikeSignature:
        receiverType = null
        returnType = kotlin.IntArray
        symbol = kotlin/intArrayOf(vararg elements: kotlin.Int): kotlin.IntArray
        valueParameters = [
          KtVariableLikeSignature:
            name = elements
            receiverType = null
            returnType = kotlin.Int
            symbol = vararg elements: kotlin.Int
            callableIdIfNonLocal = null
        ]
        callableIdIfNonLocal = kotlin/intArrayOf
    typeArgumentsMapping = {}
    argumentMapping = {
      7 -> (KtVariableLikeSignature:
        name = elements
        receiverType = null
        returnType = kotlin.Int
        symbol = vararg elements: kotlin.Int
        callableIdIfNonLocal = null),
      8 -> (KtVariableLikeSignature:
        name = elements
        receiverType = null
        returnType = kotlin.Int
        symbol = vararg elements: kotlin.Int
        callableIdIfNonLocal = null),
      9 -> (KtVariableLikeSignature:
        name = elements
        receiverType = null
        returnType = kotlin.Int
        symbol = vararg elements: kotlin.Int
        callableIdIfNonLocal = null)
    }

KtAnnotationEntry(501,539): '@AnnoWithKClass(AnnoWithKClass::class)'
  KtAnnotationCall:
    partiallyAppliedSymbol = KtPartiallyAppliedSymbol:
      dispatchReceiver = null
      extensionReceiver = null
      signature = KtFunctionLikeSignature:
        receiverType = null
        returnType = one.AnnoWithKClass
        symbol = <constructor>(k: kotlin.reflect.KClass<*>): one.AnnoWithKClass
        valueParameters = [
          KtVariableLikeSignature:
            name = k
            receiverType = null
            returnType = kotlin.reflect.KClass<*>
            symbol = k: kotlin.reflect.KClass<*>
            callableIdIfNonLocal = null
        ]
        callableIdIfNonLocal = null
    typeArgumentsMapping = {}
    argumentMapping = {
      AnnoWithKClass::class -> (KtVariableLikeSignature:
        name = k
        receiverType = null
        returnType = kotlin.reflect.KClass<*>
        symbol = k: kotlin.reflect.KClass<*>
        callableIdIfNonLocal = null)
    }

KtAnnotationEntry(542,583): 'AnnoWithKClass(one.AnnoWithKClass::class)'
  KtAnnotationCall:
    partiallyAppliedSymbol = KtPartiallyAppliedSymbol:
      dispatchReceiver = null
      extensionReceiver = null
      signature = KtFunctionLikeSignature:
        receiverType = null
        returnType = one.AnnoWithKClass
        symbol = <constructor>(k: kotlin.reflect.KClass<*>): one.AnnoWithKClass
        valueParameters = [
          KtVariableLikeSignature:
            name = k
            receiverType = null
            returnType = kotlin.reflect.KClass<*>
            symbol = k: kotlin.reflect.KClass<*>
            callableIdIfNonLocal = null
        ]
        callableIdIfNonLocal = null
    typeArgumentsMapping = {}
    argumentMapping = {
      one.AnnoWithKClass::class -> (KtVariableLikeSignature:
        name = k
        receiverType = null
        returnType = kotlin.reflect.KClass<*>
        symbol = k: kotlin.reflect.KClass<*>
        callableIdIfNonLocal = null)
    }

KtAnnotationEntry(585,659): '@AnnoWithArrayOfKClass([AnnoWithKClass::class, one.AnnoWithKClass::class])'
  KtAnnotationCall:
    partiallyAppliedSymbol = KtPartiallyAppliedSymbol:
      dispatchReceiver = null
      extensionReceiver = null
      signature = KtFunctionLikeSignature:
        receiverType = null
        returnType = one.AnnoWithArrayOfKClass
        symbol = <constructor>(a: kotlin.Array<kotlin.reflect.KClass<*>>): one.AnnoWithArrayOfKClass
        valueParameters = [
          KtVariableLikeSignature:
            name = a
            receiverType = null
            returnType = kotlin.Array<kotlin.reflect.KClass<*>>
            symbol = a: kotlin.Array<kotlin.reflect.KClass<*>>
            callableIdIfNonLocal = null
        ]
        callableIdIfNonLocal = null
    typeArgumentsMapping = {}
    argumentMapping = {
      [AnnoWithKClass::class, one.AnnoWithKClass::class] -> (KtVariableLikeSignature:
        name = a
        receiverType = null
        returnType = kotlin.Array<kotlin.reflect.KClass<*>>
        symbol = a: kotlin.Array<kotlin.reflect.KClass<*>>
        callableIdIfNonLocal = null)
    }

KtCollectionLiteralExpression(608,658): '[AnnoWithKClass::class, one.AnnoWithKClass::class]'
  KtSimpleFunctionCall:
    isImplicitInvoke = false
    partiallyAppliedSymbol = KtPartiallyAppliedSymbol:
      dispatchReceiver = null
      extensionReceiver = null
      signature = KtFunctionLikeSignature:
        receiverType = null
        returnType = kotlin.Array<kotlin.reflect.KClass<*>>
        symbol = kotlin/arrayOf(vararg elements: T): kotlin.Array<T>
        valueParameters = [
          KtVariableLikeSignature:
            name = elements
            receiverType = null
            returnType = kotlin.reflect.KClass<*>
            symbol = vararg elements: T
            callableIdIfNonLocal = null
        ]
        callableIdIfNonLocal = kotlin/arrayOf
    typeArgumentsMapping = {
      T -> (kotlin.reflect.KClass<*>)
    }
    argumentMapping = {
      AnnoWithKClass::class -> (KtVariableLikeSignature:
        name = elements
        receiverType = null
        returnType = kotlin.reflect.KClass<*>
        symbol = vararg elements: T
        callableIdIfNonLocal = null),
      one.AnnoWithKClass::class -> (KtVariableLikeSignature:
        name = elements
        receiverType = null
        returnType = kotlin.reflect.KClass<*>
        symbol = vararg elements: T
        callableIdIfNonLocal = null)
    }

KtAnnotationEntry(660,767): '@AnnoWithAnotherAnnotation(arrayOf(one.AnnoWithArray([10, 11, 12]), AnnoWithArray(intArrayOf(13, 14, 15))))'
  KtAnnotationCall:
    partiallyAppliedSymbol = KtPartiallyAppliedSymbol:
      dispatchReceiver = null
      extensionReceiver = null
      signature = KtFunctionLikeSignature:
        receiverType = null
        returnType = one.AnnoWithAnotherAnnotation
        symbol = <constructor>(another: kotlin.Array<one.AnnoWithArray>): one.AnnoWithAnotherAnnotation
        valueParameters = [
          KtVariableLikeSignature:
            name = another
            receiverType = null
            returnType = kotlin.Array<one.AnnoWithArray>
            symbol = another: kotlin.Array<one.AnnoWithArray>
            callableIdIfNonLocal = null
        ]
        callableIdIfNonLocal = null
    typeArgumentsMapping = {}
    argumentMapping = {
      arrayOf(one.AnnoWithArray([10, 11, 12]), AnnoWithArray(intArrayOf(13, 14, 15))) -> (KtVariableLikeSignature:
        name = another
        receiverType = null
        returnType = kotlin.Array<one.AnnoWithArray>
        symbol = another: kotlin.Array<one.AnnoWithArray>
        callableIdIfNonLocal = null)
    }

KtCallExpression(687,766): 'arrayOf(one.AnnoWithArray([10, 11, 12]), AnnoWithArray(intArrayOf(13, 14, 15)))'
  KtSimpleFunctionCall:
    isImplicitInvoke = false
    partiallyAppliedSymbol = KtPartiallyAppliedSymbol:
      dispatchReceiver = null
      extensionReceiver = null
      signature = KtFunctionLikeSignature:
        receiverType = null
        returnType = kotlin.Array<one.AnnoWithArray>
        symbol = kotlin/arrayOf(vararg elements: T): kotlin.Array<T>
        valueParameters = [
          KtVariableLikeSignature:
            name = elements
            receiverType = null
            returnType = one.AnnoWithArray
            symbol = vararg elements: T
            callableIdIfNonLocal = null
        ]
        callableIdIfNonLocal = kotlin/arrayOf
    typeArgumentsMapping = {
      T -> (one.AnnoWithArray)
    }
    argumentMapping = {
      one.AnnoWithArray([10, 11, 12]) -> (KtVariableLikeSignature:
        name = elements
        receiverType = null
        returnType = one.AnnoWithArray
        symbol = vararg elements: T
        callableIdIfNonLocal = null),
      AnnoWithArray(intArrayOf(13, 14, 15)) -> (KtVariableLikeSignature:
        name = elements
        receiverType = null
        returnType = one.AnnoWithArray
        symbol = vararg elements: T
        callableIdIfNonLocal = null)
    }

KtCallExpression(699,726): 'AnnoWithArray([10, 11, 12])'
  KtSimpleFunctionCall:
    isImplicitInvoke = false
    partiallyAppliedSymbol = KtPartiallyAppliedSymbol:
      dispatchReceiver = null
      extensionReceiver = null
      signature = KtFunctionLikeSignature:
        receiverType = null
        returnType = one.AnnoWithArray
        symbol = <constructor>(arr: kotlin.IntArray): one.AnnoWithArray
        valueParameters = [
          KtVariableLikeSignature:
            name = arr
            receiverType = null
            returnType = kotlin.IntArray
            symbol = arr: kotlin.IntArray
            callableIdIfNonLocal = null
        ]
        callableIdIfNonLocal = null
    typeArgumentsMapping = {}
    argumentMapping = {
      [10, 11, 12] -> (KtVariableLikeSignature:
        name = arr
        receiverType = null
        returnType = kotlin.IntArray
        symbol = arr: kotlin.IntArray
        callableIdIfNonLocal = null)
    }

KtCollectionLiteralExpression(713,725): '[10, 11, 12]'
  KtSimpleFunctionCall:
    isImplicitInvoke = false
    partiallyAppliedSymbol = KtPartiallyAppliedSymbol:
      dispatchReceiver = null
      extensionReceiver = null
      signature = KtFunctionLikeSignature:
        receiverType = null
        returnType = kotlin.IntArray
        symbol = kotlin/intArrayOf(vararg elements: kotlin.Int): kotlin.IntArray
        valueParameters = [
          KtVariableLikeSignature:
            name = elements
            receiverType = null
            returnType = kotlin.Int
            symbol = vararg elements: kotlin.Int
            callableIdIfNonLocal = null
        ]
        callableIdIfNonLocal = kotlin/intArrayOf
    typeArgumentsMapping = {}
    argumentMapping = {
      10 -> (KtVariableLikeSignature:
        name = elements
        receiverType = null
        returnType = kotlin.Int
        symbol = vararg elements: kotlin.Int
        callableIdIfNonLocal = null),
      11 -> (KtVariableLikeSignature:
        name = elements
        receiverType = null
        returnType = kotlin.Int
        symbol = vararg elements: kotlin.Int
        callableIdIfNonLocal = null),
      12 -> (KtVariableLikeSignature:
        name = elements
        receiverType = null
        returnType = kotlin.Int
        symbol = vararg elements: kotlin.Int
        callableIdIfNonLocal = null)
    }

KtCallExpression(728,765): 'AnnoWithArray(intArrayOf(13, 14, 15))'
  KtSimpleFunctionCall:
    isImplicitInvoke = false
    partiallyAppliedSymbol = KtPartiallyAppliedSymbol:
      dispatchReceiver = null
      extensionReceiver = null
      signature = KtFunctionLikeSignature:
        receiverType = null
        returnType = one.AnnoWithArray
        symbol = <constructor>(arr: kotlin.IntArray): one.AnnoWithArray
        valueParameters = [
          KtVariableLikeSignature:
            name = arr
            receiverType = null
            returnType = kotlin.IntArray
            symbol = arr: kotlin.IntArray
            callableIdIfNonLocal = null
        ]
        callableIdIfNonLocal = null
    typeArgumentsMapping = {}
    argumentMapping = {
      intArrayOf(13, 14, 15) -> (KtVariableLikeSignature:
        name = arr
        receiverType = null
        returnType = kotlin.IntArray
        symbol = arr: kotlin.IntArray
        callableIdIfNonLocal = null)
    }

KtCallExpression(742,764): 'intArrayOf(13, 14, 15)'
  KtSimpleFunctionCall:
    isImplicitInvoke = false
    partiallyAppliedSymbol = KtPartiallyAppliedSymbol:
      dispatchReceiver = null
      extensionReceiver = null
      signature = KtFunctionLikeSignature:
        receiverType = null
        returnType = kotlin.IntArray
        symbol = kotlin/intArrayOf(vararg elements: kotlin.Int): kotlin.IntArray
        valueParameters = [
          KtVariableLikeSignature:
            name = elements
            receiverType = null
            returnType = kotlin.Int
            symbol = vararg elements: kotlin.Int
            callableIdIfNonLocal = null
        ]
        callableIdIfNonLocal = kotlin/intArrayOf
    typeArgumentsMapping = {}
    argumentMapping = {
      13 -> (KtVariableLikeSignature:
        name = elements
        receiverType = null
        returnType = kotlin.Int
        symbol = vararg elements: kotlin.Int
        callableIdIfNonLocal = null),
      14 -> (KtVariableLikeSignature:
        name = elements
        receiverType = null
        returnType = kotlin.Int
        symbol = vararg elements: kotlin.Int
        callableIdIfNonLocal = null),
      15 -> (KtVariableLikeSignature:
        name = elements
        receiverType = null
        returnType = kotlin.Int
        symbol = vararg elements: kotlin.Int
        callableIdIfNonLocal = null)
    }

KtAnnotationEntry(768,810): '@AnnoWithString(stringConstant + " 1.2.3")'
  KtAnnotationCall:
    partiallyAppliedSymbol = KtPartiallyAppliedSymbol:
      dispatchReceiver = null
      extensionReceiver = null
      signature = KtFunctionLikeSignature:
        receiverType = null
        returnType = one.AnnoWithString
        symbol = <constructor>(str: kotlin.String): one.AnnoWithString
        valueParameters = [
          KtVariableLikeSignature:
            name = str
            receiverType = null
            returnType = kotlin.String
            symbol = str: kotlin.String
            callableIdIfNonLocal = null
        ]
        callableIdIfNonLocal = null
    typeArgumentsMapping = {}
    argumentMapping = {
      stringConstant + " 1.2.3" -> (KtVariableLikeSignature:
        name = str
        receiverType = null
        returnType = kotlin.String
        symbol = str: kotlin.String
        callableIdIfNonLocal = null)
    }

KtOperationReferenceExpression(799,800): '+'
  KtSimpleFunctionCall:
    isImplicitInvoke = false
    partiallyAppliedSymbol = KtPartiallyAppliedSymbol:
      dispatchReceiver = KtExplicitReceiverValue:
        expression = stringConstant
        isSafeNavigation = false
        type = kotlin.String
      extensionReceiver = null
      signature = KtFunctionLikeSignature:
        receiverType = null
        returnType = kotlin.String
        symbol = kotlin/String.plus(<dispatch receiver>: kotlin.String, other: kotlin.Any?): kotlin.String
        valueParameters = [
          KtVariableLikeSignature:
            name = other
            receiverType = null
            returnType = kotlin.Any?
            symbol = other: kotlin.Any?
            callableIdIfNonLocal = null
        ]
        callableIdIfNonLocal = kotlin/String.plus
    typeArgumentsMapping = {}
    argumentMapping = {
      " 1.2.3" -> (KtVariableLikeSignature:
        name = other
        receiverType = null
        returnType = kotlin.Any?
        symbol = other: kotlin.Any?
        callableIdIfNonLocal = null)
    }

