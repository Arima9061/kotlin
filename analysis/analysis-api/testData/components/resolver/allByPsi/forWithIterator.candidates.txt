KtCallExpression(297,318): 'IntProgression(1, 10)'
  KtApplicableCallCandidateInfo:
    candidate = KtSimpleFunctionCall:
      isImplicitInvoke = false
      partiallyAppliedSymbol = KtPartiallyAppliedSymbol:
        dispatchReceiver = null
        extensionReceiver = null
        signature = KtFunctionLikeSignature:
          receiverType = null
          returnType = f.IntProgression
          symbol = <constructor>(start: kotlin.Int, end: kotlin.Int): f.IntProgression
          valueParameters = [
            KtVariableLikeSignature:
              name = start
              receiverType = null
              returnType = kotlin.Int
              symbol = start: kotlin.Int
              callableIdIfNonLocal = null,
            KtVariableLikeSignature:
              name = end
              receiverType = null
              returnType = kotlin.Int
              symbol = end: kotlin.Int
              callableIdIfNonLocal = null
          ]
          callableIdIfNonLocal = null
      typeArgumentsMapping = {}
      argumentMapping = {
        1 -> (KtVariableLikeSignature:
          name = start
          receiverType = null
          returnType = kotlin.Int
          symbol = start: kotlin.Int
          callableIdIfNonLocal = null),
        10 -> (KtVariableLikeSignature:
          name = end
          receiverType = null
          returnType = kotlin.Int
          symbol = end: kotlin.Int
          callableIdIfNonLocal = null)
      }
    isInBestCandidates = true

  KtInapplicableCallCandidateInfo:
    diagnostic = ERROR<INVISIBLE_REFERENCE: Cannot access 'constructor(start: Int, endInclusive: Int, step: Int): IntProgression': it is internal in 'kotlin/ranges/IntProgression'.>
    candidate = KtSimpleFunctionCall:
      isImplicitInvoke = false
      partiallyAppliedSymbol = KtPartiallyAppliedSymbol:
        dispatchReceiver = null
        extensionReceiver = null
        signature = KtFunctionLikeSignature:
          receiverType = null
          returnType = kotlin.ranges.IntProgression
          symbol = <constructor>(start: kotlin.Int, endInclusive: kotlin.Int, step: kotlin.Int): kotlin.ranges.IntProgression
          valueParameters = [
            KtVariableLikeSignature:
              name = start
              receiverType = null
              returnType = kotlin.Int
              symbol = start: kotlin.Int
              callableIdIfNonLocal = null,
            KtVariableLikeSignature:
              name = endInclusive
              receiverType = null
              returnType = kotlin.Int
              symbol = endInclusive: kotlin.Int
              callableIdIfNonLocal = null,
            KtVariableLikeSignature:
              name = step
              receiverType = null
              returnType = kotlin.Int
              symbol = step: kotlin.Int
              callableIdIfNonLocal = null
          ]
          callableIdIfNonLocal = null
      typeArgumentsMapping = {}
      argumentMapping = {}
    isInBestCandidates = false
