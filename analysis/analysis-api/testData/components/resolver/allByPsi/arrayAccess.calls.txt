KtArrayAccessExpression(74,81): 'list[0]'
  KtSimpleFunctionCall:
    isImplicitInvoke = false
    partiallyAppliedSymbol = KtPartiallyAppliedSymbol:
      dispatchReceiver = KtExplicitReceiverValue:
        expression = list
        isSafeNavigation = false
        type = kotlin.collections.MutableList<kotlin.Int>
      extensionReceiver = null
      signature = KtFunctionLikeSignature:
        receiverType = null
        returnType = kotlin.Int
        symbol = kotlin/collections/MutableList.get(<dispatch receiver>: kotlin.collections.MutableList<E>, index: kotlin.Int): E
        valueParameters = [
          KtVariableLikeSignature:
            name = index
            receiverType = null
            returnType = kotlin.Int
            symbol = index: kotlin.Int
            callableIdIfNonLocal = null
        ]
        callableIdIfNonLocal = kotlin/collections/MutableList.get
    typeArgumentsMapping = {}
    argumentMapping = {
      0 -> (KtVariableLikeSignature:
        name = index
        receiverType = null
        returnType = kotlin.Int
        symbol = index: kotlin.Int
        callableIdIfNonLocal = null)
    }

KtCallExpression(111,129): 'get(implicitIndex)'
  KtSimpleFunctionCall:
    isImplicitInvoke = false
    partiallyAppliedSymbol = KtPartiallyAppliedSymbol:
      dispatchReceiver = KtExplicitReceiverValue:
        expression = list
        isSafeNavigation = false
        type = kotlin.collections.MutableList<kotlin.Int>
      extensionReceiver = null
      signature = KtFunctionLikeSignature:
        receiverType = null
        returnType = kotlin.Int
        symbol = kotlin/collections/MutableList.get(<dispatch receiver>: kotlin.collections.MutableList<E>, index: kotlin.Int): E
        valueParameters = [
          KtVariableLikeSignature:
            name = index
            receiverType = null
            returnType = kotlin.Int
            symbol = index: kotlin.Int
            callableIdIfNonLocal = null
        ]
        callableIdIfNonLocal = kotlin/collections/MutableList.get
    typeArgumentsMapping = {}
    argumentMapping = {
      implicitIndex -> (KtVariableLikeSignature:
        name = index
        receiverType = null
        returnType = kotlin.Int
        symbol = index: kotlin.Int
        callableIdIfNonLocal = null)
    }

KtCallExpression(179,199): 'foo(--list[i], list)'
  KtSimpleFunctionCall:
    isImplicitInvoke = false
    partiallyAppliedSymbol = KtPartiallyAppliedSymbol:
      dispatchReceiver = null
      extensionReceiver = null
      signature = KtFunctionLikeSignature:
        receiverType = null
        returnType = kotlin.Unit
        symbol = /foo(i: kotlin.Int, list: kotlin.collections.MutableList<kotlin.Int>): kotlin.Unit
        valueParameters = [
          KtVariableLikeSignature:
            name = i
            receiverType = null
            returnType = kotlin.Int
            symbol = i: kotlin.Int
            callableIdIfNonLocal = null,
          KtVariableLikeSignature:
            name = list
            receiverType = null
            returnType = kotlin.collections.MutableList<kotlin.Int>
            symbol = list: kotlin.collections.MutableList<kotlin.Int>
            callableIdIfNonLocal = null
        ]
        callableIdIfNonLocal = /foo
    typeArgumentsMapping = {}
    argumentMapping = {
      --list[i] -> (KtVariableLikeSignature:
        name = i
        receiverType = null
        returnType = kotlin.Int
        symbol = i: kotlin.Int
        callableIdIfNonLocal = null),
      list -> (KtVariableLikeSignature:
        name = list
        receiverType = null
        returnType = kotlin.collections.MutableList<kotlin.Int>
        symbol = list: kotlin.collections.MutableList<kotlin.Int>
        callableIdIfNonLocal = null)
    }

KtArrayAccessExpression(185,192): 'list[i]'
  KtSimpleFunctionCall:
    isImplicitInvoke = false
    partiallyAppliedSymbol = KtPartiallyAppliedSymbol:
      dispatchReceiver = KtExplicitReceiverValue:
        expression = list
        isSafeNavigation = false
        type = kotlin.collections.MutableList<kotlin.Int>
      extensionReceiver = null
      signature = KtFunctionLikeSignature:
        receiverType = null
        returnType = kotlin.Int
        symbol = kotlin/collections/MutableList.get(<dispatch receiver>: kotlin.collections.MutableList<E>, index: kotlin.Int): E
        valueParameters = [
          KtVariableLikeSignature:
            name = index
            receiverType = null
            returnType = kotlin.Int
            symbol = index: kotlin.Int
            callableIdIfNonLocal = null
        ]
        callableIdIfNonLocal = kotlin/collections/MutableList.get
    typeArgumentsMapping = {}
    argumentMapping = {
      i -> (KtVariableLikeSignature:
        name = index
        receiverType = null
        returnType = kotlin.Int
        symbol = index: kotlin.Int
        callableIdIfNonLocal = null)
    }

