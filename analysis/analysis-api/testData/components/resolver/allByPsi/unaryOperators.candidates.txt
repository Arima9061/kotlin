KtOperationReferenceExpression(49,50): '-'
  NO_CANDIDATES

KtOperationReferenceExpression(73,74): '+'
  NO_CANDIDATES

KtOperationReferenceExpression(83,84): '!'
  NO_CANDIDATES

KtOperationReferenceExpression(85,86): '+'
  NO_CANDIDATES

KtOperationReferenceExpression(87,88): '-'
  NO_CANDIDATES

KtCallExpression(88,97): 'MyClass()'
  KtApplicableCallCandidateInfo:
    candidate = KtSimpleFunctionCall:
      isImplicitInvoke = false
      partiallyAppliedSymbol = KtPartiallyAppliedSymbol:
        dispatchReceiver = null
        extensionReceiver = null
        signature = KtFunctionLikeSignature:
          receiverType = null
          returnType = MyClass
          symbol = <constructor>(): MyClass
          valueParameters = []
          callableIdIfNonLocal = null
      typeArgumentsMapping = {}
      argumentMapping = {}
    isInBestCandidates = true

KtCallExpression(98,110): 'unaryMinus()'
  KtApplicableCallCandidateInfo:
    candidate = KtSimpleFunctionCall:
      isImplicitInvoke = false
      partiallyAppliedSymbol = KtPartiallyAppliedSymbol:
        dispatchReceiver = KtExplicitReceiverValue:
          expression = MyClass()
          isSafeNavigation = false
          type = MyClass
        extensionReceiver = null
        signature = KtFunctionLikeSignature:
          receiverType = null
          returnType = MyClass
          symbol = /MyClass.unaryMinus(<dispatch receiver>: MyClass): MyClass
          valueParameters = []
          callableIdIfNonLocal = /MyClass.unaryMinus
      typeArgumentsMapping = {}
      argumentMapping = {}
    isInBestCandidates = true

KtCallExpression(111,116): 'not()'
  KtApplicableCallCandidateInfo:
    candidate = KtSimpleFunctionCall:
      isImplicitInvoke = false
      partiallyAppliedSymbol = KtPartiallyAppliedSymbol:
        dispatchReceiver = KtExplicitReceiverValue:
          expression = MyClass().unaryMinus()
          isSafeNavigation = false
          type = MyClass
        extensionReceiver = null
        signature = KtFunctionLikeSignature:
          receiverType = null
          returnType = MyClass
          symbol = /MyClass.not(<dispatch receiver>: MyClass): MyClass
          valueParameters = []
          callableIdIfNonLocal = /MyClass.not
      typeArgumentsMapping = {}
      argumentMapping = {}
    isInBestCandidates = true

