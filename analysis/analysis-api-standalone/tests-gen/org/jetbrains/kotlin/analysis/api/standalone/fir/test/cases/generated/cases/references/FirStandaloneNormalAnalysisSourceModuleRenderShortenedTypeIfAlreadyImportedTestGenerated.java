/*
 * Copyright 2010-2023 JetBrains s.r.o. and Kotlin Programming Language contributors.
 * Use of this source code is governed by the Apache 2.0 license that can be found in the license/LICENSE.txt file.
 */

package org.jetbrains.kotlin.analysis.api.standalone.fir.test.cases.generated.cases.references;

import com.intellij.testFramework.TestDataPath;
import org.jetbrains.kotlin.test.util.KtTestUtil;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.kotlin.analysis.api.standalone.fir.test.AnalysisApiFirStandaloneModeTestConfiguratorFactory;
import org.jetbrains.kotlin.analysis.test.framework.test.configurators.AnalysisApiTestConfiguratorFactoryData;
import org.jetbrains.kotlin.analysis.test.framework.test.configurators.AnalysisApiTestConfigurator;
import org.jetbrains.kotlin.analysis.test.framework.test.configurators.TestModuleKind;
import org.jetbrains.kotlin.analysis.test.framework.test.configurators.FrontendKind;
import org.jetbrains.kotlin.analysis.test.framework.test.configurators.AnalysisSessionMode;
import org.jetbrains.kotlin.analysis.test.framework.test.configurators.AnalysisApiMode;
import org.jetbrains.kotlin.analysis.api.impl.base.test.cases.references.AbstractRenderShortenedTypeIfAlreadyImportedTest;
import org.jetbrains.kotlin.test.TestMetadata;
import org.junit.jupiter.api.Nested;
import org.junit.jupiter.api.Test;

import java.io.File;
import java.util.regex.Pattern;

/** This class is generated by {@link org.jetbrains.kotlin.generators.tests.analysis.api.GenerateAnalysisApiTestsKt}. DO NOT MODIFY MANUALLY */
@SuppressWarnings("all")
@TestMetadata("analysis/analysis-api/testData/components/referenceShortener/renderShortenedTypeIfAlreadyImported")
@TestDataPath("$PROJECT_ROOT")
public class FirStandaloneNormalAnalysisSourceModuleRenderShortenedTypeIfAlreadyImportedTestGenerated extends AbstractRenderShortenedTypeIfAlreadyImportedTest {
    @NotNull
    @Override
    public AnalysisApiTestConfigurator getConfigurator() {
        return AnalysisApiFirStandaloneModeTestConfiguratorFactory.INSTANCE.createConfigurator(
            new AnalysisApiTestConfiguratorFactoryData(
                FrontendKind.Fir,
                TestModuleKind.Source,
                AnalysisSessionMode.Normal,
                AnalysisApiMode.Standalone
            )
        );
    }

    @Test
    public void testAllFilesPresentInRenderShortenedTypeIfAlreadyImported() throws Exception {
        KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("analysis/analysis-api/testData/components/referenceShortener/renderShortenedTypeIfAlreadyImported"), Pattern.compile("^(.+)\\.kt$"), null, true);
    }

    @Test
    @TestMetadata("classScope.kt")
    public void testClassScope() throws Exception {
        runTest("analysis/analysis-api/testData/components/referenceShortener/renderShortenedTypeIfAlreadyImported/classScope.kt");
    }

    @Test
    @TestMetadata("fileScope.kt")
    public void testFileScope() throws Exception {
        runTest("analysis/analysis-api/testData/components/referenceShortener/renderShortenedTypeIfAlreadyImported/fileScope.kt");
    }

    @Test
    @TestMetadata("handleConflictCausedByShortening.kt")
    public void testHandleConflictCausedByShortening() throws Exception {
        runTest("analysis/analysis-api/testData/components/referenceShortener/renderShortenedTypeIfAlreadyImported/handleConflictCausedByShortening.kt");
    }

    @Test
    @TestMetadata("nestedClass.kt")
    public void testNestedClass() throws Exception {
        runTest("analysis/analysis-api/testData/components/referenceShortener/renderShortenedTypeIfAlreadyImported/nestedClass.kt");
    }

    @Test
    @TestMetadata("nestedClassOfImportedClass.kt")
    public void testNestedClassOfImportedClass() throws Exception {
        runTest("analysis/analysis-api/testData/components/referenceShortener/renderShortenedTypeIfAlreadyImported/nestedClassOfImportedClass.kt");
    }

    @Test
    @TestMetadata("nestedClassOfImportedClass2.kt")
    public void testNestedClassOfImportedClass2() throws Exception {
        runTest("analysis/analysis-api/testData/components/referenceShortener/renderShortenedTypeIfAlreadyImported/nestedClassOfImportedClass2.kt");
    }

    @Test
    @TestMetadata("shortenImportedTypes.kt")
    public void testShortenImportedTypes() throws Exception {
        runTest("analysis/analysis-api/testData/components/referenceShortener/renderShortenedTypeIfAlreadyImported/shortenImportedTypes.kt");
    }

    @Test
    @TestMetadata("shortenPackageForNestedClass.kt")
    public void testShortenPackageForNestedClass() throws Exception {
        runTest("analysis/analysis-api/testData/components/referenceShortener/renderShortenedTypeIfAlreadyImported/shortenPackageForNestedClass.kt");
    }

    @Test
    @TestMetadata("shortenPackageForNestedClass2.kt")
    public void testShortenPackageForNestedClass2() throws Exception {
        runTest("analysis/analysis-api/testData/components/referenceShortener/renderShortenedTypeIfAlreadyImported/shortenPackageForNestedClass2.kt");
    }

    @Test
    @TestMetadata("shortenSelfPackage.kt")
    public void testShortenSelfPackage() throws Exception {
        runTest("analysis/analysis-api/testData/components/referenceShortener/renderShortenedTypeIfAlreadyImported/shortenSelfPackage.kt");
    }

    @Test
    @TestMetadata("shortenSelfPackage2.kt")
    public void testShortenSelfPackage2() throws Exception {
        runTest("analysis/analysis-api/testData/components/referenceShortener/renderShortenedTypeIfAlreadyImported/shortenSelfPackage2.kt");
    }

    @Test
    @TestMetadata("shortenSelfPackage3.kt")
    public void testShortenSelfPackage3() throws Exception {
        runTest("analysis/analysis-api/testData/components/referenceShortener/renderShortenedTypeIfAlreadyImported/shortenSelfPackage3.kt");
    }
}
