library {
  // module name: <main>

  library fragment {
    // package name: <root>

    // class name: Base
    // class name: Derived

    public abstract interface Base<out T#0 /* T */> : kotlin/Any {

      public abstract fun foo(): T#0
    }

    public final class Derived<T#0 /* T */> : Base<T#0> {

      public constructor()

      public open fun foo(): T#0
    }

    package {

      public final fun <T#0 /* T */> Derived<T#0>.bar(): Base<T#0>

      public final fun box(): kotlin/String

      public final fun <T#0 /* T */> test(x: Base<T#0>): T#0
    }
  }
}
