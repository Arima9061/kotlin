library {
  // module name: <main>

  library fragment {
    // package name: a

    // class name: a/B
    // class name: a/B.Companion
    // class name: a/C

    public abstract interface a/B : kotlin/Any {

      public open fun test(): kotlin/Unit

      // companion object: Companion

      // nested class: Companion
    }

    public final companion object a/B.Companion : b/A {

      private constructor()
    }

    public final class a/C : a/B {

      public constructor()
    }

    package {

      public final fun box(): kotlin/String
    }
  }

  library fragment {
    // package name: b

    // class name: b/A

    public abstract class b/A : kotlin/Any {

      public constructor()

      protected final fun foo(): kotlin/Unit
    }

    package {

      public final var result: kotlin/String
        public final get
        public final set
    }
  }
}
