library {
  // module name: <main>

  library fragment {
    // package name: <root>

    // class name: A
    // class name: A.Companion

    public final class A : kotlin/Any {

      public constructor()

      public final fun foo(): kotlin/String

      // companion object: Companion

      // nested class: Companion
    }

    public final companion object A.Companion : kotlin/Any {

      private constructor()

      private final inline fun o_plus_f1_plus_f2(f1: kotlin/Function0<kotlin/String>, f2: kotlin/Function0<kotlin/String>): kotlin/String

      private final inline fun o_plus_f_plus_k(f: kotlin/Function0<kotlin/String>): kotlin/String

      private final val k: kotlin/String /* = ... */
        private final get

      private final val o: kotlin/String /* = ... */
        private final get
    }

    package {

      public final fun box(): kotlin/String
    }
  }
}
