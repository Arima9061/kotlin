MODULE_FRAGMENT name:<main>
  FILE fqName:<root> fileName:/sequences.kt
    FUN name:testIntSumOfSequence signature:/testIntSumOfSequence|testIntSumOfSequence(){}[0] visibility:public modality:FINAL <> () returnType:<unbound IrClassSymbolImpl>
      BLOCK_BODY
        VAR name:sequence type:<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> [val]
          CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> origin=null
            <1>: <unbound IrClassSymbolImpl>
            1: FUN_EXPR type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>>> origin=LAMBDA
              FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL <> () returnType:<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>>
                BLOCK_BODY
                  VAR name:intRange type:<unbound IrClassSymbolImpl> [val]
                    CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=RANGE
                      $this: CONST Int type=<unbound IrClassSymbolImpl> value=0
                      1: CONST Int type=<unbound IrClassSymbolImpl> value=10
                  RETURN type=<unbound IrClassSymbolImpl> from='local final fun <anonymous> (): <unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> declared in <root>.testIntSumOfSequence'
                    CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
                      $this: GET_VAR 'val intRange: <unbound IrClassSymbolImpl> [val] declared in <root>.testIntSumOfSequence.<anonymous>' type=<unbound IrClassSymbolImpl> origin=null
        RETURN type=<unbound IrClassSymbolImpl> from='public final fun testIntSumOfSequence (): <unbound IrClassSymbolImpl> declared in <root>'
          CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
            <1>: <unbound IrClassSymbolImpl>
            $receiver: GET_VAR 'val sequence: <unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> [val] declared in <root>.testIntSumOfSequence' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> origin=null
            1: FUN_EXPR type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>, <unbound IrClassSymbolImpl>> origin=LAMBDA
              FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL <> (it:<unbound IrClassSymbolImpl>) returnType:<unbound IrClassSymbolImpl>
                VALUE_PARAMETER name:it index:0 type:<unbound IrClassSymbolImpl>
                BLOCK_BODY
                  RETURN type=<unbound IrClassSymbolImpl> from='local final fun <anonymous> (it: <unbound IrClassSymbolImpl>): <unbound IrClassSymbolImpl> declared in <root>.testIntSumOfSequence'
                    GET_VAR 'it: <unbound IrClassSymbolImpl> declared in <root>.testIntSumOfSequence.<anonymous>' type=<unbound IrClassSymbolImpl> origin=null
    FUN name:testIntSumOfAsSequence signature:/testIntSumOfAsSequence|testIntSumOfAsSequence(){}[0] visibility:public modality:FINAL <> () returnType:<unbound IrClassSymbolImpl>
      BLOCK_BODY
        VAR name:intRange type:<unbound IrClassSymbolImpl> [val]
          CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=RANGE
            $this: CONST Int type=<unbound IrClassSymbolImpl> value=0
            1: CONST Int type=<unbound IrClassSymbolImpl> value=10
        VAR name:asSequence type:<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> [val]
          CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> origin=null
            <1>: <unbound IrClassSymbolImpl>
            $receiver: GET_VAR 'val intRange: <unbound IrClassSymbolImpl> [val] declared in <root>.testIntSumOfAsSequence' type=<unbound IrClassSymbolImpl> origin=null
        RETURN type=<unbound IrClassSymbolImpl> from='public final fun testIntSumOfAsSequence (): <unbound IrClassSymbolImpl> declared in <root>'
          CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
            <1>: <unbound IrClassSymbolImpl>
            $receiver: GET_VAR 'val asSequence: <unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> [val] declared in <root>.testIntSumOfAsSequence' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> origin=null
            1: FUN_EXPR type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>, <unbound IrClassSymbolImpl>> origin=LAMBDA
              FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL <> (it:<unbound IrClassSymbolImpl>) returnType:<unbound IrClassSymbolImpl>
                VALUE_PARAMETER name:it index:0 type:<unbound IrClassSymbolImpl>
                BLOCK_BODY
                  RETURN type=<unbound IrClassSymbolImpl> from='local final fun <anonymous> (it: <unbound IrClassSymbolImpl>): <unbound IrClassSymbolImpl> declared in <root>.testIntSumOfAsSequence'
                    GET_VAR 'it: <unbound IrClassSymbolImpl> declared in <root>.testIntSumOfAsSequence.<anonymous>' type=<unbound IrClassSymbolImpl> origin=null
    FUN name:box signature:/box|box(){}[0] visibility:public modality:FINAL <> () returnType:<unbound IrClassSymbolImpl>
      BLOCK_BODY
        CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
          <1>: <unbound IrClassSymbolImpl>
          1: CONST Int type=<unbound IrClassSymbolImpl> value=55
          2: CALL 'public final fun testIntSumOfSequence (): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
        CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
          <1>: <unbound IrClassSymbolImpl>
          1: CONST Int type=<unbound IrClassSymbolImpl> value=55
          2: CALL 'public final fun testIntSumOfAsSequence (): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
        RETURN type=<unbound IrClassSymbolImpl> from='public final fun box (): <unbound IrClassSymbolImpl> declared in <root>'
          CONST String type=<unbound IrClassSymbolImpl> value="OK"
