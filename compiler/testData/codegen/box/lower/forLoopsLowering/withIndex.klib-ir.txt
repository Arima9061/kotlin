MODULE_FRAGMENT name:<main>
  FILE fqName:<root> fileName:/withIndex.kt
    FUN name:testIntForWithIndex signature:/testIntForWithIndex|testIntForWithIndex(){}[0] visibility:public modality:FINAL <> () returnType:<unbound IrClassSymbolImpl>
      BLOCK_BODY
        VAR name:s type:<unbound IrClassSymbolImpl> [var]
          CONST Int type=<unbound IrClassSymbolImpl> value=0
        BLOCK type=<unbound IrClassSymbolImpl> origin=FOR_LOOP
          VAR FOR_LOOP_ITERATOR name:<iterator> type:<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>>> [val]
            CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>>> origin=FOR_LOOP_ITERATOR
              $this: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>>> origin=null
                <1>: <unbound IrClassSymbolImpl>
                $receiver: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=RANGE
                  $this: CONST Int type=<unbound IrClassSymbolImpl> value=1
                  1: CONST Int type=<unbound IrClassSymbolImpl> value=5
          WHILE label=null origin=FOR_LOOP_INNER_WHILE
            condition: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=FOR_LOOP_HAS_NEXT
              $this: GET_VAR 'val <iterator>: <unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>>> [val] declared in <root>.testIntForWithIndex' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>>> origin=null
            body: BLOCK type=<unbound IrClassSymbolImpl> origin=FOR_LOOP_INNER_WHILE
              VAR IR_TEMPORARY_VARIABLE name:<destruct> type:<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> [val]
                CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> origin=FOR_LOOP_NEXT
                  $this: GET_VAR 'val <iterator>: <unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>>> [val] declared in <root>.testIntForWithIndex' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>>> origin=null
              VAR name:index type:<unbound IrClassSymbolImpl> [val]
                CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=COMPONENT_N(index=1)
                  $this: GET_VAR 'val <destruct>: <unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> [val] declared in <root>.testIntForWithIndex' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> origin=null
              VAR name:elem type:<unbound IrClassSymbolImpl> [val]
                CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=COMPONENT_N(index=2)
                  $this: GET_VAR 'val <destruct>: <unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> [val] declared in <root>.testIntForWithIndex' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> origin=null
              BLOCK type=<unbound IrClassSymbolImpl> origin=null
                SET_VAR 'var s: <unbound IrClassSymbolImpl> [var] declared in <root>.testIntForWithIndex' type=<unbound IrClassSymbolImpl> origin=EQ
                  CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=PLUS
                    $this: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=MUL
                      $this: GET_VAR 'var s: <unbound IrClassSymbolImpl> [var] declared in <root>.testIntForWithIndex' type=<unbound IrClassSymbolImpl> origin=null
                      1: CONST Int type=<unbound IrClassSymbolImpl> value=10
                    1: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=MUL
                      $this: GET_VAR 'val index: <unbound IrClassSymbolImpl> [val] declared in <root>.testIntForWithIndex' type=<unbound IrClassSymbolImpl> origin=null
                      1: GET_VAR 'val elem: <unbound IrClassSymbolImpl> [val] declared in <root>.testIntForWithIndex' type=<unbound IrClassSymbolImpl> origin=null
        RETURN type=<unbound IrClassSymbolImpl> from='public final fun testIntForWithIndex (): <unbound IrClassSymbolImpl> declared in <root>'
          GET_VAR 'var s: <unbound IrClassSymbolImpl> [var] declared in <root>.testIntForWithIndex' type=<unbound IrClassSymbolImpl> origin=null
    FUN name:testIntForWithIndexNotUsed signature:/testIntForWithIndexNotUsed|testIntForWithIndexNotUsed(){}[0] visibility:public modality:FINAL <> () returnType:<unbound IrClassSymbolImpl>
      BLOCK_BODY
        VAR name:s type:<unbound IrClassSymbolImpl> [var]
          CONST Int type=<unbound IrClassSymbolImpl> value=0
        BLOCK type=<unbound IrClassSymbolImpl> origin=FOR_LOOP
          VAR FOR_LOOP_ITERATOR name:<iterator> type:<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>>> [val]
            CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>>> origin=FOR_LOOP_ITERATOR
              $this: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>>> origin=null
                <1>: <unbound IrClassSymbolImpl>
                $receiver: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=RANGE
                  $this: CONST Int type=<unbound IrClassSymbolImpl> value=1
                  1: CONST Int type=<unbound IrClassSymbolImpl> value=5
          WHILE label=null origin=FOR_LOOP_INNER_WHILE
            condition: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=FOR_LOOP_HAS_NEXT
              $this: GET_VAR 'val <iterator>: <unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>>> [val] declared in <root>.testIntForWithIndexNotUsed' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>>> origin=null
            body: BLOCK type=<unbound IrClassSymbolImpl> origin=FOR_LOOP_INNER_WHILE
              VAR IR_TEMPORARY_VARIABLE name:<destruct> type:<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> [val]
                CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> origin=FOR_LOOP_NEXT
                  $this: GET_VAR 'val <iterator>: <unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>>> [val] declared in <root>.testIntForWithIndexNotUsed' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>>> origin=null
              TYPE_OP type=<unbound IrClassSymbolImpl> origin=IMPLICIT_COERCION_TO_UNIT typeOperand=<unbound IrClassSymbolImpl>
                BLOCK type=<unbound IrClassSymbolImpl> origin=POSTFIX_INCR
                  VAR IR_TEMPORARY_VARIABLE name:<unary> type:<unbound IrClassSymbolImpl> [val]
                    GET_VAR 'var s: <unbound IrClassSymbolImpl> [var] declared in <root>.testIntForWithIndexNotUsed' type=<unbound IrClassSymbolImpl> origin=POSTFIX_INCR
                  SET_VAR 'var s: <unbound IrClassSymbolImpl> [var] declared in <root>.testIntForWithIndexNotUsed' type=<unbound IrClassSymbolImpl> origin=POSTFIX_INCR
                    CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=POSTFIX_INCR
                      $this: GET_VAR 'val <unary>: <unbound IrClassSymbolImpl> [val] declared in <root>.testIntForWithIndexNotUsed' type=<unbound IrClassSymbolImpl> origin=null
                  GET_VAR 'val <unary>: <unbound IrClassSymbolImpl> [val] declared in <root>.testIntForWithIndexNotUsed' type=<unbound IrClassSymbolImpl> origin=null
        RETURN type=<unbound IrClassSymbolImpl> from='public final fun testIntForWithIndexNotUsed (): <unbound IrClassSymbolImpl> declared in <root>'
          GET_VAR 'var s: <unbound IrClassSymbolImpl> [var] declared in <root>.testIntForWithIndexNotUsed' type=<unbound IrClassSymbolImpl> origin=null
    FUN name:testIntForWithIndexPartiallyUsed signature:/testIntForWithIndexPartiallyUsed|testIntForWithIndexPartiallyUsed(){}[0] visibility:public modality:FINAL <> () returnType:<unbound IrClassSymbolImpl>
      BLOCK_BODY
        VAR name:s type:<unbound IrClassSymbolImpl> [var]
          CONST Int type=<unbound IrClassSymbolImpl> value=0
        BLOCK type=<unbound IrClassSymbolImpl> origin=FOR_LOOP
          VAR FOR_LOOP_ITERATOR name:<iterator> type:<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>>> [val]
            CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>>> origin=FOR_LOOP_ITERATOR
              $this: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>>> origin=null
                <1>: <unbound IrClassSymbolImpl>
                $receiver: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=RANGE
                  $this: CONST Int type=<unbound IrClassSymbolImpl> value=1
                  1: CONST Int type=<unbound IrClassSymbolImpl> value=5
          WHILE label=null origin=FOR_LOOP_INNER_WHILE
            condition: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=FOR_LOOP_HAS_NEXT
              $this: GET_VAR 'val <iterator>: <unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>>> [val] declared in <root>.testIntForWithIndexPartiallyUsed' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>>> origin=null
            body: BLOCK type=<unbound IrClassSymbolImpl> origin=FOR_LOOP_INNER_WHILE
              VAR IR_TEMPORARY_VARIABLE name:<destruct> type:<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> [val]
                CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> origin=FOR_LOOP_NEXT
                  $this: GET_VAR 'val <iterator>: <unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>>> [val] declared in <root>.testIntForWithIndexPartiallyUsed' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>>> origin=null
              VAR name:index type:<unbound IrClassSymbolImpl> [val]
                CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=COMPONENT_N(index=1)
                  $this: GET_VAR 'val <destruct>: <unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> [val] declared in <root>.testIntForWithIndexPartiallyUsed' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> origin=null
              BLOCK type=<unbound IrClassSymbolImpl> origin=null
                SET_VAR 'var s: <unbound IrClassSymbolImpl> [var] declared in <root>.testIntForWithIndexPartiallyUsed' type=<unbound IrClassSymbolImpl> origin=EQ
                  CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=PLUS
                    $this: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=MUL
                      $this: GET_VAR 'var s: <unbound IrClassSymbolImpl> [var] declared in <root>.testIntForWithIndexPartiallyUsed' type=<unbound IrClassSymbolImpl> origin=null
                      1: CONST Int type=<unbound IrClassSymbolImpl> value=10
                    1: GET_VAR 'val index: <unbound IrClassSymbolImpl> [val] declared in <root>.testIntForWithIndexPartiallyUsed' type=<unbound IrClassSymbolImpl> origin=null
        RETURN type=<unbound IrClassSymbolImpl> from='public final fun testIntForWithIndexPartiallyUsed (): <unbound IrClassSymbolImpl> declared in <root>'
          GET_VAR 'var s: <unbound IrClassSymbolImpl> [var] declared in <root>.testIntForWithIndexPartiallyUsed' type=<unbound IrClassSymbolImpl> origin=null
    FUN name:testIntForWithIndexAndDestructor signature:/testIntForWithIndexAndDestructor|testIntForWithIndexAndDestructor(){}[0] visibility:public modality:FINAL <> () returnType:<unbound IrClassSymbolImpl>
      BLOCK_BODY
        VAR name:s type:<unbound IrClassSymbolImpl> [var]
          CONST Int type=<unbound IrClassSymbolImpl> value=0
        BLOCK type=<unbound IrClassSymbolImpl> origin=FOR_LOOP
          VAR FOR_LOOP_ITERATOR name:<iterator> type:<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>>> [val]
            CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>>> origin=FOR_LOOP_ITERATOR
              $this: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>>> origin=null
                <1>: <unbound IrClassSymbolImpl>
                $receiver: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=RANGE
                  $this: CONST Int type=<unbound IrClassSymbolImpl> value=1
                  1: CONST Int type=<unbound IrClassSymbolImpl> value=5
          WHILE label=null origin=FOR_LOOP_INNER_WHILE
            condition: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=FOR_LOOP_HAS_NEXT
              $this: GET_VAR 'val <iterator>: <unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>>> [val] declared in <root>.testIntForWithIndexAndDestructor' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>>> origin=null
            body: BLOCK type=<unbound IrClassSymbolImpl> origin=FOR_LOOP_INNER_WHILE
              VAR FOR_LOOP_VARIABLE name:ie type:<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> [val]
                CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> origin=FOR_LOOP_NEXT
                  $this: GET_VAR 'val <iterator>: <unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>>> [val] declared in <root>.testIntForWithIndexAndDestructor' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>>> origin=null
              BLOCK type=<unbound IrClassSymbolImpl> origin=null
                VAR IR_TEMPORARY_VARIABLE name:<destruct> type:<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> [val]
                  GET_VAR 'val ie: <unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> [val] declared in <root>.testIntForWithIndexAndDestructor' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> origin=null
                VAR name:index type:<unbound IrClassSymbolImpl> [val]
                  CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=COMPONENT_N(index=1)
                    $this: GET_VAR 'val <destruct>: <unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> [val] declared in <root>.testIntForWithIndexAndDestructor' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> origin=null
                VAR name:elem type:<unbound IrClassSymbolImpl> [val]
                  CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=COMPONENT_N(index=2)
                    $this: GET_VAR 'val <destruct>: <unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> [val] declared in <root>.testIntForWithIndexAndDestructor' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> origin=null
                SET_VAR 'var s: <unbound IrClassSymbolImpl> [var] declared in <root>.testIntForWithIndexAndDestructor' type=<unbound IrClassSymbolImpl> origin=EQ
                  CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=PLUS
                    $this: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=MUL
                      $this: GET_VAR 'var s: <unbound IrClassSymbolImpl> [var] declared in <root>.testIntForWithIndexAndDestructor' type=<unbound IrClassSymbolImpl> origin=null
                      1: CONST Int type=<unbound IrClassSymbolImpl> value=10
                    1: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=MUL
                      $this: GET_VAR 'val index: <unbound IrClassSymbolImpl> [val] declared in <root>.testIntForWithIndexAndDestructor' type=<unbound IrClassSymbolImpl> origin=null
                      1: GET_VAR 'val elem: <unbound IrClassSymbolImpl> [val] declared in <root>.testIntForWithIndexAndDestructor' type=<unbound IrClassSymbolImpl> origin=null
        RETURN type=<unbound IrClassSymbolImpl> from='public final fun testIntForWithIndexAndDestructor (): <unbound IrClassSymbolImpl> declared in <root>'
          GET_VAR 'var s: <unbound IrClassSymbolImpl> [var] declared in <root>.testIntForWithIndexAndDestructor' type=<unbound IrClassSymbolImpl> origin=null
    FUN name:testIntForWithIndexAndDestructorNotUsed signature:/testIntForWithIndexAndDestructorNotUsed|testIntForWithIndexAndDestructorNotUsed(){}[0] visibility:public modality:FINAL <> () returnType:<unbound IrClassSymbolImpl>
      BLOCK_BODY
        VAR name:s type:<unbound IrClassSymbolImpl> [var]
          CONST Int type=<unbound IrClassSymbolImpl> value=0
        BLOCK type=<unbound IrClassSymbolImpl> origin=FOR_LOOP
          VAR FOR_LOOP_ITERATOR name:<iterator> type:<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>>> [val]
            CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>>> origin=FOR_LOOP_ITERATOR
              $this: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>>> origin=null
                <1>: <unbound IrClassSymbolImpl>
                $receiver: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=RANGE
                  $this: CONST Int type=<unbound IrClassSymbolImpl> value=1
                  1: CONST Int type=<unbound IrClassSymbolImpl> value=5
          WHILE label=null origin=FOR_LOOP_INNER_WHILE
            condition: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=FOR_LOOP_HAS_NEXT
              $this: GET_VAR 'val <iterator>: <unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>>> [val] declared in <root>.testIntForWithIndexAndDestructorNotUsed' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>>> origin=null
            body: BLOCK type=<unbound IrClassSymbolImpl> origin=FOR_LOOP_INNER_WHILE
              VAR FOR_LOOP_VARIABLE name:ie type:<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> [val]
                CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> origin=FOR_LOOP_NEXT
                  $this: GET_VAR 'val <iterator>: <unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>>> [val] declared in <root>.testIntForWithIndexAndDestructorNotUsed' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>>> origin=null
              TYPE_OP type=<unbound IrClassSymbolImpl> origin=IMPLICIT_COERCION_TO_UNIT typeOperand=<unbound IrClassSymbolImpl>
                BLOCK type=<unbound IrClassSymbolImpl> origin=POSTFIX_INCR
                  VAR IR_TEMPORARY_VARIABLE name:<unary> type:<unbound IrClassSymbolImpl> [val]
                    GET_VAR 'var s: <unbound IrClassSymbolImpl> [var] declared in <root>.testIntForWithIndexAndDestructorNotUsed' type=<unbound IrClassSymbolImpl> origin=POSTFIX_INCR
                  SET_VAR 'var s: <unbound IrClassSymbolImpl> [var] declared in <root>.testIntForWithIndexAndDestructorNotUsed' type=<unbound IrClassSymbolImpl> origin=POSTFIX_INCR
                    CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=POSTFIX_INCR
                      $this: GET_VAR 'val <unary>: <unbound IrClassSymbolImpl> [val] declared in <root>.testIntForWithIndexAndDestructorNotUsed' type=<unbound IrClassSymbolImpl> origin=null
                  GET_VAR 'val <unary>: <unbound IrClassSymbolImpl> [val] declared in <root>.testIntForWithIndexAndDestructorNotUsed' type=<unbound IrClassSymbolImpl> origin=null
        RETURN type=<unbound IrClassSymbolImpl> from='public final fun testIntForWithIndexAndDestructorNotUsed (): <unbound IrClassSymbolImpl> declared in <root>'
          GET_VAR 'var s: <unbound IrClassSymbolImpl> [var] declared in <root>.testIntForWithIndexAndDestructorNotUsed' type=<unbound IrClassSymbolImpl> origin=null
    FUN name:testIntArrayForWithIndex signature:/testIntArrayForWithIndex|testIntArrayForWithIndex(){}[0] visibility:public modality:FINAL <> () returnType:<unbound IrClassSymbolImpl>
      BLOCK_BODY
        VAR name:s type:<unbound IrClassSymbolImpl> [var]
          CONST Int type=<unbound IrClassSymbolImpl> value=0
        BLOCK type=<unbound IrClassSymbolImpl> origin=FOR_LOOP
          VAR FOR_LOOP_ITERATOR name:<iterator> type:<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>>> [val]
            CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>>> origin=FOR_LOOP_ITERATOR
              $this: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>>> origin=null
                $receiver: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
                  1: VARARG type=<unbound IrClassSymbolImpl> varargElementType=<unbound IrClassSymbolImpl>
                    CONST Int type=<unbound IrClassSymbolImpl> value=1
                    CONST Int type=<unbound IrClassSymbolImpl> value=2
                    CONST Int type=<unbound IrClassSymbolImpl> value=3
                    CONST Int type=<unbound IrClassSymbolImpl> value=4
                    CONST Int type=<unbound IrClassSymbolImpl> value=5
          WHILE label=null origin=FOR_LOOP_INNER_WHILE
            condition: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=FOR_LOOP_HAS_NEXT
              $this: GET_VAR 'val <iterator>: <unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>>> [val] declared in <root>.testIntArrayForWithIndex' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>>> origin=null
            body: BLOCK type=<unbound IrClassSymbolImpl> origin=FOR_LOOP_INNER_WHILE
              VAR IR_TEMPORARY_VARIABLE name:<destruct> type:<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> [val]
                CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> origin=FOR_LOOP_NEXT
                  $this: GET_VAR 'val <iterator>: <unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>>> [val] declared in <root>.testIntArrayForWithIndex' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>>> origin=null
              VAR name:index type:<unbound IrClassSymbolImpl> [val]
                CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=COMPONENT_N(index=1)
                  $this: GET_VAR 'val <destruct>: <unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> [val] declared in <root>.testIntArrayForWithIndex' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> origin=null
              VAR name:elem type:<unbound IrClassSymbolImpl> [val]
                CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=COMPONENT_N(index=2)
                  $this: GET_VAR 'val <destruct>: <unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> [val] declared in <root>.testIntArrayForWithIndex' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> origin=null
              BLOCK type=<unbound IrClassSymbolImpl> origin=null
                SET_VAR 'var s: <unbound IrClassSymbolImpl> [var] declared in <root>.testIntArrayForWithIndex' type=<unbound IrClassSymbolImpl> origin=EQ
                  CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=PLUS
                    $this: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=MUL
                      $this: GET_VAR 'var s: <unbound IrClassSymbolImpl> [var] declared in <root>.testIntArrayForWithIndex' type=<unbound IrClassSymbolImpl> origin=null
                      1: CONST Int type=<unbound IrClassSymbolImpl> value=10
                    1: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=MUL
                      $this: GET_VAR 'val index: <unbound IrClassSymbolImpl> [val] declared in <root>.testIntArrayForWithIndex' type=<unbound IrClassSymbolImpl> origin=null
                      1: GET_VAR 'val elem: <unbound IrClassSymbolImpl> [val] declared in <root>.testIntArrayForWithIndex' type=<unbound IrClassSymbolImpl> origin=null
        RETURN type=<unbound IrClassSymbolImpl> from='public final fun testIntArrayForWithIndex (): <unbound IrClassSymbolImpl> declared in <root>'
          GET_VAR 'var s: <unbound IrClassSymbolImpl> [var] declared in <root>.testIntArrayForWithIndex' type=<unbound IrClassSymbolImpl> origin=null
    FUN name:testUIntArrayForWithIndex signature:/testUIntArrayForWithIndex|testUIntArrayForWithIndex(){}[0] visibility:public modality:FINAL <> () returnType:<unbound IrClassSymbolImpl>
      BLOCK_BODY
        VAR name:s type:<unbound IrClassSymbolImpl> [var]
          CONST Int type=<unbound IrClassSymbolImpl> value=0
        BLOCK type=<unbound IrClassSymbolImpl> origin=FOR_LOOP
          VAR FOR_LOOP_ITERATOR name:<iterator> type:<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>>> [val]
            CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>>> origin=FOR_LOOP_ITERATOR
              $this: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>>> origin=null
                $receiver: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
                  1: VARARG type=<unbound IrClassSymbolImpl> varargElementType=<unbound IrClassSymbolImpl>
                    CONST Int type=<unbound IrClassSymbolImpl> value=1
                    CONST Int type=<unbound IrClassSymbolImpl> value=2
                    CONST Int type=<unbound IrClassSymbolImpl> value=3
                    CONST Int type=<unbound IrClassSymbolImpl> value=4
                    CONST Int type=<unbound IrClassSymbolImpl> value=5
          WHILE label=null origin=FOR_LOOP_INNER_WHILE
            condition: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=FOR_LOOP_HAS_NEXT
              $this: GET_VAR 'val <iterator>: <unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>>> [val] declared in <root>.testUIntArrayForWithIndex' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>>> origin=null
            body: BLOCK type=<unbound IrClassSymbolImpl> origin=FOR_LOOP_INNER_WHILE
              VAR IR_TEMPORARY_VARIABLE name:<destruct> type:<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> [val]
                CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> origin=FOR_LOOP_NEXT
                  $this: GET_VAR 'val <iterator>: <unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>>> [val] declared in <root>.testUIntArrayForWithIndex' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>>> origin=null
              VAR name:index type:<unbound IrClassSymbolImpl> [val]
                CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=COMPONENT_N(index=1)
                  $this: GET_VAR 'val <destruct>: <unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> [val] declared in <root>.testUIntArrayForWithIndex' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> origin=null
              VAR name:elem type:<unbound IrClassSymbolImpl> [val]
                CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=COMPONENT_N(index=2)
                  $this: GET_VAR 'val <destruct>: <unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> [val] declared in <root>.testUIntArrayForWithIndex' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> origin=null
              BLOCK type=<unbound IrClassSymbolImpl> origin=null
                SET_VAR 'var s: <unbound IrClassSymbolImpl> [var] declared in <root>.testUIntArrayForWithIndex' type=<unbound IrClassSymbolImpl> origin=EQ
                  CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=PLUS
                    $this: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=MUL
                      $this: GET_VAR 'var s: <unbound IrClassSymbolImpl> [var] declared in <root>.testUIntArrayForWithIndex' type=<unbound IrClassSymbolImpl> origin=null
                      1: CONST Int type=<unbound IrClassSymbolImpl> value=10
                    1: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=MUL
                      $this: GET_VAR 'val index: <unbound IrClassSymbolImpl> [val] declared in <root>.testUIntArrayForWithIndex' type=<unbound IrClassSymbolImpl> origin=null
                      1: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
                        $this: GET_VAR 'val elem: <unbound IrClassSymbolImpl> [val] declared in <root>.testUIntArrayForWithIndex' type=<unbound IrClassSymbolImpl> origin=null
        RETURN type=<unbound IrClassSymbolImpl> from='public final fun testUIntArrayForWithIndex (): <unbound IrClassSymbolImpl> declared in <root>'
          GET_VAR 'var s: <unbound IrClassSymbolImpl> [var] declared in <root>.testUIntArrayForWithIndex' type=<unbound IrClassSymbolImpl> origin=null
    FUN name:testForStringWithIndex signature:/testForStringWithIndex|testForStringWithIndex(){}[0] visibility:public modality:FINAL <> () returnType:<unbound IrClassSymbolImpl>
      BLOCK_BODY
        VAR name:s type:<unbound IrClassSymbolImpl> [var]
          CONST Int type=<unbound IrClassSymbolImpl> value=0
        BLOCK type=<unbound IrClassSymbolImpl> origin=FOR_LOOP
          VAR FOR_LOOP_ITERATOR name:<iterator> type:<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>>> [val]
            CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>>> origin=FOR_LOOP_ITERATOR
              $this: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>>> origin=null
                $receiver: CONST String type=<unbound IrClassSymbolImpl> value="ABC"
          WHILE label=null origin=FOR_LOOP_INNER_WHILE
            condition: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=FOR_LOOP_HAS_NEXT
              $this: GET_VAR 'val <iterator>: <unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>>> [val] declared in <root>.testForStringWithIndex' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>>> origin=null
            body: BLOCK type=<unbound IrClassSymbolImpl> origin=FOR_LOOP_INNER_WHILE
              VAR IR_TEMPORARY_VARIABLE name:<destruct> type:<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> [val]
                CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> origin=FOR_LOOP_NEXT
                  $this: GET_VAR 'val <iterator>: <unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>>> [val] declared in <root>.testForStringWithIndex' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>>> origin=null
              VAR name:index type:<unbound IrClassSymbolImpl> [val]
                CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=COMPONENT_N(index=1)
                  $this: GET_VAR 'val <destruct>: <unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> [val] declared in <root>.testForStringWithIndex' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> origin=null
              VAR name:elem type:<unbound IrClassSymbolImpl> [val]
                CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=COMPONENT_N(index=2)
                  $this: GET_VAR 'val <destruct>: <unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> [val] declared in <root>.testForStringWithIndex' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> origin=null
              BLOCK type=<unbound IrClassSymbolImpl> origin=null
                SET_VAR 'var s: <unbound IrClassSymbolImpl> [var] declared in <root>.testForStringWithIndex' type=<unbound IrClassSymbolImpl> origin=EQ
                  CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=PLUS
                    $this: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=MUL
                      $this: GET_VAR 'var s: <unbound IrClassSymbolImpl> [var] declared in <root>.testForStringWithIndex' type=<unbound IrClassSymbolImpl> origin=null
                      1: CONST Int type=<unbound IrClassSymbolImpl> value=10
                    1: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=MUL
                      $this: GET_VAR 'val index: <unbound IrClassSymbolImpl> [val] declared in <root>.testForStringWithIndex' type=<unbound IrClassSymbolImpl> origin=null
                      1: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=GET_PROPERTY
                        $receiver: GET_VAR 'val elem: <unbound IrClassSymbolImpl> [val] declared in <root>.testForStringWithIndex' type=<unbound IrClassSymbolImpl> origin=null
        RETURN type=<unbound IrClassSymbolImpl> from='public final fun testForStringWithIndex (): <unbound IrClassSymbolImpl> declared in <root>'
          GET_VAR 'var s: <unbound IrClassSymbolImpl> [var] declared in <root>.testForStringWithIndex' type=<unbound IrClassSymbolImpl> origin=null
    FUN name:testIntForWithIndexWithTemporary signature:/testIntForWithIndexWithTemporary|testIntForWithIndexWithTemporary(){}[0] visibility:public modality:FINAL <> () returnType:<unbound IrClassSymbolImpl>
      BLOCK_BODY
        VAR name:s type:<unbound IrClassSymbolImpl> [var]
          CONST Int type=<unbound IrClassSymbolImpl> value=0
        VAR name:intRange type:<unbound IrClassSymbolImpl> [val]
          CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=RANGE
            $this: CONST Int type=<unbound IrClassSymbolImpl> value=1
            1: CONST Int type=<unbound IrClassSymbolImpl> value=5
        VAR name:withIndex1 type:<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>>> [val]
          CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>>> origin=null
            <1>: <unbound IrClassSymbolImpl>
            $receiver: GET_VAR 'val intRange: <unbound IrClassSymbolImpl> [val] declared in <root>.testIntForWithIndexWithTemporary' type=<unbound IrClassSymbolImpl> origin=null
        VAR name:withIndex2 type:<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>>> [val]
          GET_VAR 'val withIndex1: <unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>>> [val] declared in <root>.testIntForWithIndexWithTemporary' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>>> origin=null
        BLOCK type=<unbound IrClassSymbolImpl> origin=FOR_LOOP
          VAR FOR_LOOP_ITERATOR name:<iterator> type:<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>>> [val]
            CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>>> origin=FOR_LOOP_ITERATOR
              $this: GET_VAR 'val withIndex2: <unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>>> [val] declared in <root>.testIntForWithIndexWithTemporary' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>>> origin=null
          WHILE label=null origin=FOR_LOOP_INNER_WHILE
            condition: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=FOR_LOOP_HAS_NEXT
              $this: GET_VAR 'val <iterator>: <unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>>> [val] declared in <root>.testIntForWithIndexWithTemporary' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>>> origin=null
            body: BLOCK type=<unbound IrClassSymbolImpl> origin=FOR_LOOP_INNER_WHILE
              VAR IR_TEMPORARY_VARIABLE name:<destruct> type:<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> [val]
                CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> origin=FOR_LOOP_NEXT
                  $this: GET_VAR 'val <iterator>: <unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>>> [val] declared in <root>.testIntForWithIndexWithTemporary' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>>> origin=null
              VAR name:index type:<unbound IrClassSymbolImpl> [val]
                CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=COMPONENT_N(index=1)
                  $this: GET_VAR 'val <destruct>: <unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> [val] declared in <root>.testIntForWithIndexWithTemporary' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> origin=null
              VAR name:elem type:<unbound IrClassSymbolImpl> [val]
                CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=COMPONENT_N(index=2)
                  $this: GET_VAR 'val <destruct>: <unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> [val] declared in <root>.testIntForWithIndexWithTemporary' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> origin=null
              BLOCK type=<unbound IrClassSymbolImpl> origin=null
                SET_VAR 'var s: <unbound IrClassSymbolImpl> [var] declared in <root>.testIntForWithIndexWithTemporary' type=<unbound IrClassSymbolImpl> origin=EQ
                  CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=PLUS
                    $this: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=MUL
                      $this: GET_VAR 'var s: <unbound IrClassSymbolImpl> [var] declared in <root>.testIntForWithIndexWithTemporary' type=<unbound IrClassSymbolImpl> origin=null
                      1: CONST Int type=<unbound IrClassSymbolImpl> value=10
                    1: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=MUL
                      $this: GET_VAR 'val index: <unbound IrClassSymbolImpl> [val] declared in <root>.testIntForWithIndexWithTemporary' type=<unbound IrClassSymbolImpl> origin=null
                      1: GET_VAR 'val elem: <unbound IrClassSymbolImpl> [val] declared in <root>.testIntForWithIndexWithTemporary' type=<unbound IrClassSymbolImpl> origin=null
        RETURN type=<unbound IrClassSymbolImpl> from='public final fun testIntForWithIndexWithTemporary (): <unbound IrClassSymbolImpl> declared in <root>'
          GET_VAR 'var s: <unbound IrClassSymbolImpl> [var] declared in <root>.testIntForWithIndexWithTemporary' type=<unbound IrClassSymbolImpl> origin=null
    FUN name:testIntWithIndexForEach signature:/testIntWithIndexForEach|testIntWithIndexForEach(){}[0] visibility:public modality:FINAL <> () returnType:<unbound IrClassSymbolImpl>
      BLOCK_BODY
        VAR name:s type:<unbound IrClassSymbolImpl> [var]
          CONST Int type=<unbound IrClassSymbolImpl> value=0
        CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
          <1>: <unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>>
          $receiver: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>>> origin=null
            <1>: <unbound IrClassSymbolImpl>
            $receiver: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=RANGE
              $this: CONST Int type=<unbound IrClassSymbolImpl> value=1
              1: CONST Int type=<unbound IrClassSymbolImpl> value=5
          1: FUN_EXPR type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>>, <unbound IrClassSymbolImpl>> origin=LAMBDA
            FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL <> (<destruct>:<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>>) returnType:<unbound IrClassSymbolImpl>
              VALUE_PARAMETER DESTRUCTURED_OBJECT_PARAMETER name:<destruct> index:0 type:<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>>
              BLOCK_BODY
                VAR name:index type:<unbound IrClassSymbolImpl> [val]
                  CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=COMPONENT_N(index=1)
                    $this: GET_VAR '<destruct>: <unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> declared in <root>.testIntWithIndexForEach.<anonymous>' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> origin=null
                VAR name:elem type:<unbound IrClassSymbolImpl> [val]
                  CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=COMPONENT_N(index=2)
                    $this: GET_VAR '<destruct>: <unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> declared in <root>.testIntWithIndexForEach.<anonymous>' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> origin=null
                BLOCK type=<unbound IrClassSymbolImpl> origin=null
                  SET_VAR 'var s: <unbound IrClassSymbolImpl> [var] declared in <root>.testIntWithIndexForEach' type=<unbound IrClassSymbolImpl> origin=EQ
                    CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=PLUS
                      $this: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=MUL
                        $this: GET_VAR 'var s: <unbound IrClassSymbolImpl> [var] declared in <root>.testIntWithIndexForEach' type=<unbound IrClassSymbolImpl> origin=null
                        1: CONST Int type=<unbound IrClassSymbolImpl> value=10
                      1: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=MUL
                        $this: GET_VAR 'val index: <unbound IrClassSymbolImpl> [val] declared in <root>.testIntWithIndexForEach.<anonymous>' type=<unbound IrClassSymbolImpl> origin=null
                        1: GET_VAR 'val elem: <unbound IrClassSymbolImpl> [val] declared in <root>.testIntWithIndexForEach.<anonymous>' type=<unbound IrClassSymbolImpl> origin=null
        RETURN type=<unbound IrClassSymbolImpl> from='public final fun testIntWithIndexForEach (): <unbound IrClassSymbolImpl> declared in <root>'
          GET_VAR 'var s: <unbound IrClassSymbolImpl> [var] declared in <root>.testIntWithIndexForEach' type=<unbound IrClassSymbolImpl> origin=null
    FUN name:testIntSequenceWithIndex signature:/testIntSequenceWithIndex|testIntSequenceWithIndex(){}[0] visibility:public modality:FINAL <> () returnType:<unbound IrClassSymbolImpl>
      BLOCK_BODY
        VAR name:s type:<unbound IrClassSymbolImpl> [var]
          CONST Int type=<unbound IrClassSymbolImpl> value=0
        BLOCK type=<unbound IrClassSymbolImpl> origin=FOR_LOOP
          VAR FOR_LOOP_ITERATOR name:<iterator> type:<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>>> [val]
            CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>>> origin=null
              $this: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>>> origin=null
                <1>: <unbound IrClassSymbolImpl>
                $receiver: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> origin=null
                  <1>: <unbound IrClassSymbolImpl>
                  $receiver: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=RANGE
                    $this: CONST Int type=<unbound IrClassSymbolImpl> value=0
                    1: CONST Int type=<unbound IrClassSymbolImpl> value=4
          WHILE label=null origin=FOR_LOOP_INNER_WHILE
            condition: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=FOR_LOOP_HAS_NEXT
              $this: GET_VAR 'val <iterator>: <unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>>> [val] declared in <root>.testIntSequenceWithIndex' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>>> origin=null
            body: BLOCK type=<unbound IrClassSymbolImpl> origin=FOR_LOOP_INNER_WHILE
              VAR IR_TEMPORARY_VARIABLE name:<destruct> type:<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> [val]
                CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> origin=FOR_LOOP_NEXT
                  $this: GET_VAR 'val <iterator>: <unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>>> [val] declared in <root>.testIntSequenceWithIndex' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>>> origin=null
              VAR name:index type:<unbound IrClassSymbolImpl> [val]
                CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=COMPONENT_N(index=1)
                  $this: GET_VAR 'val <destruct>: <unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> [val] declared in <root>.testIntSequenceWithIndex' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> origin=null
              VAR name:elem type:<unbound IrClassSymbolImpl> [val]
                CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=COMPONENT_N(index=2)
                  $this: GET_VAR 'val <destruct>: <unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> [val] declared in <root>.testIntSequenceWithIndex' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> origin=null
              BLOCK type=<unbound IrClassSymbolImpl> origin=null
                SET_VAR 'var s: <unbound IrClassSymbolImpl> [var] declared in <root>.testIntSequenceWithIndex' type=<unbound IrClassSymbolImpl> origin=EQ
                  CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=PLUS
                    $this: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=MUL
                      $this: GET_VAR 'var s: <unbound IrClassSymbolImpl> [var] declared in <root>.testIntSequenceWithIndex' type=<unbound IrClassSymbolImpl> origin=null
                      1: CONST Int type=<unbound IrClassSymbolImpl> value=10
                    1: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=MUL
                      $this: GET_VAR 'val index: <unbound IrClassSymbolImpl> [val] declared in <root>.testIntSequenceWithIndex' type=<unbound IrClassSymbolImpl> origin=null
                      1: GET_VAR 'val elem: <unbound IrClassSymbolImpl> [val] declared in <root>.testIntSequenceWithIndex' type=<unbound IrClassSymbolImpl> origin=null
        RETURN type=<unbound IrClassSymbolImpl> from='public final fun testIntSequenceWithIndex (): <unbound IrClassSymbolImpl> declared in <root>'
          GET_VAR 'var s: <unbound IrClassSymbolImpl> [var] declared in <root>.testIntSequenceWithIndex' type=<unbound IrClassSymbolImpl> origin=null
    FUN name:testIntForEachSequenceWithIndex signature:/testIntForEachSequenceWithIndex|testIntForEachSequenceWithIndex(){}[0] visibility:public modality:FINAL <> () returnType:<unbound IrClassSymbolImpl>
      BLOCK_BODY
        VAR name:s type:<unbound IrClassSymbolImpl> [var]
          CONST Int type=<unbound IrClassSymbolImpl> value=0
        CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
          <1>: <unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>>
          $receiver: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>>> origin=null
            <1>: <unbound IrClassSymbolImpl>
            $receiver: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> origin=null
              <1>: <unbound IrClassSymbolImpl>
              $receiver: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=RANGE
                $this: CONST Int type=<unbound IrClassSymbolImpl> value=0
                1: CONST Int type=<unbound IrClassSymbolImpl> value=4
          1: FUN_EXPR type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>>, <unbound IrClassSymbolImpl>> origin=LAMBDA
            FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL <> (<destruct>:<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>>) returnType:<unbound IrClassSymbolImpl>
              VALUE_PARAMETER DESTRUCTURED_OBJECT_PARAMETER name:<destruct> index:0 type:<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>>
              BLOCK_BODY
                VAR name:index type:<unbound IrClassSymbolImpl> [val]
                  CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=COMPONENT_N(index=1)
                    $this: GET_VAR '<destruct>: <unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> declared in <root>.testIntForEachSequenceWithIndex.<anonymous>' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> origin=null
                VAR name:elem type:<unbound IrClassSymbolImpl> [val]
                  CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=COMPONENT_N(index=2)
                    $this: GET_VAR '<destruct>: <unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> declared in <root>.testIntForEachSequenceWithIndex.<anonymous>' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> origin=null
                BLOCK type=<unbound IrClassSymbolImpl> origin=null
                  SET_VAR 'var s: <unbound IrClassSymbolImpl> [var] declared in <root>.testIntForEachSequenceWithIndex' type=<unbound IrClassSymbolImpl> origin=EQ
                    CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=PLUS
                      $this: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=MUL
                        $this: GET_VAR 'var s: <unbound IrClassSymbolImpl> [var] declared in <root>.testIntForEachSequenceWithIndex' type=<unbound IrClassSymbolImpl> origin=null
                        1: CONST Int type=<unbound IrClassSymbolImpl> value=10
                      1: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=MUL
                        $this: GET_VAR 'val index: <unbound IrClassSymbolImpl> [val] declared in <root>.testIntForEachSequenceWithIndex.<anonymous>' type=<unbound IrClassSymbolImpl> origin=null
                        1: GET_VAR 'val elem: <unbound IrClassSymbolImpl> [val] declared in <root>.testIntForEachSequenceWithIndex.<anonymous>' type=<unbound IrClassSymbolImpl> origin=null
        RETURN type=<unbound IrClassSymbolImpl> from='public final fun testIntForEachSequenceWithIndex (): <unbound IrClassSymbolImpl> declared in <root>'
          GET_VAR 'var s: <unbound IrClassSymbolImpl> [var] declared in <root>.testIntForEachSequenceWithIndex' type=<unbound IrClassSymbolImpl> origin=null
    FUN name:box signature:/box|box(){}[0] visibility:public modality:FINAL <> () returnType:<unbound IrClassSymbolImpl>
      BLOCK_BODY
        CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
          <1>: <unbound IrClassSymbolImpl>
          1: CONST Int type=<unbound IrClassSymbolImpl> value=2740
          2: CALL 'public final fun testIntForWithIndex (): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
        CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
          <1>: <unbound IrClassSymbolImpl>
          1: CONST Int type=<unbound IrClassSymbolImpl> value=2740
          2: CALL 'public final fun testIntForWithIndexAndDestructor (): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
        CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
          <1>: <unbound IrClassSymbolImpl>
          1: CONST Int type=<unbound IrClassSymbolImpl> value=1234
          2: CALL 'public final fun testIntForWithIndexPartiallyUsed (): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
        CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
          <1>: <unbound IrClassSymbolImpl>
          1: CONST Int type=<unbound IrClassSymbolImpl> value=5
          2: CALL 'public final fun testIntForWithIndexNotUsed (): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
        CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
          <1>: <unbound IrClassSymbolImpl>
          1: CONST Int type=<unbound IrClassSymbolImpl> value=5
          2: CALL 'public final fun testIntForWithIndexAndDestructorNotUsed (): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
        CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
          <1>: <unbound IrClassSymbolImpl>
          1: CONST Int type=<unbound IrClassSymbolImpl> value=2740
          2: CALL 'public final fun testIntArrayForWithIndex (): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
        CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
          <1>: <unbound IrClassSymbolImpl>
          1: CONST Int type=<unbound IrClassSymbolImpl> value=2740
          2: CALL 'public final fun testUIntArrayForWithIndex (): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
        CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
          <1>: <unbound IrClassSymbolImpl>
          1: CONST Int type=<unbound IrClassSymbolImpl> value=794
          2: CALL 'public final fun testForStringWithIndex (): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
        CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
          <1>: <unbound IrClassSymbolImpl>
          1: CONST Int type=<unbound IrClassSymbolImpl> value=2740
          2: CALL 'public final fun testIntForWithIndexWithTemporary (): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
        CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
          <1>: <unbound IrClassSymbolImpl>
          1: CONST Int type=<unbound IrClassSymbolImpl> value=2740
          2: CALL 'public final fun testIntWithIndexForEach (): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
        CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
          <1>: <unbound IrClassSymbolImpl>
          1: CONST Int type=<unbound IrClassSymbolImpl> value=1506
          2: CALL 'public final fun testIntSequenceWithIndex (): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
        CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
          <1>: <unbound IrClassSymbolImpl>
          1: CONST Int type=<unbound IrClassSymbolImpl> value=1506
          2: CALL 'public final fun testIntForEachSequenceWithIndex (): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
        RETURN type=<unbound IrClassSymbolImpl> from='public final fun box (): <unbound IrClassSymbolImpl> declared in <root>'
          CONST String type=<unbound IrClassSymbolImpl> value="OK"
