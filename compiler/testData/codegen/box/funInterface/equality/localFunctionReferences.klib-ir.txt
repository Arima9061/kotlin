MODULE_FRAGMENT name:<main>
  FILE fqName:<root> fileName:/localFunctionReferences.kt
    FUN name:checkEqual signature:/checkEqual|checkEqual(kotlin.Any;kotlin.Any){}[0] visibility:public modality:FINAL <> (x:<unbound IrClassSymbolImpl>, y:<unbound IrClassSymbolImpl>) returnType:<unbound IrClassSymbolImpl>
      VALUE_PARAMETER name:x index:0 type:<unbound IrClassSymbolImpl>
      VALUE_PARAMETER name:y index:1 type:<unbound IrClassSymbolImpl>
      BLOCK_BODY
        WHEN type=<unbound IrClassSymbolImpl> origin=IF
          BRANCH
            if: WHEN type=<unbound IrClassSymbolImpl> origin=OROR
              BRANCH
                if: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=EXCLEQ
                  $this: CALL 'public final fun EQEQ (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EXCLEQ
                    arg0: GET_VAR 'x: <unbound IrClassSymbolImpl> declared in <root>.checkEqual' type=<unbound IrClassSymbolImpl> origin=null
                    arg1: GET_VAR 'y: <unbound IrClassSymbolImpl> declared in <root>.checkEqual' type=<unbound IrClassSymbolImpl> origin=null
                then: CONST Boolean type=<unbound IrClassSymbolImpl> value=true
              BRANCH
                if: CONST Boolean type=<unbound IrClassSymbolImpl> value=true
                then: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=EXCLEQ
                  $this: CALL 'public final fun EQEQ (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EXCLEQ
                    arg0: GET_VAR 'y: <unbound IrClassSymbolImpl> declared in <root>.checkEqual' type=<unbound IrClassSymbolImpl> origin=null
                    arg1: GET_VAR 'x: <unbound IrClassSymbolImpl> declared in <root>.checkEqual' type=<unbound IrClassSymbolImpl> origin=null
            then: THROW type=<unbound IrClassSymbolImpl>
              CONSTRUCTOR_CALL 'UNBOUND IrConstructorSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
                1: STRING_CONCATENATION type=<unbound IrClassSymbolImpl>
                  GET_VAR 'x: <unbound IrClassSymbolImpl> declared in <root>.checkEqual' type=<unbound IrClassSymbolImpl> origin=null
                  CONST String type=<unbound IrClassSymbolImpl> value=" and "
                  GET_VAR 'y: <unbound IrClassSymbolImpl> declared in <root>.checkEqual' type=<unbound IrClassSymbolImpl> origin=null
                  CONST String type=<unbound IrClassSymbolImpl> value=" should be equal"
        WHEN type=<unbound IrClassSymbolImpl> origin=IF
          BRANCH
            if: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=EXCLEQ
              $this: CALL 'public final fun EQEQ (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EXCLEQ
                arg0: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
                  $this: GET_VAR 'x: <unbound IrClassSymbolImpl> declared in <root>.checkEqual' type=<unbound IrClassSymbolImpl> origin=null
                arg1: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
                  $this: GET_VAR 'y: <unbound IrClassSymbolImpl> declared in <root>.checkEqual' type=<unbound IrClassSymbolImpl> origin=null
            then: THROW type=<unbound IrClassSymbolImpl>
              CONSTRUCTOR_CALL 'UNBOUND IrConstructorSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
                1: STRING_CONCATENATION type=<unbound IrClassSymbolImpl>
                  GET_VAR 'x: <unbound IrClassSymbolImpl> declared in <root>.checkEqual' type=<unbound IrClassSymbolImpl> origin=null
                  CONST String type=<unbound IrClassSymbolImpl> value=" and "
                  GET_VAR 'y: <unbound IrClassSymbolImpl> declared in <root>.checkEqual' type=<unbound IrClassSymbolImpl> origin=null
                  CONST String type=<unbound IrClassSymbolImpl> value=" should have the same hash code"
    FUN name:checkNotEqual signature:/checkNotEqual|checkNotEqual(kotlin.Any;kotlin.Any){}[0] visibility:public modality:FINAL <> (x:<unbound IrClassSymbolImpl>, y:<unbound IrClassSymbolImpl>) returnType:<unbound IrClassSymbolImpl>
      VALUE_PARAMETER name:x index:0 type:<unbound IrClassSymbolImpl>
      VALUE_PARAMETER name:y index:1 type:<unbound IrClassSymbolImpl>
      BLOCK_BODY
        WHEN type=<unbound IrClassSymbolImpl> origin=IF
          BRANCH
            if: WHEN type=<unbound IrClassSymbolImpl> origin=OROR
              BRANCH
                if: CALL 'public final fun EQEQ (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EQEQ
                  arg0: GET_VAR 'x: <unbound IrClassSymbolImpl> declared in <root>.checkNotEqual' type=<unbound IrClassSymbolImpl> origin=null
                  arg1: GET_VAR 'y: <unbound IrClassSymbolImpl> declared in <root>.checkNotEqual' type=<unbound IrClassSymbolImpl> origin=null
                then: CONST Boolean type=<unbound IrClassSymbolImpl> value=true
              BRANCH
                if: CONST Boolean type=<unbound IrClassSymbolImpl> value=true
                then: CALL 'public final fun EQEQ (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EQEQ
                  arg0: GET_VAR 'y: <unbound IrClassSymbolImpl> declared in <root>.checkNotEqual' type=<unbound IrClassSymbolImpl> origin=null
                  arg1: GET_VAR 'x: <unbound IrClassSymbolImpl> declared in <root>.checkNotEqual' type=<unbound IrClassSymbolImpl> origin=null
            then: THROW type=<unbound IrClassSymbolImpl>
              CONSTRUCTOR_CALL 'UNBOUND IrConstructorSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
                1: STRING_CONCATENATION type=<unbound IrClassSymbolImpl>
                  GET_VAR 'x: <unbound IrClassSymbolImpl> declared in <root>.checkNotEqual' type=<unbound IrClassSymbolImpl> origin=null
                  CONST String type=<unbound IrClassSymbolImpl> value=" and "
                  GET_VAR 'y: <unbound IrClassSymbolImpl> declared in <root>.checkNotEqual' type=<unbound IrClassSymbolImpl> origin=null
                  CONST String type=<unbound IrClassSymbolImpl> value=" should NOT be equal"
    CLASS INTERFACE name:FunInterface signature:/FunInterface|null[0] modality:ABSTRACT visibility:public [fun] superTypes:[<unbound IrClassSymbolImpl>]
      $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:<root>.FunInterface
      FUN name:invoke signature:/FunInterface.invoke|invoke(){}[0] visibility:public modality:ABSTRACT <> ($this:<root>.FunInterface) returnType:<unbound IrClassSymbolImpl>
        $this: VALUE_PARAMETER name:<this> type:<root>.FunInterface
    FUN name:id signature:[ File '/localFunctionReferences.kt' <- /id|id(FunInterface){}[0] ] visibility:private modality:FINAL <> (f:<root>.FunInterface) returnType:<unbound IrClassSymbolImpl>
      VALUE_PARAMETER name:f index:0 type:<root>.FunInterface
      BLOCK_BODY
        RETURN type=<unbound IrClassSymbolImpl> from='private final fun id (f: <root>.FunInterface): <unbound IrClassSymbolImpl> declared in <root>'
          GET_VAR 'f: <root>.FunInterface declared in <root>.id' type=<root>.FunInterface origin=null
    FUN name:box signature:/box|box(){}[0] visibility:public modality:FINAL <> () returnType:<unbound IrClassSymbolImpl>
      BLOCK_BODY
        FUN LOCAL_FUNCTION name:local1 visibility:local modality:FINAL <> () returnType:<unbound IrClassSymbolImpl>
          BLOCK_BODY
        FUN LOCAL_FUNCTION name:local2 visibility:local modality:FINAL <> () returnType:<unbound IrClassSymbolImpl>
          BLOCK_BODY
        CALL 'public final fun checkEqual (x: <unbound IrClassSymbolImpl>, y: <unbound IrClassSymbolImpl>): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
          x: CALL 'private final fun id (f: <root>.FunInterface): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
            f: TYPE_OP type=<root>.FunInterface origin=SAM_CONVERSION typeOperand=<root>.FunInterface
              FUNCTION_REFERENCE 'local final fun local1 (): <unbound IrClassSymbolImpl> declared in <root>.box' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> origin=null reflectionTarget=<same>
          y: CALL 'private final fun id (f: <root>.FunInterface): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
            f: TYPE_OP type=<root>.FunInterface origin=SAM_CONVERSION typeOperand=<root>.FunInterface
              FUNCTION_REFERENCE 'local final fun local1 (): <unbound IrClassSymbolImpl> declared in <root>.box' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> origin=null reflectionTarget=<same>
        CALL 'public final fun checkNotEqual (x: <unbound IrClassSymbolImpl>, y: <unbound IrClassSymbolImpl>): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
          x: CALL 'private final fun id (f: <root>.FunInterface): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
            f: TYPE_OP type=<root>.FunInterface origin=SAM_CONVERSION typeOperand=<root>.FunInterface
              FUNCTION_REFERENCE 'local final fun local1 (): <unbound IrClassSymbolImpl> declared in <root>.box' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> origin=null reflectionTarget=<same>
          y: CALL 'private final fun id (f: <root>.FunInterface): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
            f: TYPE_OP type=<root>.FunInterface origin=SAM_CONVERSION typeOperand=<root>.FunInterface
              FUNCTION_REFERENCE 'local final fun local2 (): <unbound IrClassSymbolImpl> declared in <root>.box' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> origin=null reflectionTarget=<same>
        FUN LOCAL_FUNCTION name:localExt visibility:local modality:FINAL <> ($receiver:<unbound IrClassSymbolImpl>) returnType:<unbound IrClassSymbolImpl>
          $receiver: VALUE_PARAMETER name:<this> type:<unbound IrClassSymbolImpl>
          BLOCK_BODY
        CALL 'public final fun checkEqual (x: <unbound IrClassSymbolImpl>, y: <unbound IrClassSymbolImpl>): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
          x: CALL 'private final fun id (f: <root>.FunInterface): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
            f: TYPE_OP type=<root>.FunInterface origin=SAM_CONVERSION typeOperand=<root>.FunInterface
              FUNCTION_REFERENCE 'local final fun localExt (): <unbound IrClassSymbolImpl> declared in <root>.box' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> origin=null reflectionTarget=<same>
                $receiver: CONST String type=<unbound IrClassSymbolImpl> value="A"
          y: CALL 'private final fun id (f: <root>.FunInterface): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
            f: TYPE_OP type=<root>.FunInterface origin=SAM_CONVERSION typeOperand=<root>.FunInterface
              FUNCTION_REFERENCE 'local final fun localExt (): <unbound IrClassSymbolImpl> declared in <root>.box' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> origin=null reflectionTarget=<same>
                $receiver: CONST String type=<unbound IrClassSymbolImpl> value="A"
        CALL 'public final fun checkNotEqual (x: <unbound IrClassSymbolImpl>, y: <unbound IrClassSymbolImpl>): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
          x: CALL 'private final fun id (f: <root>.FunInterface): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
            f: TYPE_OP type=<root>.FunInterface origin=SAM_CONVERSION typeOperand=<root>.FunInterface
              FUNCTION_REFERENCE 'local final fun localExt (): <unbound IrClassSymbolImpl> declared in <root>.box' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> origin=null reflectionTarget=<same>
                $receiver: CONST String type=<unbound IrClassSymbolImpl> value="A"
          y: CALL 'private final fun id (f: <root>.FunInterface): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
            f: TYPE_OP type=<root>.FunInterface origin=SAM_CONVERSION typeOperand=<root>.FunInterface
              FUNCTION_REFERENCE 'local final fun localExt (): <unbound IrClassSymbolImpl> declared in <root>.box' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> origin=null reflectionTarget=<same>
                $receiver: CONST String type=<unbound IrClassSymbolImpl> value="B"
        FUN LOCAL_FUNCTION name:adapted visibility:local modality:FINAL <> (default:<unbound IrClassSymbolImpl>?, va:<unbound IrClassSymbolImpl>) returnType:<unbound IrClassSymbolImpl>
          VALUE_PARAMETER name:default index:0 type:<unbound IrClassSymbolImpl>?
            EXPRESSION_BODY
              CONST String type=<unbound IrClassSymbolImpl> value=""
          VALUE_PARAMETER name:va index:1 type:<unbound IrClassSymbolImpl> varargElementType:<unbound IrClassSymbolImpl> [vararg]
          BLOCK_BODY
            RETURN type=<unbound IrClassSymbolImpl> from='local final fun adapted (default: <unbound IrClassSymbolImpl>?, vararg va: <unbound IrClassSymbolImpl>): <unbound IrClassSymbolImpl> declared in <root>.box'
              CONST Int type=<unbound IrClassSymbolImpl> value=0
        CALL 'public final fun checkEqual (x: <unbound IrClassSymbolImpl>, y: <unbound IrClassSymbolImpl>): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
          x: CALL 'private final fun id (f: <root>.FunInterface): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
            f: BLOCK type=<root>.FunInterface origin=ADAPTED_FUNCTION_REFERENCE
              FUN ADAPTER_FOR_CALLABLE_REFERENCE name:adapted visibility:local modality:FINAL <> () returnType:<unbound IrClassSymbolImpl>
                BLOCK_BODY
                  TYPE_OP type=<unbound IrClassSymbolImpl> origin=IMPLICIT_COERCION_TO_UNIT typeOperand=<unbound IrClassSymbolImpl>
                    CALL 'local final fun adapted (default: <unbound IrClassSymbolImpl>?, vararg va: <unbound IrClassSymbolImpl>): <unbound IrClassSymbolImpl> declared in <root>.box' type=<unbound IrClassSymbolImpl> origin=null
              TYPE_OP type=<root>.FunInterface origin=SAM_CONVERSION typeOperand=<root>.FunInterface
                FUNCTION_REFERENCE 'local final fun adapted (): <unbound IrClassSymbolImpl> declared in <root>.box' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> origin=ADAPTED_FUNCTION_REFERENCE reflectionTarget=local final fun adapted (default: <unbound IrClassSymbolImpl>?, vararg va: <unbound IrClassSymbolImpl>): <unbound IrClassSymbolImpl> declared in <root>.box
          y: CALL 'private final fun id (f: <root>.FunInterface): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
            f: BLOCK type=<root>.FunInterface origin=ADAPTED_FUNCTION_REFERENCE
              FUN ADAPTER_FOR_CALLABLE_REFERENCE name:adapted visibility:local modality:FINAL <> () returnType:<unbound IrClassSymbolImpl>
                BLOCK_BODY
                  TYPE_OP type=<unbound IrClassSymbolImpl> origin=IMPLICIT_COERCION_TO_UNIT typeOperand=<unbound IrClassSymbolImpl>
                    CALL 'local final fun adapted (default: <unbound IrClassSymbolImpl>?, vararg va: <unbound IrClassSymbolImpl>): <unbound IrClassSymbolImpl> declared in <root>.box' type=<unbound IrClassSymbolImpl> origin=null
              TYPE_OP type=<root>.FunInterface origin=SAM_CONVERSION typeOperand=<root>.FunInterface
                FUNCTION_REFERENCE 'local final fun adapted (): <unbound IrClassSymbolImpl> declared in <root>.box' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> origin=ADAPTED_FUNCTION_REFERENCE reflectionTarget=local final fun adapted (default: <unbound IrClassSymbolImpl>?, vararg va: <unbound IrClassSymbolImpl>): <unbound IrClassSymbolImpl> declared in <root>.box
        RETURN type=<unbound IrClassSymbolImpl> from='public final fun box (): <unbound IrClassSymbolImpl> declared in <root>'
          CONST String type=<unbound IrClassSymbolImpl> value="OK"
