MODULE_FRAGMENT name:<main>
  FILE fqName:<root> fileName:/smartCastOnWhenSubjectAfterCheckInBranch_properIeeeComparisons.kt
    FUN name:testF signature:/testF|testF(kotlin.Any){}[0] visibility:public modality:FINAL <> (x:<unbound IrClassSymbolImpl>) returnType:<unbound IrClassSymbolImpl>
      VALUE_PARAMETER name:x index:0 type:<unbound IrClassSymbolImpl>
      BLOCK_BODY
        RETURN type=<unbound IrClassSymbolImpl> from='public final fun testF (x: <unbound IrClassSymbolImpl>): <unbound IrClassSymbolImpl> declared in <root>'
          BLOCK type=<unbound IrClassSymbolImpl> origin=WHEN
            VAR IR_TEMPORARY_VARIABLE name:tmp0_subject type:<unbound IrClassSymbolImpl> [val]
              GET_VAR 'x: <unbound IrClassSymbolImpl> declared in <root>.testF' type=<unbound IrClassSymbolImpl> origin=null
            WHEN type=<unbound IrClassSymbolImpl> origin=WHEN
              BRANCH
                if: TYPE_OP type=<unbound IrClassSymbolImpl> origin=NOT_INSTANCEOF typeOperand=<unbound IrClassSymbolImpl>
                  GET_VAR 'val tmp0_subject: <unbound IrClassSymbolImpl> [val] declared in <root>.testF' type=<unbound IrClassSymbolImpl> origin=null
                then: CONST String type=<unbound IrClassSymbolImpl> value="!Float"
              BRANCH
                if: CALL 'public final fun ieee754equals (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EQEQ
                  arg0: TYPE_OP type=<unbound IrClassSymbolImpl> origin=IMPLICIT_CAST typeOperand=<unbound IrClassSymbolImpl>
                    GET_VAR 'val tmp0_subject: <unbound IrClassSymbolImpl> [val] declared in <root>.testF' type=<unbound IrClassSymbolImpl> origin=null
                  arg1: CONST Float type=<unbound IrClassSymbolImpl> value=0.0
                then: CONST String type=<unbound IrClassSymbolImpl> value="0.0"
              BRANCH
                if: CONST Boolean type=<unbound IrClassSymbolImpl> value=true
                then: CONST String type=<unbound IrClassSymbolImpl> value="other"
    FUN name:testD signature:/testD|testD(kotlin.Any){}[0] visibility:public modality:FINAL <> (x:<unbound IrClassSymbolImpl>) returnType:<unbound IrClassSymbolImpl>
      VALUE_PARAMETER name:x index:0 type:<unbound IrClassSymbolImpl>
      BLOCK_BODY
        RETURN type=<unbound IrClassSymbolImpl> from='public final fun testD (x: <unbound IrClassSymbolImpl>): <unbound IrClassSymbolImpl> declared in <root>'
          BLOCK type=<unbound IrClassSymbolImpl> origin=WHEN
            VAR IR_TEMPORARY_VARIABLE name:tmp0_subject type:<unbound IrClassSymbolImpl> [val]
              GET_VAR 'x: <unbound IrClassSymbolImpl> declared in <root>.testD' type=<unbound IrClassSymbolImpl> origin=null
            WHEN type=<unbound IrClassSymbolImpl> origin=WHEN
              BRANCH
                if: TYPE_OP type=<unbound IrClassSymbolImpl> origin=NOT_INSTANCEOF typeOperand=<unbound IrClassSymbolImpl>
                  GET_VAR 'val tmp0_subject: <unbound IrClassSymbolImpl> [val] declared in <root>.testD' type=<unbound IrClassSymbolImpl> origin=null
                then: CONST String type=<unbound IrClassSymbolImpl> value="!Double"
              BRANCH
                if: CALL 'public final fun ieee754equals (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EQEQ
                  arg0: TYPE_OP type=<unbound IrClassSymbolImpl> origin=IMPLICIT_CAST typeOperand=<unbound IrClassSymbolImpl>
                    GET_VAR 'val tmp0_subject: <unbound IrClassSymbolImpl> [val] declared in <root>.testD' type=<unbound IrClassSymbolImpl> origin=null
                  arg1: CONST Double type=<unbound IrClassSymbolImpl> value=0.0
                then: CONST String type=<unbound IrClassSymbolImpl> value="0.0"
              BRANCH
                if: CONST Boolean type=<unbound IrClassSymbolImpl> value=true
                then: CONST String type=<unbound IrClassSymbolImpl> value="other"
    FUN name:box signature:/box|box(){}[0] visibility:public modality:FINAL <> () returnType:<unbound IrClassSymbolImpl>
      BLOCK_BODY
        VAR name:tf type:<unbound IrClassSymbolImpl> [val]
          CALL 'public final fun testF (x: <unbound IrClassSymbolImpl>): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
            x: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
              $this: CONST Float type=<unbound IrClassSymbolImpl> value=0.0
        WHEN type=<unbound IrClassSymbolImpl> origin=IF
          BRANCH
            if: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=EXCLEQ
              $this: CALL 'public final fun EQEQ (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EXCLEQ
                arg0: GET_VAR 'val tf: <unbound IrClassSymbolImpl> [val] declared in <root>.box' type=<unbound IrClassSymbolImpl> origin=null
                arg1: CONST String type=<unbound IrClassSymbolImpl> value="0.0"
            then: RETURN type=<unbound IrClassSymbolImpl> from='public final fun box (): <unbound IrClassSymbolImpl> declared in <root>'
              STRING_CONCATENATION type=<unbound IrClassSymbolImpl>
                CONST String type=<unbound IrClassSymbolImpl> value="Fail 1: "
                GET_VAR 'val tf: <unbound IrClassSymbolImpl> [val] declared in <root>.box' type=<unbound IrClassSymbolImpl> origin=null
        VAR name:td type:<unbound IrClassSymbolImpl> [val]
          CALL 'public final fun testD (x: <unbound IrClassSymbolImpl>): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
            x: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
              $this: CONST Double type=<unbound IrClassSymbolImpl> value=0.0
        WHEN type=<unbound IrClassSymbolImpl> origin=IF
          BRANCH
            if: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=EXCLEQ
              $this: CALL 'public final fun EQEQ (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EXCLEQ
                arg0: GET_VAR 'val td: <unbound IrClassSymbolImpl> [val] declared in <root>.box' type=<unbound IrClassSymbolImpl> origin=null
                arg1: CONST String type=<unbound IrClassSymbolImpl> value="0.0"
            then: RETURN type=<unbound IrClassSymbolImpl> from='public final fun box (): <unbound IrClassSymbolImpl> declared in <root>'
              STRING_CONCATENATION type=<unbound IrClassSymbolImpl>
                CONST String type=<unbound IrClassSymbolImpl> value="Fail 2: "
                GET_VAR 'val td: <unbound IrClassSymbolImpl> [val] declared in <root>.box' type=<unbound IrClassSymbolImpl> origin=null
        RETURN type=<unbound IrClassSymbolImpl> from='public final fun box (): <unbound IrClassSymbolImpl> declared in <root>'
          CONST String type=<unbound IrClassSymbolImpl> value="OK"
