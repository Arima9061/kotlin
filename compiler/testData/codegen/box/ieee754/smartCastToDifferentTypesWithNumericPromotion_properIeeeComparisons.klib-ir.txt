MODULE_FRAGMENT name:<main>
  FILE fqName:<root> fileName:/smartCastToDifferentTypesWithNumericPromotion_properIeeeComparisons.kt
    FUN name:eqDI signature:/eqDI|eqDI(kotlin.Any?;kotlin.Any?){}[0] visibility:public modality:FINAL <> (x:<unbound IrClassSymbolImpl>?, y:<unbound IrClassSymbolImpl>?) returnType:<unbound IrClassSymbolImpl>
      VALUE_PARAMETER name:x index:0 type:<unbound IrClassSymbolImpl>?
      VALUE_PARAMETER name:y index:1 type:<unbound IrClassSymbolImpl>?
      BLOCK_BODY
        RETURN type=<unbound IrClassSymbolImpl> from='public final fun eqDI (x: <unbound IrClassSymbolImpl>?, y: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in <root>'
          WHEN type=<unbound IrClassSymbolImpl> origin=ANDAND
            BRANCH
              if: WHEN type=<unbound IrClassSymbolImpl> origin=ANDAND
                BRANCH
                  if: TYPE_OP type=<unbound IrClassSymbolImpl> origin=INSTANCEOF typeOperand=<unbound IrClassSymbolImpl>?
                    GET_VAR 'x: <unbound IrClassSymbolImpl>? declared in <root>.eqDI' type=<unbound IrClassSymbolImpl>? origin=null
                  then: TYPE_OP type=<unbound IrClassSymbolImpl> origin=INSTANCEOF typeOperand=<unbound IrClassSymbolImpl>?
                    GET_VAR 'y: <unbound IrClassSymbolImpl>? declared in <root>.eqDI' type=<unbound IrClassSymbolImpl>? origin=null
                BRANCH
                  if: CONST Boolean type=<unbound IrClassSymbolImpl> value=true
                  then: CONST Boolean type=<unbound IrClassSymbolImpl> value=false
              then: CALL 'public final fun ieee754equals (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EQEQ
                arg0: TYPE_OP type=<unbound IrClassSymbolImpl>? origin=IMPLICIT_CAST typeOperand=<unbound IrClassSymbolImpl>?
                  GET_VAR 'x: <unbound IrClassSymbolImpl>? declared in <root>.eqDI' type=<unbound IrClassSymbolImpl>? origin=null
                arg1: BLOCK type=<unbound IrClassSymbolImpl>? origin=SAFE_CALL
                  VAR IR_TEMPORARY_VARIABLE name:tmp0_safe_receiver type:<unbound IrClassSymbolImpl>? [val]
                    TYPE_OP type=<unbound IrClassSymbolImpl>? origin=IMPLICIT_CAST typeOperand=<unbound IrClassSymbolImpl>?
                      GET_VAR 'y: <unbound IrClassSymbolImpl>? declared in <root>.eqDI' type=<unbound IrClassSymbolImpl>? origin=null
                  WHEN type=<unbound IrClassSymbolImpl>? origin=null
                    BRANCH
                      if: CALL 'public final fun EQEQ (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EQEQ
                        arg0: GET_VAR 'val tmp0_safe_receiver: <unbound IrClassSymbolImpl>? [val] declared in <root>.eqDI' type=<unbound IrClassSymbolImpl>? origin=null
                        arg1: CONST Null type=<unbound IrClassSymbolImpl>? value=null
                      then: CONST Null type=<unbound IrClassSymbolImpl>? value=null
                    BRANCH
                      if: CONST Boolean type=<unbound IrClassSymbolImpl> value=true
                      then: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
                        $this: GET_VAR 'val tmp0_safe_receiver: <unbound IrClassSymbolImpl>? [val] declared in <root>.eqDI' type=<unbound IrClassSymbolImpl>? origin=null
            BRANCH
              if: CONST Boolean type=<unbound IrClassSymbolImpl> value=true
              then: CONST Boolean type=<unbound IrClassSymbolImpl> value=false
    FUN name:eqDL signature:/eqDL|eqDL(kotlin.Any?;kotlin.Any?){}[0] visibility:public modality:FINAL <> (x:<unbound IrClassSymbolImpl>?, y:<unbound IrClassSymbolImpl>?) returnType:<unbound IrClassSymbolImpl>
      VALUE_PARAMETER name:x index:0 type:<unbound IrClassSymbolImpl>?
      VALUE_PARAMETER name:y index:1 type:<unbound IrClassSymbolImpl>?
      BLOCK_BODY
        RETURN type=<unbound IrClassSymbolImpl> from='public final fun eqDL (x: <unbound IrClassSymbolImpl>?, y: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in <root>'
          WHEN type=<unbound IrClassSymbolImpl> origin=ANDAND
            BRANCH
              if: WHEN type=<unbound IrClassSymbolImpl> origin=ANDAND
                BRANCH
                  if: TYPE_OP type=<unbound IrClassSymbolImpl> origin=INSTANCEOF typeOperand=<unbound IrClassSymbolImpl>?
                    GET_VAR 'x: <unbound IrClassSymbolImpl>? declared in <root>.eqDL' type=<unbound IrClassSymbolImpl>? origin=null
                  then: TYPE_OP type=<unbound IrClassSymbolImpl> origin=INSTANCEOF typeOperand=<unbound IrClassSymbolImpl>?
                    GET_VAR 'y: <unbound IrClassSymbolImpl>? declared in <root>.eqDL' type=<unbound IrClassSymbolImpl>? origin=null
                BRANCH
                  if: CONST Boolean type=<unbound IrClassSymbolImpl> value=true
                  then: CONST Boolean type=<unbound IrClassSymbolImpl> value=false
              then: CALL 'public final fun ieee754equals (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EQEQ
                arg0: TYPE_OP type=<unbound IrClassSymbolImpl>? origin=IMPLICIT_CAST typeOperand=<unbound IrClassSymbolImpl>?
                  GET_VAR 'x: <unbound IrClassSymbolImpl>? declared in <root>.eqDL' type=<unbound IrClassSymbolImpl>? origin=null
                arg1: BLOCK type=<unbound IrClassSymbolImpl>? origin=SAFE_CALL
                  VAR IR_TEMPORARY_VARIABLE name:tmp0_safe_receiver type:<unbound IrClassSymbolImpl>? [val]
                    TYPE_OP type=<unbound IrClassSymbolImpl>? origin=IMPLICIT_CAST typeOperand=<unbound IrClassSymbolImpl>?
                      GET_VAR 'y: <unbound IrClassSymbolImpl>? declared in <root>.eqDL' type=<unbound IrClassSymbolImpl>? origin=null
                  WHEN type=<unbound IrClassSymbolImpl>? origin=null
                    BRANCH
                      if: CALL 'public final fun EQEQ (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EQEQ
                        arg0: GET_VAR 'val tmp0_safe_receiver: <unbound IrClassSymbolImpl>? [val] declared in <root>.eqDL' type=<unbound IrClassSymbolImpl>? origin=null
                        arg1: CONST Null type=<unbound IrClassSymbolImpl>? value=null
                      then: CONST Null type=<unbound IrClassSymbolImpl>? value=null
                    BRANCH
                      if: CONST Boolean type=<unbound IrClassSymbolImpl> value=true
                      then: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
                        $this: GET_VAR 'val tmp0_safe_receiver: <unbound IrClassSymbolImpl>? [val] declared in <root>.eqDL' type=<unbound IrClassSymbolImpl>? origin=null
            BRANCH
              if: CONST Boolean type=<unbound IrClassSymbolImpl> value=true
              then: CONST Boolean type=<unbound IrClassSymbolImpl> value=false
    FUN name:eqID signature:/eqID|eqID(kotlin.Any?;kotlin.Any?){}[0] visibility:public modality:FINAL <> (x:<unbound IrClassSymbolImpl>?, y:<unbound IrClassSymbolImpl>?) returnType:<unbound IrClassSymbolImpl>
      VALUE_PARAMETER name:x index:0 type:<unbound IrClassSymbolImpl>?
      VALUE_PARAMETER name:y index:1 type:<unbound IrClassSymbolImpl>?
      BLOCK_BODY
        RETURN type=<unbound IrClassSymbolImpl> from='public final fun eqID (x: <unbound IrClassSymbolImpl>?, y: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in <root>'
          WHEN type=<unbound IrClassSymbolImpl> origin=ANDAND
            BRANCH
              if: WHEN type=<unbound IrClassSymbolImpl> origin=ANDAND
                BRANCH
                  if: TYPE_OP type=<unbound IrClassSymbolImpl> origin=INSTANCEOF typeOperand=<unbound IrClassSymbolImpl>?
                    GET_VAR 'x: <unbound IrClassSymbolImpl>? declared in <root>.eqID' type=<unbound IrClassSymbolImpl>? origin=null
                  then: TYPE_OP type=<unbound IrClassSymbolImpl> origin=INSTANCEOF typeOperand=<unbound IrClassSymbolImpl>?
                    GET_VAR 'y: <unbound IrClassSymbolImpl>? declared in <root>.eqID' type=<unbound IrClassSymbolImpl>? origin=null
                BRANCH
                  if: CONST Boolean type=<unbound IrClassSymbolImpl> value=true
                  then: CONST Boolean type=<unbound IrClassSymbolImpl> value=false
              then: CALL 'public final fun ieee754equals (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EQEQ
                arg0: BLOCK type=<unbound IrClassSymbolImpl>? origin=SAFE_CALL
                  VAR IR_TEMPORARY_VARIABLE name:tmp0_safe_receiver type:<unbound IrClassSymbolImpl>? [val]
                    TYPE_OP type=<unbound IrClassSymbolImpl>? origin=IMPLICIT_CAST typeOperand=<unbound IrClassSymbolImpl>?
                      GET_VAR 'x: <unbound IrClassSymbolImpl>? declared in <root>.eqID' type=<unbound IrClassSymbolImpl>? origin=null
                  WHEN type=<unbound IrClassSymbolImpl>? origin=null
                    BRANCH
                      if: CALL 'public final fun EQEQ (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EQEQ
                        arg0: GET_VAR 'val tmp0_safe_receiver: <unbound IrClassSymbolImpl>? [val] declared in <root>.eqID' type=<unbound IrClassSymbolImpl>? origin=null
                        arg1: CONST Null type=<unbound IrClassSymbolImpl>? value=null
                      then: CONST Null type=<unbound IrClassSymbolImpl>? value=null
                    BRANCH
                      if: CONST Boolean type=<unbound IrClassSymbolImpl> value=true
                      then: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
                        $this: GET_VAR 'val tmp0_safe_receiver: <unbound IrClassSymbolImpl>? [val] declared in <root>.eqID' type=<unbound IrClassSymbolImpl>? origin=null
                arg1: TYPE_OP type=<unbound IrClassSymbolImpl>? origin=IMPLICIT_CAST typeOperand=<unbound IrClassSymbolImpl>?
                  GET_VAR 'y: <unbound IrClassSymbolImpl>? declared in <root>.eqID' type=<unbound IrClassSymbolImpl>? origin=null
            BRANCH
              if: CONST Boolean type=<unbound IrClassSymbolImpl> value=true
              then: CONST Boolean type=<unbound IrClassSymbolImpl> value=false
    FUN name:eqLD signature:/eqLD|eqLD(kotlin.Any?;kotlin.Any?){}[0] visibility:public modality:FINAL <> (x:<unbound IrClassSymbolImpl>?, y:<unbound IrClassSymbolImpl>?) returnType:<unbound IrClassSymbolImpl>
      VALUE_PARAMETER name:x index:0 type:<unbound IrClassSymbolImpl>?
      VALUE_PARAMETER name:y index:1 type:<unbound IrClassSymbolImpl>?
      BLOCK_BODY
        RETURN type=<unbound IrClassSymbolImpl> from='public final fun eqLD (x: <unbound IrClassSymbolImpl>?, y: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in <root>'
          WHEN type=<unbound IrClassSymbolImpl> origin=ANDAND
            BRANCH
              if: WHEN type=<unbound IrClassSymbolImpl> origin=ANDAND
                BRANCH
                  if: TYPE_OP type=<unbound IrClassSymbolImpl> origin=INSTANCEOF typeOperand=<unbound IrClassSymbolImpl>?
                    GET_VAR 'x: <unbound IrClassSymbolImpl>? declared in <root>.eqLD' type=<unbound IrClassSymbolImpl>? origin=null
                  then: TYPE_OP type=<unbound IrClassSymbolImpl> origin=INSTANCEOF typeOperand=<unbound IrClassSymbolImpl>?
                    GET_VAR 'y: <unbound IrClassSymbolImpl>? declared in <root>.eqLD' type=<unbound IrClassSymbolImpl>? origin=null
                BRANCH
                  if: CONST Boolean type=<unbound IrClassSymbolImpl> value=true
                  then: CONST Boolean type=<unbound IrClassSymbolImpl> value=false
              then: CALL 'public final fun ieee754equals (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EQEQ
                arg0: BLOCK type=<unbound IrClassSymbolImpl>? origin=SAFE_CALL
                  VAR IR_TEMPORARY_VARIABLE name:tmp0_safe_receiver type:<unbound IrClassSymbolImpl>? [val]
                    TYPE_OP type=<unbound IrClassSymbolImpl>? origin=IMPLICIT_CAST typeOperand=<unbound IrClassSymbolImpl>?
                      GET_VAR 'x: <unbound IrClassSymbolImpl>? declared in <root>.eqLD' type=<unbound IrClassSymbolImpl>? origin=null
                  WHEN type=<unbound IrClassSymbolImpl>? origin=null
                    BRANCH
                      if: CALL 'public final fun EQEQ (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EQEQ
                        arg0: GET_VAR 'val tmp0_safe_receiver: <unbound IrClassSymbolImpl>? [val] declared in <root>.eqLD' type=<unbound IrClassSymbolImpl>? origin=null
                        arg1: CONST Null type=<unbound IrClassSymbolImpl>? value=null
                      then: CONST Null type=<unbound IrClassSymbolImpl>? value=null
                    BRANCH
                      if: CONST Boolean type=<unbound IrClassSymbolImpl> value=true
                      then: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
                        $this: GET_VAR 'val tmp0_safe_receiver: <unbound IrClassSymbolImpl>? [val] declared in <root>.eqLD' type=<unbound IrClassSymbolImpl>? origin=null
                arg1: TYPE_OP type=<unbound IrClassSymbolImpl>? origin=IMPLICIT_CAST typeOperand=<unbound IrClassSymbolImpl>?
                  GET_VAR 'y: <unbound IrClassSymbolImpl>? declared in <root>.eqLD' type=<unbound IrClassSymbolImpl>? origin=null
            BRANCH
              if: CONST Boolean type=<unbound IrClassSymbolImpl> value=true
              then: CONST Boolean type=<unbound IrClassSymbolImpl> value=false
    FUN name:eqFI signature:/eqFI|eqFI(kotlin.Any?;kotlin.Any?){}[0] visibility:public modality:FINAL <> (x:<unbound IrClassSymbolImpl>?, y:<unbound IrClassSymbolImpl>?) returnType:<unbound IrClassSymbolImpl>
      VALUE_PARAMETER name:x index:0 type:<unbound IrClassSymbolImpl>?
      VALUE_PARAMETER name:y index:1 type:<unbound IrClassSymbolImpl>?
      BLOCK_BODY
        RETURN type=<unbound IrClassSymbolImpl> from='public final fun eqFI (x: <unbound IrClassSymbolImpl>?, y: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in <root>'
          WHEN type=<unbound IrClassSymbolImpl> origin=ANDAND
            BRANCH
              if: WHEN type=<unbound IrClassSymbolImpl> origin=ANDAND
                BRANCH
                  if: TYPE_OP type=<unbound IrClassSymbolImpl> origin=INSTANCEOF typeOperand=<unbound IrClassSymbolImpl>?
                    GET_VAR 'x: <unbound IrClassSymbolImpl>? declared in <root>.eqFI' type=<unbound IrClassSymbolImpl>? origin=null
                  then: TYPE_OP type=<unbound IrClassSymbolImpl> origin=INSTANCEOF typeOperand=<unbound IrClassSymbolImpl>?
                    GET_VAR 'y: <unbound IrClassSymbolImpl>? declared in <root>.eqFI' type=<unbound IrClassSymbolImpl>? origin=null
                BRANCH
                  if: CONST Boolean type=<unbound IrClassSymbolImpl> value=true
                  then: CONST Boolean type=<unbound IrClassSymbolImpl> value=false
              then: CALL 'public final fun ieee754equals (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EQEQ
                arg0: TYPE_OP type=<unbound IrClassSymbolImpl>? origin=IMPLICIT_CAST typeOperand=<unbound IrClassSymbolImpl>?
                  GET_VAR 'x: <unbound IrClassSymbolImpl>? declared in <root>.eqFI' type=<unbound IrClassSymbolImpl>? origin=null
                arg1: BLOCK type=<unbound IrClassSymbolImpl>? origin=SAFE_CALL
                  VAR IR_TEMPORARY_VARIABLE name:tmp0_safe_receiver type:<unbound IrClassSymbolImpl>? [val]
                    TYPE_OP type=<unbound IrClassSymbolImpl>? origin=IMPLICIT_CAST typeOperand=<unbound IrClassSymbolImpl>?
                      GET_VAR 'y: <unbound IrClassSymbolImpl>? declared in <root>.eqFI' type=<unbound IrClassSymbolImpl>? origin=null
                  WHEN type=<unbound IrClassSymbolImpl>? origin=null
                    BRANCH
                      if: CALL 'public final fun EQEQ (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EQEQ
                        arg0: GET_VAR 'val tmp0_safe_receiver: <unbound IrClassSymbolImpl>? [val] declared in <root>.eqFI' type=<unbound IrClassSymbolImpl>? origin=null
                        arg1: CONST Null type=<unbound IrClassSymbolImpl>? value=null
                      then: CONST Null type=<unbound IrClassSymbolImpl>? value=null
                    BRANCH
                      if: CONST Boolean type=<unbound IrClassSymbolImpl> value=true
                      then: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
                        $this: GET_VAR 'val tmp0_safe_receiver: <unbound IrClassSymbolImpl>? [val] declared in <root>.eqFI' type=<unbound IrClassSymbolImpl>? origin=null
            BRANCH
              if: CONST Boolean type=<unbound IrClassSymbolImpl> value=true
              then: CONST Boolean type=<unbound IrClassSymbolImpl> value=false
    FUN name:eqFL signature:/eqFL|eqFL(kotlin.Any?;kotlin.Any?){}[0] visibility:public modality:FINAL <> (x:<unbound IrClassSymbolImpl>?, y:<unbound IrClassSymbolImpl>?) returnType:<unbound IrClassSymbolImpl>
      VALUE_PARAMETER name:x index:0 type:<unbound IrClassSymbolImpl>?
      VALUE_PARAMETER name:y index:1 type:<unbound IrClassSymbolImpl>?
      BLOCK_BODY
        RETURN type=<unbound IrClassSymbolImpl> from='public final fun eqFL (x: <unbound IrClassSymbolImpl>?, y: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in <root>'
          WHEN type=<unbound IrClassSymbolImpl> origin=ANDAND
            BRANCH
              if: WHEN type=<unbound IrClassSymbolImpl> origin=ANDAND
                BRANCH
                  if: TYPE_OP type=<unbound IrClassSymbolImpl> origin=INSTANCEOF typeOperand=<unbound IrClassSymbolImpl>?
                    GET_VAR 'x: <unbound IrClassSymbolImpl>? declared in <root>.eqFL' type=<unbound IrClassSymbolImpl>? origin=null
                  then: TYPE_OP type=<unbound IrClassSymbolImpl> origin=INSTANCEOF typeOperand=<unbound IrClassSymbolImpl>?
                    GET_VAR 'y: <unbound IrClassSymbolImpl>? declared in <root>.eqFL' type=<unbound IrClassSymbolImpl>? origin=null
                BRANCH
                  if: CONST Boolean type=<unbound IrClassSymbolImpl> value=true
                  then: CONST Boolean type=<unbound IrClassSymbolImpl> value=false
              then: CALL 'public final fun ieee754equals (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EQEQ
                arg0: TYPE_OP type=<unbound IrClassSymbolImpl>? origin=IMPLICIT_CAST typeOperand=<unbound IrClassSymbolImpl>?
                  GET_VAR 'x: <unbound IrClassSymbolImpl>? declared in <root>.eqFL' type=<unbound IrClassSymbolImpl>? origin=null
                arg1: BLOCK type=<unbound IrClassSymbolImpl>? origin=SAFE_CALL
                  VAR IR_TEMPORARY_VARIABLE name:tmp0_safe_receiver type:<unbound IrClassSymbolImpl>? [val]
                    TYPE_OP type=<unbound IrClassSymbolImpl>? origin=IMPLICIT_CAST typeOperand=<unbound IrClassSymbolImpl>?
                      GET_VAR 'y: <unbound IrClassSymbolImpl>? declared in <root>.eqFL' type=<unbound IrClassSymbolImpl>? origin=null
                  WHEN type=<unbound IrClassSymbolImpl>? origin=null
                    BRANCH
                      if: CALL 'public final fun EQEQ (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EQEQ
                        arg0: GET_VAR 'val tmp0_safe_receiver: <unbound IrClassSymbolImpl>? [val] declared in <root>.eqFL' type=<unbound IrClassSymbolImpl>? origin=null
                        arg1: CONST Null type=<unbound IrClassSymbolImpl>? value=null
                      then: CONST Null type=<unbound IrClassSymbolImpl>? value=null
                    BRANCH
                      if: CONST Boolean type=<unbound IrClassSymbolImpl> value=true
                      then: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
                        $this: GET_VAR 'val tmp0_safe_receiver: <unbound IrClassSymbolImpl>? [val] declared in <root>.eqFL' type=<unbound IrClassSymbolImpl>? origin=null
            BRANCH
              if: CONST Boolean type=<unbound IrClassSymbolImpl> value=true
              then: CONST Boolean type=<unbound IrClassSymbolImpl> value=false
    FUN name:eqIF signature:/eqIF|eqIF(kotlin.Any?;kotlin.Any?){}[0] visibility:public modality:FINAL <> (x:<unbound IrClassSymbolImpl>?, y:<unbound IrClassSymbolImpl>?) returnType:<unbound IrClassSymbolImpl>
      VALUE_PARAMETER name:x index:0 type:<unbound IrClassSymbolImpl>?
      VALUE_PARAMETER name:y index:1 type:<unbound IrClassSymbolImpl>?
      BLOCK_BODY
        RETURN type=<unbound IrClassSymbolImpl> from='public final fun eqIF (x: <unbound IrClassSymbolImpl>?, y: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in <root>'
          WHEN type=<unbound IrClassSymbolImpl> origin=ANDAND
            BRANCH
              if: WHEN type=<unbound IrClassSymbolImpl> origin=ANDAND
                BRANCH
                  if: TYPE_OP type=<unbound IrClassSymbolImpl> origin=INSTANCEOF typeOperand=<unbound IrClassSymbolImpl>?
                    GET_VAR 'x: <unbound IrClassSymbolImpl>? declared in <root>.eqIF' type=<unbound IrClassSymbolImpl>? origin=null
                  then: TYPE_OP type=<unbound IrClassSymbolImpl> origin=INSTANCEOF typeOperand=<unbound IrClassSymbolImpl>?
                    GET_VAR 'y: <unbound IrClassSymbolImpl>? declared in <root>.eqIF' type=<unbound IrClassSymbolImpl>? origin=null
                BRANCH
                  if: CONST Boolean type=<unbound IrClassSymbolImpl> value=true
                  then: CONST Boolean type=<unbound IrClassSymbolImpl> value=false
              then: CALL 'public final fun ieee754equals (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EQEQ
                arg0: BLOCK type=<unbound IrClassSymbolImpl>? origin=SAFE_CALL
                  VAR IR_TEMPORARY_VARIABLE name:tmp0_safe_receiver type:<unbound IrClassSymbolImpl>? [val]
                    TYPE_OP type=<unbound IrClassSymbolImpl>? origin=IMPLICIT_CAST typeOperand=<unbound IrClassSymbolImpl>?
                      GET_VAR 'x: <unbound IrClassSymbolImpl>? declared in <root>.eqIF' type=<unbound IrClassSymbolImpl>? origin=null
                  WHEN type=<unbound IrClassSymbolImpl>? origin=null
                    BRANCH
                      if: CALL 'public final fun EQEQ (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EQEQ
                        arg0: GET_VAR 'val tmp0_safe_receiver: <unbound IrClassSymbolImpl>? [val] declared in <root>.eqIF' type=<unbound IrClassSymbolImpl>? origin=null
                        arg1: CONST Null type=<unbound IrClassSymbolImpl>? value=null
                      then: CONST Null type=<unbound IrClassSymbolImpl>? value=null
                    BRANCH
                      if: CONST Boolean type=<unbound IrClassSymbolImpl> value=true
                      then: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
                        $this: GET_VAR 'val tmp0_safe_receiver: <unbound IrClassSymbolImpl>? [val] declared in <root>.eqIF' type=<unbound IrClassSymbolImpl>? origin=null
                arg1: TYPE_OP type=<unbound IrClassSymbolImpl>? origin=IMPLICIT_CAST typeOperand=<unbound IrClassSymbolImpl>?
                  GET_VAR 'y: <unbound IrClassSymbolImpl>? declared in <root>.eqIF' type=<unbound IrClassSymbolImpl>? origin=null
            BRANCH
              if: CONST Boolean type=<unbound IrClassSymbolImpl> value=true
              then: CONST Boolean type=<unbound IrClassSymbolImpl> value=false
    FUN name:eqLF signature:/eqLF|eqLF(kotlin.Any?;kotlin.Any?){}[0] visibility:public modality:FINAL <> (x:<unbound IrClassSymbolImpl>?, y:<unbound IrClassSymbolImpl>?) returnType:<unbound IrClassSymbolImpl>
      VALUE_PARAMETER name:x index:0 type:<unbound IrClassSymbolImpl>?
      VALUE_PARAMETER name:y index:1 type:<unbound IrClassSymbolImpl>?
      BLOCK_BODY
        RETURN type=<unbound IrClassSymbolImpl> from='public final fun eqLF (x: <unbound IrClassSymbolImpl>?, y: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in <root>'
          WHEN type=<unbound IrClassSymbolImpl> origin=ANDAND
            BRANCH
              if: WHEN type=<unbound IrClassSymbolImpl> origin=ANDAND
                BRANCH
                  if: TYPE_OP type=<unbound IrClassSymbolImpl> origin=INSTANCEOF typeOperand=<unbound IrClassSymbolImpl>?
                    GET_VAR 'x: <unbound IrClassSymbolImpl>? declared in <root>.eqLF' type=<unbound IrClassSymbolImpl>? origin=null
                  then: TYPE_OP type=<unbound IrClassSymbolImpl> origin=INSTANCEOF typeOperand=<unbound IrClassSymbolImpl>?
                    GET_VAR 'y: <unbound IrClassSymbolImpl>? declared in <root>.eqLF' type=<unbound IrClassSymbolImpl>? origin=null
                BRANCH
                  if: CONST Boolean type=<unbound IrClassSymbolImpl> value=true
                  then: CONST Boolean type=<unbound IrClassSymbolImpl> value=false
              then: CALL 'public final fun ieee754equals (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EQEQ
                arg0: BLOCK type=<unbound IrClassSymbolImpl>? origin=SAFE_CALL
                  VAR IR_TEMPORARY_VARIABLE name:tmp0_safe_receiver type:<unbound IrClassSymbolImpl>? [val]
                    TYPE_OP type=<unbound IrClassSymbolImpl>? origin=IMPLICIT_CAST typeOperand=<unbound IrClassSymbolImpl>?
                      GET_VAR 'x: <unbound IrClassSymbolImpl>? declared in <root>.eqLF' type=<unbound IrClassSymbolImpl>? origin=null
                  WHEN type=<unbound IrClassSymbolImpl>? origin=null
                    BRANCH
                      if: CALL 'public final fun EQEQ (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EQEQ
                        arg0: GET_VAR 'val tmp0_safe_receiver: <unbound IrClassSymbolImpl>? [val] declared in <root>.eqLF' type=<unbound IrClassSymbolImpl>? origin=null
                        arg1: CONST Null type=<unbound IrClassSymbolImpl>? value=null
                      then: CONST Null type=<unbound IrClassSymbolImpl>? value=null
                    BRANCH
                      if: CONST Boolean type=<unbound IrClassSymbolImpl> value=true
                      then: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
                        $this: GET_VAR 'val tmp0_safe_receiver: <unbound IrClassSymbolImpl>? [val] declared in <root>.eqLF' type=<unbound IrClassSymbolImpl>? origin=null
                arg1: TYPE_OP type=<unbound IrClassSymbolImpl>? origin=IMPLICIT_CAST typeOperand=<unbound IrClassSymbolImpl>?
                  GET_VAR 'y: <unbound IrClassSymbolImpl>? declared in <root>.eqLF' type=<unbound IrClassSymbolImpl>? origin=null
            BRANCH
              if: CONST Boolean type=<unbound IrClassSymbolImpl> value=true
              then: CONST Boolean type=<unbound IrClassSymbolImpl> value=false
    FUN name:testNullNull signature:/testNullNull|testNullNull(){}[0] visibility:public modality:FINAL <> () returnType:<unbound IrClassSymbolImpl>
      BLOCK_BODY
        WHEN type=<unbound IrClassSymbolImpl> origin=IF
          BRANCH
            if: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
              $this: CALL 'public final fun eqDI (x: <unbound IrClassSymbolImpl>?, y: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
                x: CONST Null type=<unbound IrClassSymbolImpl>? value=null
                y: CONST Null type=<unbound IrClassSymbolImpl>? value=null
            then: THROW type=<unbound IrClassSymbolImpl>
              CONSTRUCTOR_CALL 'UNBOUND IrConstructorSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
        WHEN type=<unbound IrClassSymbolImpl> origin=IF
          BRANCH
            if: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
              $this: CALL 'public final fun eqDL (x: <unbound IrClassSymbolImpl>?, y: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
                x: CONST Null type=<unbound IrClassSymbolImpl>? value=null
                y: CONST Null type=<unbound IrClassSymbolImpl>? value=null
            then: THROW type=<unbound IrClassSymbolImpl>
              CONSTRUCTOR_CALL 'UNBOUND IrConstructorSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
        WHEN type=<unbound IrClassSymbolImpl> origin=IF
          BRANCH
            if: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
              $this: CALL 'public final fun eqID (x: <unbound IrClassSymbolImpl>?, y: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
                x: CONST Null type=<unbound IrClassSymbolImpl>? value=null
                y: CONST Null type=<unbound IrClassSymbolImpl>? value=null
            then: THROW type=<unbound IrClassSymbolImpl>
              CONSTRUCTOR_CALL 'UNBOUND IrConstructorSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
        WHEN type=<unbound IrClassSymbolImpl> origin=IF
          BRANCH
            if: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
              $this: CALL 'public final fun eqLD (x: <unbound IrClassSymbolImpl>?, y: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
                x: CONST Null type=<unbound IrClassSymbolImpl>? value=null
                y: CONST Null type=<unbound IrClassSymbolImpl>? value=null
            then: THROW type=<unbound IrClassSymbolImpl>
              CONSTRUCTOR_CALL 'UNBOUND IrConstructorSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
        WHEN type=<unbound IrClassSymbolImpl> origin=IF
          BRANCH
            if: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
              $this: CALL 'public final fun eqFI (x: <unbound IrClassSymbolImpl>?, y: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
                x: CONST Null type=<unbound IrClassSymbolImpl>? value=null
                y: CONST Null type=<unbound IrClassSymbolImpl>? value=null
            then: THROW type=<unbound IrClassSymbolImpl>
              CONSTRUCTOR_CALL 'UNBOUND IrConstructorSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
        WHEN type=<unbound IrClassSymbolImpl> origin=IF
          BRANCH
            if: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
              $this: CALL 'public final fun eqFL (x: <unbound IrClassSymbolImpl>?, y: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
                x: CONST Null type=<unbound IrClassSymbolImpl>? value=null
                y: CONST Null type=<unbound IrClassSymbolImpl>? value=null
            then: THROW type=<unbound IrClassSymbolImpl>
              CONSTRUCTOR_CALL 'UNBOUND IrConstructorSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
        WHEN type=<unbound IrClassSymbolImpl> origin=IF
          BRANCH
            if: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
              $this: CALL 'public final fun eqIF (x: <unbound IrClassSymbolImpl>?, y: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
                x: CONST Null type=<unbound IrClassSymbolImpl>? value=null
                y: CONST Null type=<unbound IrClassSymbolImpl>? value=null
            then: THROW type=<unbound IrClassSymbolImpl>
              CONSTRUCTOR_CALL 'UNBOUND IrConstructorSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
        WHEN type=<unbound IrClassSymbolImpl> origin=IF
          BRANCH
            if: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
              $this: CALL 'public final fun eqLF (x: <unbound IrClassSymbolImpl>?, y: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
                x: CONST Null type=<unbound IrClassSymbolImpl>? value=null
                y: CONST Null type=<unbound IrClassSymbolImpl>? value=null
            then: THROW type=<unbound IrClassSymbolImpl>
              CONSTRUCTOR_CALL 'UNBOUND IrConstructorSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
    FUN name:testNull0 signature:/testNull0|testNull0(){}[0] visibility:public modality:FINAL <> () returnType:<unbound IrClassSymbolImpl>
      BLOCK_BODY
        WHEN type=<unbound IrClassSymbolImpl> origin=IF
          BRANCH
            if: CALL 'public final fun eqDI (x: <unbound IrClassSymbolImpl>?, y: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
              x: CONST Null type=<unbound IrClassSymbolImpl>? value=null
              y: CONST Int type=<unbound IrClassSymbolImpl> value=0
            then: THROW type=<unbound IrClassSymbolImpl>
              CONSTRUCTOR_CALL 'UNBOUND IrConstructorSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
        WHEN type=<unbound IrClassSymbolImpl> origin=IF
          BRANCH
            if: CALL 'public final fun eqDL (x: <unbound IrClassSymbolImpl>?, y: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
              x: CONST Null type=<unbound IrClassSymbolImpl>? value=null
              y: CONST Long type=<unbound IrClassSymbolImpl> value=0
            then: THROW type=<unbound IrClassSymbolImpl>
              CONSTRUCTOR_CALL 'UNBOUND IrConstructorSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
        WHEN type=<unbound IrClassSymbolImpl> origin=IF
          BRANCH
            if: CALL 'public final fun eqID (x: <unbound IrClassSymbolImpl>?, y: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
              x: CONST Null type=<unbound IrClassSymbolImpl>? value=null
              y: CONST Double type=<unbound IrClassSymbolImpl> value=0.0
            then: THROW type=<unbound IrClassSymbolImpl>
              CONSTRUCTOR_CALL 'UNBOUND IrConstructorSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
        WHEN type=<unbound IrClassSymbolImpl> origin=IF
          BRANCH
            if: CALL 'public final fun eqLD (x: <unbound IrClassSymbolImpl>?, y: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
              x: CONST Null type=<unbound IrClassSymbolImpl>? value=null
              y: CONST Double type=<unbound IrClassSymbolImpl> value=0.0
            then: THROW type=<unbound IrClassSymbolImpl>
              CONSTRUCTOR_CALL 'UNBOUND IrConstructorSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
        WHEN type=<unbound IrClassSymbolImpl> origin=IF
          BRANCH
            if: CALL 'public final fun eqFI (x: <unbound IrClassSymbolImpl>?, y: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
              x: CONST Null type=<unbound IrClassSymbolImpl>? value=null
              y: CONST Int type=<unbound IrClassSymbolImpl> value=0
            then: THROW type=<unbound IrClassSymbolImpl>
              CONSTRUCTOR_CALL 'UNBOUND IrConstructorSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
        WHEN type=<unbound IrClassSymbolImpl> origin=IF
          BRANCH
            if: CALL 'public final fun eqFL (x: <unbound IrClassSymbolImpl>?, y: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
              x: CONST Null type=<unbound IrClassSymbolImpl>? value=null
              y: CONST Long type=<unbound IrClassSymbolImpl> value=0
            then: THROW type=<unbound IrClassSymbolImpl>
              CONSTRUCTOR_CALL 'UNBOUND IrConstructorSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
        WHEN type=<unbound IrClassSymbolImpl> origin=IF
          BRANCH
            if: CALL 'public final fun eqIF (x: <unbound IrClassSymbolImpl>?, y: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
              x: CONST Null type=<unbound IrClassSymbolImpl>? value=null
              y: CONST Float type=<unbound IrClassSymbolImpl> value=0.0
            then: THROW type=<unbound IrClassSymbolImpl>
              CONSTRUCTOR_CALL 'UNBOUND IrConstructorSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
        WHEN type=<unbound IrClassSymbolImpl> origin=IF
          BRANCH
            if: CALL 'public final fun eqLF (x: <unbound IrClassSymbolImpl>?, y: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
              x: CONST Null type=<unbound IrClassSymbolImpl>? value=null
              y: CONST Float type=<unbound IrClassSymbolImpl> value=0.0
            then: THROW type=<unbound IrClassSymbolImpl>
              CONSTRUCTOR_CALL 'UNBOUND IrConstructorSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
    FUN name:test0Null signature:/test0Null|test0Null(){}[0] visibility:public modality:FINAL <> () returnType:<unbound IrClassSymbolImpl>
      BLOCK_BODY
        WHEN type=<unbound IrClassSymbolImpl> origin=IF
          BRANCH
            if: CALL 'public final fun eqDI (x: <unbound IrClassSymbolImpl>?, y: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
              x: CONST Double type=<unbound IrClassSymbolImpl> value=0.0
              y: CONST Null type=<unbound IrClassSymbolImpl>? value=null
            then: THROW type=<unbound IrClassSymbolImpl>
              CONSTRUCTOR_CALL 'UNBOUND IrConstructorSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
        WHEN type=<unbound IrClassSymbolImpl> origin=IF
          BRANCH
            if: CALL 'public final fun eqDL (x: <unbound IrClassSymbolImpl>?, y: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
              x: CONST Double type=<unbound IrClassSymbolImpl> value=0.0
              y: CONST Null type=<unbound IrClassSymbolImpl>? value=null
            then: THROW type=<unbound IrClassSymbolImpl>
              CONSTRUCTOR_CALL 'UNBOUND IrConstructorSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
        WHEN type=<unbound IrClassSymbolImpl> origin=IF
          BRANCH
            if: CALL 'public final fun eqID (x: <unbound IrClassSymbolImpl>?, y: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
              x: CONST Int type=<unbound IrClassSymbolImpl> value=0
              y: CONST Null type=<unbound IrClassSymbolImpl>? value=null
            then: THROW type=<unbound IrClassSymbolImpl>
              CONSTRUCTOR_CALL 'UNBOUND IrConstructorSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
        WHEN type=<unbound IrClassSymbolImpl> origin=IF
          BRANCH
            if: CALL 'public final fun eqLD (x: <unbound IrClassSymbolImpl>?, y: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
              x: CONST Long type=<unbound IrClassSymbolImpl> value=0
              y: CONST Null type=<unbound IrClassSymbolImpl>? value=null
            then: THROW type=<unbound IrClassSymbolImpl>
              CONSTRUCTOR_CALL 'UNBOUND IrConstructorSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
        WHEN type=<unbound IrClassSymbolImpl> origin=IF
          BRANCH
            if: CALL 'public final fun eqFI (x: <unbound IrClassSymbolImpl>?, y: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
              x: CONST Float type=<unbound IrClassSymbolImpl> value=0.0
              y: CONST Null type=<unbound IrClassSymbolImpl>? value=null
            then: THROW type=<unbound IrClassSymbolImpl>
              CONSTRUCTOR_CALL 'UNBOUND IrConstructorSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
        WHEN type=<unbound IrClassSymbolImpl> origin=IF
          BRANCH
            if: CALL 'public final fun eqFL (x: <unbound IrClassSymbolImpl>?, y: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
              x: CONST Float type=<unbound IrClassSymbolImpl> value=0.0
              y: CONST Null type=<unbound IrClassSymbolImpl>? value=null
            then: THROW type=<unbound IrClassSymbolImpl>
              CONSTRUCTOR_CALL 'UNBOUND IrConstructorSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
        WHEN type=<unbound IrClassSymbolImpl> origin=IF
          BRANCH
            if: CALL 'public final fun eqIF (x: <unbound IrClassSymbolImpl>?, y: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
              x: CONST Int type=<unbound IrClassSymbolImpl> value=0
              y: CONST Null type=<unbound IrClassSymbolImpl>? value=null
            then: THROW type=<unbound IrClassSymbolImpl>
              CONSTRUCTOR_CALL 'UNBOUND IrConstructorSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
        WHEN type=<unbound IrClassSymbolImpl> origin=IF
          BRANCH
            if: CALL 'public final fun eqLF (x: <unbound IrClassSymbolImpl>?, y: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
              x: CONST Long type=<unbound IrClassSymbolImpl> value=0
              y: CONST Null type=<unbound IrClassSymbolImpl>? value=null
            then: THROW type=<unbound IrClassSymbolImpl>
              CONSTRUCTOR_CALL 'UNBOUND IrConstructorSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
    FUN name:testPlusMinus0 signature:/testPlusMinus0|testPlusMinus0(){}[0] visibility:public modality:FINAL <> () returnType:<unbound IrClassSymbolImpl>
      BLOCK_BODY
        WHEN type=<unbound IrClassSymbolImpl> origin=IF
          BRANCH
            if: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
              $this: CALL 'public final fun eqDI (x: <unbound IrClassSymbolImpl>?, y: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
                x: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
                  $this: CONST Double type=<unbound IrClassSymbolImpl> value=0.0
                y: CONST Int type=<unbound IrClassSymbolImpl> value=0
            then: THROW type=<unbound IrClassSymbolImpl>
              CONSTRUCTOR_CALL 'UNBOUND IrConstructorSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
        WHEN type=<unbound IrClassSymbolImpl> origin=IF
          BRANCH
            if: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
              $this: CALL 'public final fun eqDL (x: <unbound IrClassSymbolImpl>?, y: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
                x: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
                  $this: CONST Double type=<unbound IrClassSymbolImpl> value=0.0
                y: CONST Long type=<unbound IrClassSymbolImpl> value=0
            then: THROW type=<unbound IrClassSymbolImpl>
              CONSTRUCTOR_CALL 'UNBOUND IrConstructorSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
        WHEN type=<unbound IrClassSymbolImpl> origin=IF
          BRANCH
            if: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
              $this: CALL 'public final fun eqID (x: <unbound IrClassSymbolImpl>?, y: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
                x: CONST Int type=<unbound IrClassSymbolImpl> value=0
                y: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
                  $this: CONST Double type=<unbound IrClassSymbolImpl> value=0.0
            then: THROW type=<unbound IrClassSymbolImpl>
              CONSTRUCTOR_CALL 'UNBOUND IrConstructorSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
        WHEN type=<unbound IrClassSymbolImpl> origin=IF
          BRANCH
            if: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
              $this: CALL 'public final fun eqLD (x: <unbound IrClassSymbolImpl>?, y: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
                x: CONST Long type=<unbound IrClassSymbolImpl> value=0
                y: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
                  $this: CONST Double type=<unbound IrClassSymbolImpl> value=0.0
            then: THROW type=<unbound IrClassSymbolImpl>
              CONSTRUCTOR_CALL 'UNBOUND IrConstructorSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
        WHEN type=<unbound IrClassSymbolImpl> origin=IF
          BRANCH
            if: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
              $this: CALL 'public final fun eqFI (x: <unbound IrClassSymbolImpl>?, y: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
                x: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
                  $this: CONST Float type=<unbound IrClassSymbolImpl> value=0.0
                y: CONST Int type=<unbound IrClassSymbolImpl> value=0
            then: THROW type=<unbound IrClassSymbolImpl>
              CONSTRUCTOR_CALL 'UNBOUND IrConstructorSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
        WHEN type=<unbound IrClassSymbolImpl> origin=IF
          BRANCH
            if: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
              $this: CALL 'public final fun eqFL (x: <unbound IrClassSymbolImpl>?, y: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
                x: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
                  $this: CONST Float type=<unbound IrClassSymbolImpl> value=0.0
                y: CONST Long type=<unbound IrClassSymbolImpl> value=0
            then: THROW type=<unbound IrClassSymbolImpl>
              CONSTRUCTOR_CALL 'UNBOUND IrConstructorSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
        WHEN type=<unbound IrClassSymbolImpl> origin=IF
          BRANCH
            if: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
              $this: CALL 'public final fun eqIF (x: <unbound IrClassSymbolImpl>?, y: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
                x: CONST Int type=<unbound IrClassSymbolImpl> value=0
                y: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
                  $this: CONST Float type=<unbound IrClassSymbolImpl> value=0.0
            then: THROW type=<unbound IrClassSymbolImpl>
              CONSTRUCTOR_CALL 'UNBOUND IrConstructorSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
        WHEN type=<unbound IrClassSymbolImpl> origin=IF
          BRANCH
            if: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
              $this: CALL 'public final fun eqLF (x: <unbound IrClassSymbolImpl>?, y: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
                x: CONST Long type=<unbound IrClassSymbolImpl> value=0
                y: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
                  $this: CONST Float type=<unbound IrClassSymbolImpl> value=0.0
            then: THROW type=<unbound IrClassSymbolImpl>
              CONSTRUCTOR_CALL 'UNBOUND IrConstructorSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
    FUN name:test01 signature:/test01|test01(){}[0] visibility:public modality:FINAL <> () returnType:<unbound IrClassSymbolImpl>
      BLOCK_BODY
        WHEN type=<unbound IrClassSymbolImpl> origin=IF
          BRANCH
            if: CALL 'public final fun eqDI (x: <unbound IrClassSymbolImpl>?, y: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
              x: CONST Double type=<unbound IrClassSymbolImpl> value=0.0
              y: CONST Int type=<unbound IrClassSymbolImpl> value=1
            then: THROW type=<unbound IrClassSymbolImpl>
              CONSTRUCTOR_CALL 'UNBOUND IrConstructorSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
        WHEN type=<unbound IrClassSymbolImpl> origin=IF
          BRANCH
            if: CALL 'public final fun eqDL (x: <unbound IrClassSymbolImpl>?, y: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
              x: CONST Double type=<unbound IrClassSymbolImpl> value=0.0
              y: CONST Long type=<unbound IrClassSymbolImpl> value=1
            then: THROW type=<unbound IrClassSymbolImpl>
              CONSTRUCTOR_CALL 'UNBOUND IrConstructorSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
        WHEN type=<unbound IrClassSymbolImpl> origin=IF
          BRANCH
            if: CALL 'public final fun eqID (x: <unbound IrClassSymbolImpl>?, y: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
              x: CONST Int type=<unbound IrClassSymbolImpl> value=0
              y: CONST Double type=<unbound IrClassSymbolImpl> value=1.0
            then: THROW type=<unbound IrClassSymbolImpl>
              CONSTRUCTOR_CALL 'UNBOUND IrConstructorSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
        WHEN type=<unbound IrClassSymbolImpl> origin=IF
          BRANCH
            if: CALL 'public final fun eqLD (x: <unbound IrClassSymbolImpl>?, y: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
              x: CONST Long type=<unbound IrClassSymbolImpl> value=0
              y: CONST Double type=<unbound IrClassSymbolImpl> value=1.0
            then: THROW type=<unbound IrClassSymbolImpl>
              CONSTRUCTOR_CALL 'UNBOUND IrConstructorSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
        WHEN type=<unbound IrClassSymbolImpl> origin=IF
          BRANCH
            if: CALL 'public final fun eqFI (x: <unbound IrClassSymbolImpl>?, y: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
              x: CONST Float type=<unbound IrClassSymbolImpl> value=0.0
              y: CONST Int type=<unbound IrClassSymbolImpl> value=1
            then: THROW type=<unbound IrClassSymbolImpl>
              CONSTRUCTOR_CALL 'UNBOUND IrConstructorSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
        WHEN type=<unbound IrClassSymbolImpl> origin=IF
          BRANCH
            if: CALL 'public final fun eqFL (x: <unbound IrClassSymbolImpl>?, y: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
              x: CONST Float type=<unbound IrClassSymbolImpl> value=0.0
              y: CONST Long type=<unbound IrClassSymbolImpl> value=1
            then: THROW type=<unbound IrClassSymbolImpl>
              CONSTRUCTOR_CALL 'UNBOUND IrConstructorSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
        WHEN type=<unbound IrClassSymbolImpl> origin=IF
          BRANCH
            if: CALL 'public final fun eqIF (x: <unbound IrClassSymbolImpl>?, y: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
              x: CONST Int type=<unbound IrClassSymbolImpl> value=0
              y: CONST Float type=<unbound IrClassSymbolImpl> value=1.0
            then: THROW type=<unbound IrClassSymbolImpl>
              CONSTRUCTOR_CALL 'UNBOUND IrConstructorSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
        WHEN type=<unbound IrClassSymbolImpl> origin=IF
          BRANCH
            if: CALL 'public final fun eqLF (x: <unbound IrClassSymbolImpl>?, y: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
              x: CONST Long type=<unbound IrClassSymbolImpl> value=0
              y: CONST Float type=<unbound IrClassSymbolImpl> value=1.0
            then: THROW type=<unbound IrClassSymbolImpl>
              CONSTRUCTOR_CALL 'UNBOUND IrConstructorSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
    FUN name:box signature:/box|box(){}[0] visibility:public modality:FINAL <> () returnType:<unbound IrClassSymbolImpl>
      BLOCK_BODY
        CALL 'public final fun testNullNull (): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
        CALL 'public final fun testNull0 (): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
        CALL 'public final fun test0Null (): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
        CALL 'public final fun testPlusMinus0 (): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
        CALL 'public final fun test01 (): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
        RETURN type=<unbound IrClassSymbolImpl> from='public final fun box (): <unbound IrClassSymbolImpl> declared in <root>'
          CONST String type=<unbound IrClassSymbolImpl> value="OK"
