MODULE_FRAGMENT name:<main>
  FILE fqName:<root> fileName:/dataClass.kt
    CLASS CLASS name:Test signature:/Test|null[0] modality:FINAL visibility:public [data] superTypes:[<unbound IrClassSymbolImpl>]
      $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:<root>.Test
      CONSTRUCTOR signature:/Test.<init>|<init>(kotlin.Double;kotlin.Double?){}[0] visibility:public <> (z1:<unbound IrClassSymbolImpl>, z2:<unbound IrClassSymbolImpl>?) returnType:<root>.Test [primary]
        VALUE_PARAMETER name:z1 index:0 type:<unbound IrClassSymbolImpl>
        VALUE_PARAMETER name:z2 index:1 type:<unbound IrClassSymbolImpl>?
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL 'UNBOUND IrConstructorSymbolImpl'
          INSTANCE_INITIALIZER_CALL classDescriptor='CLASS CLASS name:Test signature:/Test|null[0] modality:FINAL visibility:public [data] superTypes:[<unbound IrClassSymbolImpl>]'
      PROPERTY name:z1 signature:/Test.z1|{}z1[0] visibility:public modality:FINAL [val]
        FIELD PROPERTY_BACKING_FIELD name:z1 signature:[ /Test.z1|{}z1[0] <- Local[<BF>|FIELD PROPERTY_BACKING_FIELD name:z1 type:kotlin.Double visibility:private [final]] ] type:<unbound IrClassSymbolImpl> visibility:private [final]
          EXPRESSION_BODY
            GET_VAR 'z1: <unbound IrClassSymbolImpl> declared in <root>.Test.<init>' type=<unbound IrClassSymbolImpl> origin=INITIALIZE_PROPERTY_FROM_PARAMETER
        FUN DEFAULT_PROPERTY_ACCESSOR name:<get-z1> signature:/Test.z1.<get-z1>|<get-z1>(){}[0] visibility:public modality:FINAL <> ($this:<root>.Test) returnType:<unbound IrClassSymbolImpl>
          correspondingProperty: PROPERTY name:z1 signature:/Test.z1|{}z1[0] visibility:public modality:FINAL [val]
          $this: VALUE_PARAMETER name:<this> type:<root>.Test
          BLOCK_BODY
            RETURN type=<unbound IrClassSymbolImpl> from='public final fun <get-z1> (): <unbound IrClassSymbolImpl> declared in <root>.Test'
              GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:z1 signature:[ /Test.z1|{}z1[0] <- Local[<BF>|FIELD PROPERTY_BACKING_FIELD name:z1 type:kotlin.Double visibility:private [final]] ] type:<unbound IrClassSymbolImpl> visibility:private [final]' type=<unbound IrClassSymbolImpl> origin=null
                receiver: GET_VAR '<this>: <root>.Test declared in <root>.Test.<get-z1>' type=<root>.Test origin=null
      PROPERTY name:z2 signature:/Test.z2|{}z2[0] visibility:public modality:FINAL [val]
        FIELD PROPERTY_BACKING_FIELD name:z2 signature:[ /Test.z2|{}z2[0] <- Local[<BF>|FIELD PROPERTY_BACKING_FIELD name:z1 type:kotlin.Double visibility:private [final]] ] type:<unbound IrClassSymbolImpl>? visibility:private [final]
          EXPRESSION_BODY
            GET_VAR 'z2: <unbound IrClassSymbolImpl>? declared in <root>.Test.<init>' type=<unbound IrClassSymbolImpl>? origin=INITIALIZE_PROPERTY_FROM_PARAMETER
        FUN DEFAULT_PROPERTY_ACCESSOR name:<get-z2> signature:/Test.z2.<get-z2>|<get-z2>(){}[0] visibility:public modality:FINAL <> ($this:<root>.Test) returnType:<unbound IrClassSymbolImpl>?
          correspondingProperty: PROPERTY name:z2 signature:/Test.z2|{}z2[0] visibility:public modality:FINAL [val]
          $this: VALUE_PARAMETER name:<this> type:<root>.Test
          BLOCK_BODY
            RETURN type=<unbound IrClassSymbolImpl> from='public final fun <get-z2> (): <unbound IrClassSymbolImpl>? declared in <root>.Test'
              GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:z2 signature:[ /Test.z2|{}z2[0] <- Local[<BF>|FIELD PROPERTY_BACKING_FIELD name:z1 type:kotlin.Double visibility:private [final]] ] type:<unbound IrClassSymbolImpl>? visibility:private [final]' type=<unbound IrClassSymbolImpl>? origin=null
                receiver: GET_VAR '<this>: <root>.Test declared in <root>.Test.<get-z2>' type=<root>.Test origin=null
      FUN GENERATED_DATA_CLASS_MEMBER name:component1 signature:/Test.component1|component1(){}[0] visibility:public modality:FINAL <> ($this:<root>.Test) returnType:<unbound IrClassSymbolImpl> [operator]
        $this: VALUE_PARAMETER name:<this> type:<root>.Test
        BLOCK_BODY
          RETURN type=<unbound IrClassSymbolImpl> from='public final fun component1 (): <unbound IrClassSymbolImpl> [operator] declared in <root>.Test'
            GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:z1 signature:[ /Test.z1|{}z1[0] <- Local[<BF>|FIELD PROPERTY_BACKING_FIELD name:z1 type:kotlin.Double visibility:private [final]] ] type:<unbound IrClassSymbolImpl> visibility:private [final]' type=<unbound IrClassSymbolImpl> origin=null
              receiver: GET_VAR '<this>: <root>.Test declared in <root>.Test.component1' type=<root>.Test origin=null
      FUN GENERATED_DATA_CLASS_MEMBER name:component2 signature:/Test.component2|component2(){}[0] visibility:public modality:FINAL <> ($this:<root>.Test) returnType:<unbound IrClassSymbolImpl>? [operator]
        $this: VALUE_PARAMETER name:<this> type:<root>.Test
        BLOCK_BODY
          RETURN type=<unbound IrClassSymbolImpl> from='public final fun component2 (): <unbound IrClassSymbolImpl>? [operator] declared in <root>.Test'
            GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:z2 signature:[ /Test.z2|{}z2[0] <- Local[<BF>|FIELD PROPERTY_BACKING_FIELD name:z1 type:kotlin.Double visibility:private [final]] ] type:<unbound IrClassSymbolImpl>? visibility:private [final]' type=<unbound IrClassSymbolImpl>? origin=null
              receiver: GET_VAR '<this>: <root>.Test declared in <root>.Test.component2' type=<root>.Test origin=null
      FUN GENERATED_DATA_CLASS_MEMBER name:copy signature:/Test.copy|copy(kotlin.Double;kotlin.Double?){}[0] visibility:public modality:FINAL <> ($this:<root>.Test, z1:<unbound IrClassSymbolImpl>, z2:<unbound IrClassSymbolImpl>?) returnType:<root>.Test
        $this: VALUE_PARAMETER name:<this> type:<root>.Test
        VALUE_PARAMETER name:z1 index:0 type:<unbound IrClassSymbolImpl>
          EXPRESSION_BODY
            GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:z1 signature:[ /Test.z1|{}z1[0] <- Local[<BF>|FIELD PROPERTY_BACKING_FIELD name:z1 type:kotlin.Double visibility:private [final]] ] type:<unbound IrClassSymbolImpl> visibility:private [final]' type=<unbound IrClassSymbolImpl> origin=null
              receiver: GET_VAR '<this>: <root>.Test declared in <root>.Test.copy' type=<root>.Test origin=null
        VALUE_PARAMETER name:z2 index:1 type:<unbound IrClassSymbolImpl>?
          EXPRESSION_BODY
            GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:z2 signature:[ /Test.z2|{}z2[0] <- Local[<BF>|FIELD PROPERTY_BACKING_FIELD name:z1 type:kotlin.Double visibility:private [final]] ] type:<unbound IrClassSymbolImpl>? visibility:private [final]' type=<unbound IrClassSymbolImpl>? origin=null
              receiver: GET_VAR '<this>: <root>.Test declared in <root>.Test.copy' type=<root>.Test origin=null
        BLOCK_BODY
          RETURN type=<unbound IrClassSymbolImpl> from='public final fun copy (z1: <unbound IrClassSymbolImpl>, z2: <unbound IrClassSymbolImpl>?): <root>.Test declared in <root>.Test'
            CONSTRUCTOR_CALL 'public constructor <init> (z1: <unbound IrClassSymbolImpl>, z2: <unbound IrClassSymbolImpl>?) [primary] declared in <root>.Test' type=<root>.Test origin=null
              z1: GET_VAR 'z1: <unbound IrClassSymbolImpl> declared in <root>.Test.copy' type=<unbound IrClassSymbolImpl> origin=null
              z2: GET_VAR 'z2: <unbound IrClassSymbolImpl>? declared in <root>.Test.copy' type=<unbound IrClassSymbolImpl>? origin=null
      FUN GENERATED_DATA_CLASS_MEMBER name:toString signature:/Test.toString|toString(){}[0] visibility:public modality:OPEN <> ($this:<root>.Test) returnType:<unbound IrClassSymbolImpl>
        overridden:
          UNBOUND IrSimpleFunctionSymbolImpl
        $this: VALUE_PARAMETER name:<this> type:<root>.Test
        BLOCK_BODY
          RETURN type=<unbound IrClassSymbolImpl> from='public open fun toString (): <unbound IrClassSymbolImpl> declared in <root>.Test'
            STRING_CONCATENATION type=<unbound IrClassSymbolImpl>
              CONST String type=<unbound IrClassSymbolImpl> value="Test("
              CONST String type=<unbound IrClassSymbolImpl> value="z1="
              GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:z1 signature:[ /Test.z1|{}z1[0] <- Local[<BF>|FIELD PROPERTY_BACKING_FIELD name:z1 type:kotlin.Double visibility:private [final]] ] type:<unbound IrClassSymbolImpl> visibility:private [final]' type=<unbound IrClassSymbolImpl> origin=null
                receiver: GET_VAR '<this>: <root>.Test declared in <root>.Test.toString' type=<root>.Test origin=null
              CONST String type=<unbound IrClassSymbolImpl> value=", "
              CONST String type=<unbound IrClassSymbolImpl> value="z2="
              GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:z2 signature:[ /Test.z2|{}z2[0] <- Local[<BF>|FIELD PROPERTY_BACKING_FIELD name:z1 type:kotlin.Double visibility:private [final]] ] type:<unbound IrClassSymbolImpl>? visibility:private [final]' type=<unbound IrClassSymbolImpl>? origin=null
                receiver: GET_VAR '<this>: <root>.Test declared in <root>.Test.toString' type=<root>.Test origin=null
              CONST String type=<unbound IrClassSymbolImpl> value=")"
      FUN GENERATED_DATA_CLASS_MEMBER name:hashCode signature:/Test.hashCode|hashCode(){}[0] visibility:public modality:OPEN <> ($this:<root>.Test) returnType:<unbound IrClassSymbolImpl>
        overridden:
          UNBOUND IrSimpleFunctionSymbolImpl
        $this: VALUE_PARAMETER name:<this> type:<root>.Test
        BLOCK_BODY
          VAR name:result type:<unbound IrClassSymbolImpl> [var]
            CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
              $this: GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:z1 signature:[ /Test.z1|{}z1[0] <- Local[<BF>|FIELD PROPERTY_BACKING_FIELD name:z1 type:kotlin.Double visibility:private [final]] ] type:<unbound IrClassSymbolImpl> visibility:private [final]' type=<unbound IrClassSymbolImpl> origin=null
                receiver: GET_VAR '<this>: <root>.Test declared in <root>.Test.hashCode' type=<root>.Test origin=null
          SET_VAR 'var result: <unbound IrClassSymbolImpl> [var] declared in <root>.Test.hashCode' type=<unbound IrClassSymbolImpl> origin=EQ
            CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
              $this: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
                $this: GET_VAR 'var result: <unbound IrClassSymbolImpl> [var] declared in <root>.Test.hashCode' type=<unbound IrClassSymbolImpl> origin=null
                1: CONST Int type=<unbound IrClassSymbolImpl> value=31
              1: WHEN type=<unbound IrClassSymbolImpl> origin=null
                BRANCH
                  if: CALL 'public final fun EQEQ (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EQEQ
                    arg0: GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:z2 signature:[ /Test.z2|{}z2[0] <- Local[<BF>|FIELD PROPERTY_BACKING_FIELD name:z1 type:kotlin.Double visibility:private [final]] ] type:<unbound IrClassSymbolImpl>? visibility:private [final]' type=<unbound IrClassSymbolImpl>? origin=null
                      receiver: GET_VAR '<this>: <root>.Test declared in <root>.Test.hashCode' type=<root>.Test origin=null
                    arg1: CONST Null type=<unbound IrClassSymbolImpl>? value=null
                  then: CONST Int type=<unbound IrClassSymbolImpl> value=0
                BRANCH
                  if: CONST Boolean type=<unbound IrClassSymbolImpl> value=true
                  then: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
                    $this: GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:z2 signature:[ /Test.z2|{}z2[0] <- Local[<BF>|FIELD PROPERTY_BACKING_FIELD name:z1 type:kotlin.Double visibility:private [final]] ] type:<unbound IrClassSymbolImpl>? visibility:private [final]' type=<unbound IrClassSymbolImpl>? origin=null
                      receiver: GET_VAR '<this>: <root>.Test declared in <root>.Test.hashCode' type=<root>.Test origin=null
          RETURN type=<unbound IrClassSymbolImpl> from='public open fun hashCode (): <unbound IrClassSymbolImpl> declared in <root>.Test'
            GET_VAR 'var result: <unbound IrClassSymbolImpl> [var] declared in <root>.Test.hashCode' type=<unbound IrClassSymbolImpl> origin=null
      FUN GENERATED_DATA_CLASS_MEMBER name:equals signature:/Test.equals|equals(kotlin.Any?){}[0] visibility:public modality:OPEN <> ($this:<root>.Test, other:<unbound IrClassSymbolImpl>?) returnType:<unbound IrClassSymbolImpl> [operator]
        overridden:
          UNBOUND IrSimpleFunctionSymbolImpl
        $this: VALUE_PARAMETER name:<this> type:<root>.Test
        VALUE_PARAMETER name:other index:0 type:<unbound IrClassSymbolImpl>?
        BLOCK_BODY
          WHEN type=<unbound IrClassSymbolImpl> origin=null
            BRANCH
              if: CALL 'public final fun EQEQEQ (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EQEQEQ
                arg0: GET_VAR '<this>: <root>.Test declared in <root>.Test.equals' type=<root>.Test origin=null
                arg1: GET_VAR 'other: <unbound IrClassSymbolImpl>? declared in <root>.Test.equals' type=<unbound IrClassSymbolImpl>? origin=null
              then: RETURN type=<unbound IrClassSymbolImpl> from='public open fun equals (other: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> [operator] declared in <root>.Test'
                CONST Boolean type=<unbound IrClassSymbolImpl> value=true
          WHEN type=<unbound IrClassSymbolImpl> origin=null
            BRANCH
              if: TYPE_OP type=<unbound IrClassSymbolImpl> origin=NOT_INSTANCEOF typeOperand=<root>.Test
                GET_VAR 'other: <unbound IrClassSymbolImpl>? declared in <root>.Test.equals' type=<unbound IrClassSymbolImpl>? origin=null
              then: RETURN type=<unbound IrClassSymbolImpl> from='public open fun equals (other: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> [operator] declared in <root>.Test'
                CONST Boolean type=<unbound IrClassSymbolImpl> value=false
          VAR IR_TEMPORARY_VARIABLE name:tmp0_other_with_cast type:<root>.Test [val]
            TYPE_OP type=<root>.Test origin=CAST typeOperand=<root>.Test
              GET_VAR 'other: <unbound IrClassSymbolImpl>? declared in <root>.Test.equals' type=<unbound IrClassSymbolImpl>? origin=null
          WHEN type=<unbound IrClassSymbolImpl> origin=null
            BRANCH
              if: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=EXCLEQ
                $this: CALL 'public final fun EQEQ (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EXCLEQ
                  arg0: GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:z1 signature:[ /Test.z1|{}z1[0] <- Local[<BF>|FIELD PROPERTY_BACKING_FIELD name:z1 type:kotlin.Double visibility:private [final]] ] type:<unbound IrClassSymbolImpl> visibility:private [final]' type=<unbound IrClassSymbolImpl> origin=null
                    receiver: GET_VAR '<this>: <root>.Test declared in <root>.Test.equals' type=<root>.Test origin=null
                  arg1: GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:z1 signature:[ /Test.z1|{}z1[0] <- Local[<BF>|FIELD PROPERTY_BACKING_FIELD name:z1 type:kotlin.Double visibility:private [final]] ] type:<unbound IrClassSymbolImpl> visibility:private [final]' type=<unbound IrClassSymbolImpl> origin=null
                    receiver: GET_VAR 'val tmp0_other_with_cast: <root>.Test [val] declared in <root>.Test.equals' type=<root>.Test origin=null
              then: RETURN type=<unbound IrClassSymbolImpl> from='public open fun equals (other: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> [operator] declared in <root>.Test'
                CONST Boolean type=<unbound IrClassSymbolImpl> value=false
          WHEN type=<unbound IrClassSymbolImpl> origin=null
            BRANCH
              if: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=EXCLEQ
                $this: CALL 'public final fun EQEQ (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EXCLEQ
                  arg0: GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:z2 signature:[ /Test.z2|{}z2[0] <- Local[<BF>|FIELD PROPERTY_BACKING_FIELD name:z1 type:kotlin.Double visibility:private [final]] ] type:<unbound IrClassSymbolImpl>? visibility:private [final]' type=<unbound IrClassSymbolImpl>? origin=null
                    receiver: GET_VAR '<this>: <root>.Test declared in <root>.Test.equals' type=<root>.Test origin=null
                  arg1: GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:z2 signature:[ /Test.z2|{}z2[0] <- Local[<BF>|FIELD PROPERTY_BACKING_FIELD name:z1 type:kotlin.Double visibility:private [final]] ] type:<unbound IrClassSymbolImpl>? visibility:private [final]' type=<unbound IrClassSymbolImpl>? origin=null
                    receiver: GET_VAR 'val tmp0_other_with_cast: <root>.Test [val] declared in <root>.Test.equals' type=<root>.Test origin=null
              then: RETURN type=<unbound IrClassSymbolImpl> from='public open fun equals (other: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> [operator] declared in <root>.Test'
                CONST Boolean type=<unbound IrClassSymbolImpl> value=false
          RETURN type=<unbound IrClassSymbolImpl> from='public open fun equals (other: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> [operator] declared in <root>.Test'
            CONST Boolean type=<unbound IrClassSymbolImpl> value=true
    FUN name:box signature:/box|box(){}[0] visibility:public modality:FINAL <> () returnType:<unbound IrClassSymbolImpl>
      BLOCK_BODY
        VAR name:x type:<root>.Test [val]
          CONSTRUCTOR_CALL 'public constructor <init> (z1: <unbound IrClassSymbolImpl>, z2: <unbound IrClassSymbolImpl>?) [primary] declared in <root>.Test' type=<root>.Test origin=null
            z1: CONST Double type=<unbound IrClassSymbolImpl> value=NaN
            z2: CONST Double type=<unbound IrClassSymbolImpl> value=NaN
        VAR name:y type:<root>.Test [val]
          CONSTRUCTOR_CALL 'public constructor <init> (z1: <unbound IrClassSymbolImpl>, z2: <unbound IrClassSymbolImpl>?) [primary] declared in <root>.Test' type=<root>.Test origin=null
            z1: CONST Double type=<unbound IrClassSymbolImpl> value=NaN
            z2: CONST Double type=<unbound IrClassSymbolImpl> value=NaN
        RETURN type=<unbound IrClassSymbolImpl> from='public final fun box (): <unbound IrClassSymbolImpl> declared in <root>'
          WHEN type=<unbound IrClassSymbolImpl> origin=IF
            BRANCH
              if: CALL 'public final fun EQEQ (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EQEQ
                arg0: GET_VAR 'val x: <root>.Test [val] declared in <root>.box' type=<root>.Test origin=null
                arg1: GET_VAR 'val y: <root>.Test [val] declared in <root>.box' type=<root>.Test origin=null
              then: CONST String type=<unbound IrClassSymbolImpl> value="OK"
            BRANCH
              if: CONST Boolean type=<unbound IrClassSymbolImpl> value=true
              then: CONST String type=<unbound IrClassSymbolImpl> value="fail"
