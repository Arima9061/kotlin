library {
  // module name: <main>

  library fragment {
    // package name: <root>

    // class name: A
    // class name: B
    // class name: G
    // class name: IFoo
    // class name: X
    // class name: Z

    public abstract interface A : X, Z {
    }

    public abstract interface B : X, Z {
    }

    public final class G<T#0 /* T */ : X & Z> : kotlin/Any {

      public constructor()

      public final fun check(x: IFoo<in T#0>): kotlin/Unit
    }

    public abstract fun interface IFoo<T#0 /* T */ : X & Z> : kotlin/Any {

      public abstract fun accept(t: T#0): kotlin/Unit
    }

    public abstract interface X : kotlin/Any {
    }

    public abstract interface Z : kotlin/Any {
    }

    package {

      public final fun box(): kotlin/String

      public final fun <T#0 /* T */> sel(x: T#0, y: T#0): T#0
    }
  }
}
