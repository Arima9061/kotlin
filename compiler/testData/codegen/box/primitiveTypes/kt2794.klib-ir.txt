MODULE_FRAGMENT name:<main>
  FILE fqName:<root> fileName:/kt2794.kt
    FUN name:box signature:/box|box(){}[0] visibility:public modality:FINAL <> () returnType:<unbound IrClassSymbolImpl>
      BLOCK_BODY
        VAR name:b type:<unbound IrClassSymbolImpl> [val]
          CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
            $this: CONST Int type=<unbound IrClassSymbolImpl> value=4
        VAR name:s type:<unbound IrClassSymbolImpl> [val]
          CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
            $this: CONST Int type=<unbound IrClassSymbolImpl> value=5
        VAR name:c type:<unbound IrClassSymbolImpl> [val]
          CONST Char type=<unbound IrClassSymbolImpl> value='A'
        RETURN type=<unbound IrClassSymbolImpl> from='public final fun box (): <unbound IrClassSymbolImpl> declared in <root>'
          WHEN type=<unbound IrClassSymbolImpl> origin=IF
            BRANCH
              if: WHEN type=<unbound IrClassSymbolImpl> origin=ANDAND
                BRANCH
                  if: WHEN type=<unbound IrClassSymbolImpl> origin=ANDAND
                    BRANCH
                      if: WHEN type=<unbound IrClassSymbolImpl> origin=ANDAND
                        BRANCH
                          if: WHEN type=<unbound IrClassSymbolImpl> origin=ANDAND
                            BRANCH
                              if: WHEN type=<unbound IrClassSymbolImpl> origin=ANDAND
                                BRANCH
                                  if: CALL 'public final fun EQEQ (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EQEQ
                                    arg0: STRING_CONCATENATION type=<unbound IrClassSymbolImpl>
                                      GET_VAR 'val b: <unbound IrClassSymbolImpl> [val] declared in <root>.box' type=<unbound IrClassSymbolImpl> origin=null
                                    arg1: CONST String type=<unbound IrClassSymbolImpl> value="4"
                                  then: CALL 'public final fun EQEQ (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EQEQ
                                    arg0: STRING_CONCATENATION type=<unbound IrClassSymbolImpl>
                                      CONST String type=<unbound IrClassSymbolImpl> value=" "
                                      GET_VAR 'val b: <unbound IrClassSymbolImpl> [val] declared in <root>.box' type=<unbound IrClassSymbolImpl> origin=null
                                    arg1: CONST String type=<unbound IrClassSymbolImpl> value=" 4"
                                BRANCH
                                  if: CONST Boolean type=<unbound IrClassSymbolImpl> value=true
                                  then: CONST Boolean type=<unbound IrClassSymbolImpl> value=false
                              then: CALL 'public final fun EQEQ (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EQEQ
                                arg0: STRING_CONCATENATION type=<unbound IrClassSymbolImpl>
                                  GET_VAR 'val s: <unbound IrClassSymbolImpl> [val] declared in <root>.box' type=<unbound IrClassSymbolImpl> origin=null
                                arg1: CONST String type=<unbound IrClassSymbolImpl> value="5"
                            BRANCH
                              if: CONST Boolean type=<unbound IrClassSymbolImpl> value=true
                              then: CONST Boolean type=<unbound IrClassSymbolImpl> value=false
                          then: CALL 'public final fun EQEQ (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EQEQ
                            arg0: STRING_CONCATENATION type=<unbound IrClassSymbolImpl>
                              CONST String type=<unbound IrClassSymbolImpl> value=" "
                              GET_VAR 'val s: <unbound IrClassSymbolImpl> [val] declared in <root>.box' type=<unbound IrClassSymbolImpl> origin=null
                            arg1: CONST String type=<unbound IrClassSymbolImpl> value=" 5"
                        BRANCH
                          if: CONST Boolean type=<unbound IrClassSymbolImpl> value=true
                          then: CONST Boolean type=<unbound IrClassSymbolImpl> value=false
                      then: CALL 'public final fun EQEQ (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EQEQ
                        arg0: STRING_CONCATENATION type=<unbound IrClassSymbolImpl>
                          GET_VAR 'val c: <unbound IrClassSymbolImpl> [val] declared in <root>.box' type=<unbound IrClassSymbolImpl> origin=null
                        arg1: CONST String type=<unbound IrClassSymbolImpl> value="A"
                    BRANCH
                      if: CONST Boolean type=<unbound IrClassSymbolImpl> value=true
                      then: CONST Boolean type=<unbound IrClassSymbolImpl> value=false
                  then: CALL 'public final fun EQEQ (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EQEQ
                    arg0: STRING_CONCATENATION type=<unbound IrClassSymbolImpl>
                      CONST String type=<unbound IrClassSymbolImpl> value=" "
                      GET_VAR 'val c: <unbound IrClassSymbolImpl> [val] declared in <root>.box' type=<unbound IrClassSymbolImpl> origin=null
                    arg1: CONST String type=<unbound IrClassSymbolImpl> value=" A"
                BRANCH
                  if: CONST Boolean type=<unbound IrClassSymbolImpl> value=true
                  then: CONST Boolean type=<unbound IrClassSymbolImpl> value=false
              then: CONST String type=<unbound IrClassSymbolImpl> value="OK"
            BRANCH
              if: CONST Boolean type=<unbound IrClassSymbolImpl> value=true
              then: CONST String type=<unbound IrClassSymbolImpl> value="fail"
