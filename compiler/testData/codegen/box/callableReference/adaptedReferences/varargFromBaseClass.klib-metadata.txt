library {
  // module name: <main>

  library fragment {
    // package name: <root>

    // class name: Base
    // class name: Derived

    public abstract class Base : kotlin/Any {

      public constructor()

      public final fun base1(vararg s: kotlin/String /* kotlin/Array<out kotlin/String> */): kotlin/Unit

      public final fun base2(s: kotlin/String): kotlin/Unit
    }

    public final class Derived : Base {

      public constructor()

      private final fun derived1(vararg s: kotlin/String /* kotlin/Array<out kotlin/String> */): kotlin/Unit

      private final fun derived2(s: kotlin/String): kotlin/Unit
    }

    package {

      public final fun box(): kotlin/String

      public final fun id(f: kotlin/Function1<kotlin/String, kotlin/Unit>): kotlin/Function1<kotlin/String, kotlin/Unit>

      public final var result: kotlin/String
        public final get
        public final set
    }
  }
}
