library {
  // module name: <main>

  library fragment {
    // package name: <root>

    // class name: C

    public final class C : kotlin/Any {

      public constructor(expected: kotlin/Int)

      public final fun memberBoth(i: kotlin/Int, s: kotlin/String /* = ... */, vararg t: kotlin/String /* kotlin/Array<out kotlin/String> */): kotlin/Unit

      public final fun memberDefault(i: kotlin/Int, s: kotlin/String /* = ... */): kotlin/Unit

      public final fun memberVararg(i: kotlin/Int, vararg s: kotlin/String /* kotlin/Array<out kotlin/String> */): kotlin/Unit

      public final val expected: kotlin/Int
        public final get
    }

    package {

      public final fun box(): kotlin/String

      public final fun C.extensionBoth(i: kotlin/Int, s: kotlin/String /* = ... */, vararg t: kotlin/String /* kotlin/Array<out kotlin/String> */): kotlin/Unit

      public final fun C.extensionDefault(i: kotlin/Int, s: kotlin/String /* = ... */): kotlin/Unit

      public final fun C.extensionVararg(i: kotlin/Int, vararg s: kotlin/String /* kotlin/Array<out kotlin/String> */): kotlin/Unit

      public final fun test(f: kotlin/Function1<kotlin/Int, kotlin/Unit>, p: kotlin/Int): kotlin/Unit
    }
  }
}
