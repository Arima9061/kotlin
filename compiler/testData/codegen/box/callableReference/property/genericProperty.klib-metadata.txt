library {
  // module name: <main>

  library fragment {
    // package name: <root>

    // class name: DVal
    // class name: Value

    public final class DVal<T#0 /* T */, T#1 /* R */, T#2 /* P */ : kotlin/reflect/KProperty1<T#0, T#1>> : kotlin/Any {

      public constructor(kmember: T#2)

      public final operator fun getValue(t: T#0, p: kotlin/reflect/KProperty<*>): T#1

      public final val kmember: T#2
        public final get
    }

    public final class Value<T#0 /* T */> : kotlin/Any {

      public constructor(value: T#0 /* = ... */, text: kotlin/String? /* = ... */)

      public final var text: kotlin/String?
        public final get
        public final set

      public final var value: T#0
        public final get
        public final set
    }

    package {

      public final fun box(): kotlin/String

      public final /* delegated */ val <T#0 /* T */> Value<T#0>.additionalText: kotlin/String?
        public final /* non-default */ get

      public final /* delegated */ val <T#0 /* T */> Value<T#0>.additionalValue: T#0
        public final /* non-default */ get
    }
  }
}
