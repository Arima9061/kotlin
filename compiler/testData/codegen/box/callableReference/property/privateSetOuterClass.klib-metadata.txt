library {
  // module name: <main>

  library fragment {
    // package name: <root>

    // class name: A
    // class name: A.B
    // class name: C

    public final class A : kotlin/Any {

      public constructor()

      public final var value: kotlin/String
        public final get
        private final /* non-default */ set(value: kotlin/String)

      // nested class: B
    }

    public final inner class A.B : kotlin/Any {

      public constructor()

      public final fun foo(): kotlin/reflect/KMutableProperty0<kotlin/String>
    }

    public final class C : kotlin/Any {

      public constructor()

      public final fun bar(): kotlin/reflect/KMutableProperty0<kotlin/String>

      public final var value: kotlin/String
        public final get
        private final /* non-default */ set(value: kotlin/String)
    }

    package {

      public final fun box(): kotlin/String
    }
  }
}
