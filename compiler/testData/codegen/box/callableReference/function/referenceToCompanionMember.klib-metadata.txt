library {
  // module name: <main>

  library fragment {
    // package name: <root>

    // class name: A
    // class name: A.Companion
    // class name: B
    // class name: B.Companion

    public final class A : kotlin/Any {

      public constructor()

      // companion object: Companion

      // nested class: Companion
    }

    public final companion object A.Companion : kotlin/Any {

      private constructor()

      public final fun foo(): kotlin/String
    }

    public final class B : kotlin/Any {

      public constructor()

      // companion object: Companion

      // nested class: Companion
    }

    public final companion object B.Companion : kotlin/Any {

      private constructor()

      public final fun foo(): kotlin/String
    }

    package {

      public final fun box(): kotlin/String

      public final fun call(f: kotlin/Any): kotlin/String

      public final fun B.foo(): kotlin/String
    }
  }
}
