MODULE_FRAGMENT name:<main>
  FILE fqName:<root> fileName:/extensionToPrimitive.kt
    FUN name:box signature:/box|box(){}[0] visibility:public modality:FINAL <> () returnType:<unbound IrClassSymbolImpl>
      BLOCK_BODY
        FUN LOCAL_FUNCTION name:is42With visibility:local modality:FINAL <> ($receiver:<unbound IrClassSymbolImpl>, that:<unbound IrClassSymbolImpl>) returnType:<unbound IrClassSymbolImpl>
          $receiver: VALUE_PARAMETER name:<this> type:<unbound IrClassSymbolImpl>
          VALUE_PARAMETER name:that index:0 type:<unbound IrClassSymbolImpl>
          BLOCK_BODY
            RETURN type=<unbound IrClassSymbolImpl> from='local final fun is42With (that: <unbound IrClassSymbolImpl>): <unbound IrClassSymbolImpl> declared in <root>.box'
              CALL 'public final fun EQEQ (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EQEQ
                arg0: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=PLUS
                  $this: GET_VAR '<this>: <unbound IrClassSymbolImpl> declared in <root>.box.is42With' type=<unbound IrClassSymbolImpl> origin=null
                  1: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=MUL
                    $this: CONST Int type=<unbound IrClassSymbolImpl> value=2
                    1: GET_VAR 'that: <unbound IrClassSymbolImpl> declared in <root>.box.is42With' type=<unbound IrClassSymbolImpl> origin=null
                arg1: CONST Int type=<unbound IrClassSymbolImpl> value=42
        RETURN type=<unbound IrClassSymbolImpl> from='public final fun box (): <unbound IrClassSymbolImpl> declared in <root>'
          WHEN type=<unbound IrClassSymbolImpl> origin=IF
            BRANCH
              if: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
                <1>: @[<unbound>] <unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>, <unbound IrClassSymbolImpl>, <unbound IrClassSymbolImpl>>
                <2>: <unbound IrClassSymbolImpl>
                $receiver: FUNCTION_REFERENCE 'local final fun is42With (that: <unbound IrClassSymbolImpl>): <unbound IrClassSymbolImpl> declared in <root>.box' type=@[<unbound>] <unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>, <unbound IrClassSymbolImpl>, <unbound IrClassSymbolImpl>> origin=null reflectionTarget=<same>
                1: FUN_EXPR type=<unbound IrClassSymbolImpl><@[<unbound>] <unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>, <unbound IrClassSymbolImpl>, <unbound IrClassSymbolImpl>>, <unbound IrClassSymbolImpl>> origin=LAMBDA
                  FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL <> (it:@[<unbound>] <unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>, <unbound IrClassSymbolImpl>, <unbound IrClassSymbolImpl>>) returnType:<unbound IrClassSymbolImpl>
                    VALUE_PARAMETER name:it index:0 type:@[<unbound>] <unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>, <unbound IrClassSymbolImpl>, <unbound IrClassSymbolImpl>>
                    BLOCK_BODY
                      RETURN type=<unbound IrClassSymbolImpl> from='local final fun <anonymous> (it: @[<unbound>] <unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>, <unbound IrClassSymbolImpl>, <unbound IrClassSymbolImpl>>): <unbound IrClassSymbolImpl> declared in <root>.box'
                        CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=INVOKE
                          $this: GET_VAR 'it: @[<unbound>] <unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>, <unbound IrClassSymbolImpl>, <unbound IrClassSymbolImpl>> declared in <root>.box.<anonymous>' type=@[<unbound>] <unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>, <unbound IrClassSymbolImpl>, <unbound IrClassSymbolImpl>> origin=VARIABLE_AS_FUNCTION
                          1: CONST Int type=<unbound IrClassSymbolImpl> value=16
                          2: CONST Int type=<unbound IrClassSymbolImpl> value=13
              then: CONST String type=<unbound IrClassSymbolImpl> value="OK"
            BRANCH
              if: CONST Boolean type=<unbound IrClassSymbolImpl> value=true
              then: CONST String type=<unbound IrClassSymbolImpl> value="Fail"
