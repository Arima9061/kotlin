library {
  // module name: <main>

  library fragment {
    // package name: <root>

    // class name: KRunnable
    // class name: KSupplier

    public abstract fun interface KRunnable : kotlin/Any {

      public abstract fun run(): kotlin/Unit
    }

    public abstract fun interface KSupplier<T#0 /* T */> : kotlin/Any {

      public abstract fun get(): T#0
    }

    package {

      public final fun box(): kotlin/String

      public final fun checkEqual(message: kotlin/String, a1: kotlin/Any, a2: kotlin/Any): kotlin/Unit

      public final fun checkNotEqual(message: kotlin/String, a1: kotlin/Any, a2: kotlin/Any): kotlin/Unit

      public final val kn1: kotlin/Function1<kotlin/Function0<kotlin/Number>, KSupplier<kotlin/Number>>
        public final get

      public final val ks1: kotlin/Function1<kotlin/Function0<kotlin/String>, KSupplier<kotlin/String>>
        public final get

      public final val ks2: kotlin/Function1<kotlin/Function0<kotlin/String>, KSupplier<kotlin/String>>
        public final get

      public final val ks3: kotlin/Function1<kotlin/Function0<kotlin/String>, KSupplier<kotlin/String>>
        public final get
    }
  }
}
