library {
  // module name: <main>

  library fragment {
    // package name: <root>

    // class name: KStringSupplier
    // class name: KSupplier

    public abstract fun interface KStringSupplier : kotlin/Any {

      public abstract fun get(): kotlin/String
    }

    public abstract fun interface KSupplier<T#0 /* T */> : kotlin/Any {

      public abstract fun get(): T#0
    }

    package {

      public final fun bar(): kotlin/String

      public final fun box(): kotlin/String

      public final fun checkEqual(message: kotlin/String, a1: kotlin/Any, a2: kotlin/Any): kotlin/Unit

      public final fun checkNotEqual(message: kotlin/String, a1: kotlin/Any, a2: kotlin/Any): kotlin/Unit

      public final fun foo(): kotlin/String

      public final val ks1: kotlin/Function1<kotlin/Function0<kotlin/String>, KSupplier<kotlin/String>>
        public final get

      public final val ks11Bar: KSupplier<kotlin/String>
        public final get

      public final val ks11Foo: KSupplier<kotlin/String>
        public final get

      public final val ks12Foo: KSupplier<kotlin/String>
        public final /* non-default */ get

      public final val ks2: kotlin/Function1<kotlin/Function0<kotlin/String>, KSupplier<kotlin/String>>
        public final get

      public final val ks21Foo: KSupplier<kotlin/String>
        public final /* non-default */ get

      public final val ks22Foo: KSupplier<kotlin/String>
        public final get

      public final val kss: kotlin/Function1<kotlin/Function0<kotlin/String>, KStringSupplier>
        public final get

      public final val kssFoo: KStringSupplier
        public final get
    }
  }
}
