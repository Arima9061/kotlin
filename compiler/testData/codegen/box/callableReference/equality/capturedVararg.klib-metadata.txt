library {
  // module name: <main>

  library fragment {
    // package name: <root>

    // class name: V

    public final class V : kotlin/Any {

      public constructor()

      public final fun target(vararg x: kotlin/String /* kotlin/Array<out kotlin/String> */): kotlin/Unit
    }

    package {

      public final fun box(): kotlin/String

      private final fun captureVararg0(f: kotlin/Function1<V, kotlin/Unit>): kotlin/Any

      private final fun captureVararg0(f: kotlin/Function1<V, kotlin/Unit>): kotlin/Any

      private final fun captureVararg0Bound(f: kotlin/Function0<kotlin/Unit>): kotlin/Any

      private final fun captureVararg0Bound(f: kotlin/Function0<kotlin/Unit>): kotlin/Any

      public final fun captureVararg0BoundFromOtherFile(v0: V): kotlin/Any

      public final fun captureVararg0FromOtherFile(): kotlin/Any

      private final fun captureVararg1(f: kotlin/Function2<V, kotlin/String, kotlin/Unit>): kotlin/Any

      private final fun captureVararg1Bound(f: kotlin/Function1<kotlin/String, kotlin/Unit>): kotlin/Any

      private final fun captureVararg2(f: kotlin/Function3<V, kotlin/String, kotlin/String, kotlin/Unit>): kotlin/Any

      private final fun captureVararg2Bound(f: kotlin/Function2<kotlin/String, kotlin/String, kotlin/Unit>): kotlin/Any

      private final fun captureVarargAsArray(f: kotlin/Function2<V, kotlin/Array<kotlin/String>, kotlin/Unit>): kotlin/Any

      private final fun captureVarargAsArray(f: kotlin/Function2<V, kotlin/Array<kotlin/String>, kotlin/Unit>): kotlin/Any

      private final fun captureVarargAsArrayBound(f: kotlin/Function1<kotlin/Array<kotlin/String>, kotlin/Unit>): kotlin/Any

      private final fun captureVarargAsArrayBound(f: kotlin/Function1<kotlin/Array<kotlin/String>, kotlin/Unit>): kotlin/Any

      public final fun captureVarargAsArrayBoundFromOtherFile(v0: V): kotlin/Any

      public final fun captureVarargAsArrayFromOtherFile(): kotlin/Any

      public final fun checkEqual(x: kotlin/Any, y: kotlin/Any): kotlin/Unit

      public final fun checkNotEqual(x: kotlin/Any, y: kotlin/Any): kotlin/Unit
    }
  }
}
