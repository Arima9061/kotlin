library {
  // module name: <main>

  library fragment {
    // package name: <root>

    // class name: V

    public final class V : kotlin/Any {

      public constructor()

      public final fun target(): kotlin/String
    }

    package {

      public final fun box(): kotlin/String

      private final fun captureString(f: kotlin/Function1<V, kotlin/String>): kotlin/Any

      private final fun captureString(f: kotlin/Function1<V, kotlin/String>): kotlin/Any

      private final fun captureStringBound(f: kotlin/Function0<kotlin/String>): kotlin/Any

      private final fun captureStringBound(f: kotlin/Function0<kotlin/String>): kotlin/Any

      public final fun captureStringBoundFromOtherFile(v0: V): kotlin/Any

      public final fun captureStringFromOtherFile(): kotlin/Any

      private final fun captureUnit(f: kotlin/Function1<V, kotlin/Unit>): kotlin/Any

      private final fun captureUnit(f: kotlin/Function1<V, kotlin/Unit>): kotlin/Any

      private final fun captureUnitBound(f: kotlin/Function0<kotlin/Unit>): kotlin/Any

      private final fun captureUnitBound(f: kotlin/Function0<kotlin/Unit>): kotlin/Any

      public final fun captureUnitBoundFromOtherFile(v0: V): kotlin/Any

      public final fun captureUnitFromOtherFile(): kotlin/Any

      public final fun checkEqual(x: kotlin/Any, y: kotlin/Any): kotlin/Unit

      public final fun checkNotEqual(x: kotlin/Any, y: kotlin/Any): kotlin/Unit
    }
  }
}
