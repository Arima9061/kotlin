MODULE_FRAGMENT name:<main>
  FILE fqName:<root> fileName:/fromOtherFile.kt
    FUN name:referenceTopLevelFunFromOtherFile signature:/referenceTopLevelFunFromOtherFile|referenceTopLevelFunFromOtherFile(){}[0] visibility:public modality:FINAL <> () returnType:<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>>
      BLOCK_BODY
        RETURN type=<unbound IrClassSymbolImpl> from='public final fun referenceTopLevelFunFromOtherFile (): <unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> declared in <root>'
          FUNCTION_REFERENCE 'public final fun topLevelFun (): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> origin=null reflectionTarget=<same>
  FILE fqName:<root> fileName:/test.kt
    FUN name:checkEqual signature:/checkEqual|checkEqual(kotlin.Any;kotlin.Any){}[0] visibility:public modality:FINAL <> (x:<unbound IrClassSymbolImpl>, y:<unbound IrClassSymbolImpl>) returnType:<unbound IrClassSymbolImpl>
      VALUE_PARAMETER name:x index:0 type:<unbound IrClassSymbolImpl>
      VALUE_PARAMETER name:y index:1 type:<unbound IrClassSymbolImpl>
      BLOCK_BODY
        WHEN type=<unbound IrClassSymbolImpl> origin=IF
          BRANCH
            if: WHEN type=<unbound IrClassSymbolImpl> origin=OROR
              BRANCH
                if: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=EXCLEQ
                  $this: CALL 'public final fun EQEQ (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EXCLEQ
                    arg0: GET_VAR 'x: <unbound IrClassSymbolImpl> declared in <root>.checkEqual' type=<unbound IrClassSymbolImpl> origin=null
                    arg1: GET_VAR 'y: <unbound IrClassSymbolImpl> declared in <root>.checkEqual' type=<unbound IrClassSymbolImpl> origin=null
                then: CONST Boolean type=<unbound IrClassSymbolImpl> value=true
              BRANCH
                if: CONST Boolean type=<unbound IrClassSymbolImpl> value=true
                then: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=EXCLEQ
                  $this: CALL 'public final fun EQEQ (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EXCLEQ
                    arg0: GET_VAR 'y: <unbound IrClassSymbolImpl> declared in <root>.checkEqual' type=<unbound IrClassSymbolImpl> origin=null
                    arg1: GET_VAR 'x: <unbound IrClassSymbolImpl> declared in <root>.checkEqual' type=<unbound IrClassSymbolImpl> origin=null
            then: THROW type=<unbound IrClassSymbolImpl>
              CONSTRUCTOR_CALL 'UNBOUND IrConstructorSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
                1: STRING_CONCATENATION type=<unbound IrClassSymbolImpl>
                  GET_VAR 'x: <unbound IrClassSymbolImpl> declared in <root>.checkEqual' type=<unbound IrClassSymbolImpl> origin=null
                  CONST String type=<unbound IrClassSymbolImpl> value=" and "
                  GET_VAR 'y: <unbound IrClassSymbolImpl> declared in <root>.checkEqual' type=<unbound IrClassSymbolImpl> origin=null
                  CONST String type=<unbound IrClassSymbolImpl> value=" should be equal"
        WHEN type=<unbound IrClassSymbolImpl> origin=IF
          BRANCH
            if: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=EXCLEQ
              $this: CALL 'public final fun EQEQ (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EXCLEQ
                arg0: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
                  $this: GET_VAR 'x: <unbound IrClassSymbolImpl> declared in <root>.checkEqual' type=<unbound IrClassSymbolImpl> origin=null
                arg1: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
                  $this: GET_VAR 'y: <unbound IrClassSymbolImpl> declared in <root>.checkEqual' type=<unbound IrClassSymbolImpl> origin=null
            then: THROW type=<unbound IrClassSymbolImpl>
              CONSTRUCTOR_CALL 'UNBOUND IrConstructorSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
                1: STRING_CONCATENATION type=<unbound IrClassSymbolImpl>
                  GET_VAR 'x: <unbound IrClassSymbolImpl> declared in <root>.checkEqual' type=<unbound IrClassSymbolImpl> origin=null
                  CONST String type=<unbound IrClassSymbolImpl> value=" and "
                  GET_VAR 'y: <unbound IrClassSymbolImpl> declared in <root>.checkEqual' type=<unbound IrClassSymbolImpl> origin=null
                  CONST String type=<unbound IrClassSymbolImpl> value=" should have the same hash code"
    FUN name:checkNotEqual signature:/checkNotEqual|checkNotEqual(kotlin.Any;kotlin.Any){}[0] visibility:public modality:FINAL <> (x:<unbound IrClassSymbolImpl>, y:<unbound IrClassSymbolImpl>) returnType:<unbound IrClassSymbolImpl>
      VALUE_PARAMETER name:x index:0 type:<unbound IrClassSymbolImpl>
      VALUE_PARAMETER name:y index:1 type:<unbound IrClassSymbolImpl>
      BLOCK_BODY
        WHEN type=<unbound IrClassSymbolImpl> origin=IF
          BRANCH
            if: WHEN type=<unbound IrClassSymbolImpl> origin=OROR
              BRANCH
                if: CALL 'public final fun EQEQ (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EQEQ
                  arg0: GET_VAR 'x: <unbound IrClassSymbolImpl> declared in <root>.checkNotEqual' type=<unbound IrClassSymbolImpl> origin=null
                  arg1: GET_VAR 'y: <unbound IrClassSymbolImpl> declared in <root>.checkNotEqual' type=<unbound IrClassSymbolImpl> origin=null
                then: CONST Boolean type=<unbound IrClassSymbolImpl> value=true
              BRANCH
                if: CONST Boolean type=<unbound IrClassSymbolImpl> value=true
                then: CALL 'public final fun EQEQ (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EQEQ
                  arg0: GET_VAR 'y: <unbound IrClassSymbolImpl> declared in <root>.checkNotEqual' type=<unbound IrClassSymbolImpl> origin=null
                  arg1: GET_VAR 'x: <unbound IrClassSymbolImpl> declared in <root>.checkNotEqual' type=<unbound IrClassSymbolImpl> origin=null
            then: THROW type=<unbound IrClassSymbolImpl>
              CONSTRUCTOR_CALL 'UNBOUND IrConstructorSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
                1: STRING_CONCATENATION type=<unbound IrClassSymbolImpl>
                  GET_VAR 'x: <unbound IrClassSymbolImpl> declared in <root>.checkNotEqual' type=<unbound IrClassSymbolImpl> origin=null
                  CONST String type=<unbound IrClassSymbolImpl> value=" and "
                  GET_VAR 'y: <unbound IrClassSymbolImpl> declared in <root>.checkNotEqual' type=<unbound IrClassSymbolImpl> origin=null
                  CONST String type=<unbound IrClassSymbolImpl> value=" should NOT be equal"
    CLASS CLASS name:V signature:/V|null[0] modality:FINAL visibility:public superTypes:[<unbound IrClassSymbolImpl>]
      $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:<root>.V
      CONSTRUCTOR signature:/V.<init>|<init>(){}[0] visibility:public <> () returnType:<root>.V [primary]
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL 'UNBOUND IrConstructorSymbolImpl'
          INSTANCE_INITIALIZER_CALL classDescriptor='CLASS CLASS name:V signature:/V|null[0] modality:FINAL visibility:public superTypes:[<unbound IrClassSymbolImpl>]'
      FUN name:memberFun signature:/V.memberFun|memberFun(){}[0] visibility:public modality:FINAL <> ($this:<root>.V) returnType:<unbound IrClassSymbolImpl>
        $this: VALUE_PARAMETER name:<this> type:<root>.V
        BLOCK_BODY
          RETURN type=<unbound IrClassSymbolImpl> from='public final fun memberFun (): <unbound IrClassSymbolImpl> declared in <root>.V'
            CONST String type=<unbound IrClassSymbolImpl> value=""
    FUN name:topLevelFun signature:/topLevelFun|topLevelFun(){}[0] visibility:public modality:FINAL <> () returnType:<unbound IrClassSymbolImpl>
      BLOCK_BODY
        RETURN type=<unbound IrClassSymbolImpl> from='public final fun topLevelFun (): <unbound IrClassSymbolImpl> declared in <root>'
          CONST String type=<unbound IrClassSymbolImpl> value=""
    FUN name:box signature:/box|box(){}[0] visibility:public modality:FINAL <> () returnType:<unbound IrClassSymbolImpl>
      BLOCK_BODY
        VAR name:v0 type:<root>.V [val]
          CONSTRUCTOR_CALL 'public constructor <init> () [primary] declared in <root>.V' type=<root>.V origin=null
        VAR name:v1 type:<root>.V [val]
          CONSTRUCTOR_CALL 'public constructor <init> () [primary] declared in <root>.V' type=<root>.V origin=null
        CALL 'public final fun checkEqual (x: <unbound IrClassSymbolImpl>, y: <unbound IrClassSymbolImpl>): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
          x: FUNCTION_REFERENCE 'public final fun topLevelFun (): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> origin=null reflectionTarget=<same>
          y: FUNCTION_REFERENCE 'public final fun topLevelFun (): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> origin=null reflectionTarget=<same>
        CALL 'public final fun checkEqual (x: <unbound IrClassSymbolImpl>, y: <unbound IrClassSymbolImpl>): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
          x: FUNCTION_REFERENCE 'public final fun topLevelFun (): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> origin=null reflectionTarget=<same>
          y: CALL 'public final fun referenceTopLevelFunFromOtherFile (): <unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> declared in <root>' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> origin=null
        CALL 'public final fun checkEqual (x: <unbound IrClassSymbolImpl>, y: <unbound IrClassSymbolImpl>): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
          x: FUNCTION_REFERENCE 'public final fun memberFun (): <unbound IrClassSymbolImpl> declared in <root>.V' type=<unbound IrClassSymbolImpl><<root>.V, <unbound IrClassSymbolImpl>> origin=null reflectionTarget=<same>
          y: FUNCTION_REFERENCE 'public final fun memberFun (): <unbound IrClassSymbolImpl> declared in <root>.V' type=<unbound IrClassSymbolImpl><<root>.V, <unbound IrClassSymbolImpl>> origin=null reflectionTarget=<same>
        CALL 'public final fun checkEqual (x: <unbound IrClassSymbolImpl>, y: <unbound IrClassSymbolImpl>): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
          x: FUNCTION_REFERENCE 'public final fun memberFun (): <unbound IrClassSymbolImpl> declared in <root>.V' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> origin=null reflectionTarget=<same>
            $this: GET_VAR 'val v0: <root>.V [val] declared in <root>.box' type=<root>.V origin=null
          y: FUNCTION_REFERENCE 'public final fun memberFun (): <unbound IrClassSymbolImpl> declared in <root>.V' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> origin=null reflectionTarget=<same>
            $this: GET_VAR 'val v0: <root>.V [val] declared in <root>.box' type=<root>.V origin=null
        CALL 'public final fun checkNotEqual (x: <unbound IrClassSymbolImpl>, y: <unbound IrClassSymbolImpl>): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
          x: FUNCTION_REFERENCE 'public final fun memberFun (): <unbound IrClassSymbolImpl> declared in <root>.V' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> origin=null reflectionTarget=<same>
            $this: GET_VAR 'val v0: <root>.V [val] declared in <root>.box' type=<root>.V origin=null
          y: FUNCTION_REFERENCE 'public final fun memberFun (): <unbound IrClassSymbolImpl> declared in <root>.V' type=<unbound IrClassSymbolImpl><<root>.V, <unbound IrClassSymbolImpl>> origin=null reflectionTarget=<same>
        CALL 'public final fun checkNotEqual (x: <unbound IrClassSymbolImpl>, y: <unbound IrClassSymbolImpl>): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
          x: FUNCTION_REFERENCE 'public final fun memberFun (): <unbound IrClassSymbolImpl> declared in <root>.V' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> origin=null reflectionTarget=<same>
            $this: GET_VAR 'val v0: <root>.V [val] declared in <root>.box' type=<root>.V origin=null
          y: FUNCTION_REFERENCE 'public final fun memberFun (): <unbound IrClassSymbolImpl> declared in <root>.V' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> origin=null reflectionTarget=<same>
            $this: GET_VAR 'val v1: <root>.V [val] declared in <root>.box' type=<root>.V origin=null
        RETURN type=<unbound IrClassSymbolImpl> from='public final fun box (): <unbound IrClassSymbolImpl> declared in <root>'
          CONST String type=<unbound IrClassSymbolImpl> value="OK"
