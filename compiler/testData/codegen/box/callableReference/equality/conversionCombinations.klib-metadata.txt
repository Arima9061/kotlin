library {
  // module name: <main>

  library fragment {
    // package name: <root>

    package {

      public final fun allConversions(ref: suspend kotlin/Function3<kotlin/Int, kotlin/String, kotlin/coroutines/Continuation<kotlin/Unit>, kotlin/Any?>): suspend kotlin/Function3<kotlin/Int, kotlin/String, kotlin/coroutines/Continuation<kotlin/Unit>, kotlin/Any?>

      public final fun allExceptDefaultConversion(ref: suspend kotlin/Function4<kotlin/Int, kotlin/String, kotlin/Int, kotlin/coroutines/Continuation<kotlin/Unit>, kotlin/Any?>): suspend kotlin/Function4<kotlin/Int, kotlin/String, kotlin/Int, kotlin/coroutines/Continuation<kotlin/Unit>, kotlin/Any?>

      public final fun allExceptSuspendConversion(ref: kotlin/Function2<kotlin/Int, kotlin/String, kotlin/Unit>): kotlin/Function2<kotlin/Int, kotlin/String, kotlin/Unit>

      public final fun allExceptUnitConversion(ref: suspend kotlin/Function3<kotlin/Int, kotlin/String, kotlin/coroutines/Continuation<kotlin/Int>, kotlin/Any?>): suspend kotlin/Function3<kotlin/Int, kotlin/String, kotlin/coroutines/Continuation<kotlin/Int>, kotlin/Any?>

      public final fun allExceptVarargConversion(ref: suspend kotlin/Function3<kotlin/Int, kotlin/Array<kotlin/String>, kotlin/coroutines/Continuation<kotlin/Unit>, kotlin/Any?>): suspend kotlin/Function3<kotlin/Int, kotlin/Array<kotlin/String>, kotlin/coroutines/Continuation<kotlin/Unit>, kotlin/Any?>

      public final fun box(): kotlin/String

      public final fun checkEqual(x: kotlin/Any, y: kotlin/Any): kotlin/Unit

      public final fun defaultAndVarargConversion(ref: kotlin/Function2<kotlin/Int, kotlin/String, kotlin/Int>): kotlin/Function2<kotlin/Int, kotlin/String, kotlin/Int>

      public final fun defaultConversion(ref: kotlin/Function2<kotlin/Int, kotlin/Array<kotlin/String>, kotlin/Int>): kotlin/Function2<kotlin/Int, kotlin/Array<kotlin/String>, kotlin/Int>

      public final inline fun inlineF(a: kotlin/Int, vararg b: kotlin/String /* kotlin/Array<out kotlin/String> */, c: kotlin/Int /* = ... */): kotlin/Int

      public final inline fun <reified T#0 /* T */> inlineReifiedF(a: T#0, vararg b: kotlin/String /* kotlin/Array<out kotlin/String> */, c: kotlin/Int /* = ... */): kotlin/Int

      public final fun noConversion(ref: kotlin/Function3<kotlin/Int, kotlin/Array<kotlin/String>, kotlin/Int, kotlin/Int>): kotlin/Function3<kotlin/Int, kotlin/Array<kotlin/String>, kotlin/Int, kotlin/Int>

      public final fun normalF(a: kotlin/Int, vararg b: kotlin/String /* kotlin/Array<out kotlin/String> */, c: kotlin/Int /* = ... */): kotlin/Int

      public final fun suspendAndDefaultConversion(ref: suspend kotlin/Function3<kotlin/Int, kotlin/Array<kotlin/String>, kotlin/coroutines/Continuation<kotlin/Int>, kotlin/Any?>): suspend kotlin/Function3<kotlin/Int, kotlin/Array<kotlin/String>, kotlin/coroutines/Continuation<kotlin/Int>, kotlin/Any?>

      public final fun suspendAndUnitConversion(ref: suspend kotlin/Function4<kotlin/Int, kotlin/Array<kotlin/String>, kotlin/Int, kotlin/coroutines/Continuation<kotlin/Unit>, kotlin/Any?>): suspend kotlin/Function4<kotlin/Int, kotlin/Array<kotlin/String>, kotlin/Int, kotlin/coroutines/Continuation<kotlin/Unit>, kotlin/Any?>

      public final fun suspendAndVarargConversion(ref: suspend kotlin/Function4<kotlin/Int, kotlin/String, kotlin/Int, kotlin/coroutines/Continuation<kotlin/Int>, kotlin/Any?>): suspend kotlin/Function4<kotlin/Int, kotlin/String, kotlin/Int, kotlin/coroutines/Continuation<kotlin/Int>, kotlin/Any?>

      public final fun suspendConversion(ref: suspend kotlin/Function4<kotlin/Int, kotlin/Array<kotlin/String>, kotlin/Int, kotlin/coroutines/Continuation<kotlin/Int>, kotlin/Any?>): suspend kotlin/Function4<kotlin/Int, kotlin/Array<kotlin/String>, kotlin/Int, kotlin/coroutines/Continuation<kotlin/Int>, kotlin/Any?>

      public final fun testInline(): kotlin/Unit

      public final fun testInlineReifined(): kotlin/Unit

      public final fun testNormal(): kotlin/Unit

      public final fun unitAndDefaultConversion(ref: kotlin/Function2<kotlin/Int, kotlin/Array<kotlin/String>, kotlin/Unit>): kotlin/Function2<kotlin/Int, kotlin/Array<kotlin/String>, kotlin/Unit>

      public final fun unitAndVarargConversion(ref: kotlin/Function3<kotlin/Int, kotlin/String, kotlin/Int, kotlin/Unit>): kotlin/Function3<kotlin/Int, kotlin/String, kotlin/Int, kotlin/Unit>

      public final fun unitConversion(ref: kotlin/Function3<kotlin/Int, kotlin/Array<kotlin/String>, kotlin/Int, kotlin/Unit>): kotlin/Function3<kotlin/Int, kotlin/Array<kotlin/String>, kotlin/Int, kotlin/Unit>

      public final fun varargConversion(ref: kotlin/Function3<kotlin/Int, kotlin/String, kotlin/Int, kotlin/Int>): kotlin/Function3<kotlin/Int, kotlin/String, kotlin/Int, kotlin/Int>
    }
  }
}
