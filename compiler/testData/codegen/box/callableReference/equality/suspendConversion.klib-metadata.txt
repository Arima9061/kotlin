library {
  // module name: <main>

  library fragment {
    // package name: <root>

    // class name: C

    public final class C : kotlin/Any {

      public constructor()

      public final fun memberFun(): kotlin/Unit
    }

    package {

      public final fun box(): kotlin/String

      public final fun captureBoundOther1(c: C): kotlin/Any

      public final fun captureBoundOther2(c: C): kotlin/Any

      public final fun captureOther1(): kotlin/Any

      public final fun captureOther2(): kotlin/Any

      public final fun capturePlain(fn: kotlin/Function0<kotlin/Unit>): kotlin/Any

      public final fun capturePlainInt(fn: kotlin/Function1<kotlin/Int, kotlin/Unit>): kotlin/Any

      public final fun captureSuspend(fn: suspend kotlin/Function1<kotlin/coroutines/Continuation<kotlin/Unit>, kotlin/Any?>): kotlin/Any

      public final fun captureSuspendInt(fn: suspend kotlin/Function2<kotlin/Int, kotlin/coroutines/Continuation<kotlin/Unit>, kotlin/Any?>): kotlin/Any

      public final fun checkEqual(x: kotlin/Any, y: kotlin/Any): kotlin/Unit

      public final fun checkNotEqual(x: kotlin/Any, y: kotlin/Any): kotlin/Unit

      public final fun fnReturnsInt(): kotlin/Int

      public final fun fnWithDefault(x1: kotlin/Int /* = ... */, x2: kotlin/Int /* = ... */): kotlin/Unit

      public final fun fnWithVararg(vararg xs: kotlin/Int /* kotlin/IntArray */): kotlin/Unit

      public final fun foo(): kotlin/Unit
    }
  }
}
