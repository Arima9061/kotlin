library {
  // module name: <main>

  library fragment {
    // package name: <root>

    // class name: A
    // class name: B
    // class name: Bottom
    // class name: C
    // class name: D
    // class name: Left
    // class name: Right
    // class name: Z

    public abstract interface A<T#0 /* T */> : kotlin/Any {

      public open fun f(): T#0?
    }

    public abstract interface B<T#0 /* T */ : Left> : A<T#0> {
    }

    public final class Bottom : Left, Right {

      public constructor()
    }

    public abstract class C<T#0 /* T */> : A<T#0> {

      public constructor()
    }

    public abstract class D<T#0 /* T */ : Right> : C<T#0> {

      public constructor()
    }

    public abstract interface Left : kotlin/Any {
    }

    public abstract interface Right : kotlin/Any {
    }

    public final class Z : D<Bottom>, B<Bottom> {

      public constructor()
    }

    package {

      public final fun box(): kotlin/String
    }
  }
}
