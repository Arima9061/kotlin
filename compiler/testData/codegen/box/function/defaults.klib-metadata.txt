library {
  // module name: <main>

  library fragment {
    // package name: <root>

    // class name: A
    // class name: A.Companion

    public open class A : kotlin/Any {

      public constructor(a: kotlin/Int)

      public open operator fun equals(other: kotlin/Any?): kotlin/Boolean

      public final val a: kotlin/Int
        public final get

      // companion object: Companion

      // nested class: Companion
    }

    public final companion object A.Companion : kotlin/Any {

      private constructor()

      public final val magic: A
        public final get

      public final val one: A
        public final get

      public final val zero: A
        public final get
    }

    package {

      public final fun bar(a: A, inc: kotlin/Int /* = ... */): A

      public final fun box(): kotlin/String

      public final fun foo(a: A /* = ... */, b: kotlin/Int /* = ... */): kotlin/Int
    }
  }
}
