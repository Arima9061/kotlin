library {
  // module name: <main>

  library fragment {
    // package name: <root>

    package {

      public final fun box(): kotlin/String
    }
  }

  library fragment {
    // package name: a

    // class name: a/A
    // class name: a/A.AC

    public open class a/A : kotlin/Any {

      public constructor()

      // companion object: AC

      // nested class: AC
    }

    protected final companion object a/A.AC : kotlin/Any {

      private constructor()

      public final fun getO(): kotlin/String
    }
  }

  library fragment {
    // package name: b

    // class name: b/B
    // class name: b/B.BC

    public open class b/B : a/A {

      public constructor()

      // companion object: BC

      // nested class: BC
    }

    protected final companion object b/B.BC : kotlin/Any {

      private constructor()

      public final fun getK(): kotlin/String
    }
  }

  library fragment {
    // package name: c

    // class name: c/C

    public final class c/C : b/B {

      public constructor()

      public final fun test(): kotlin/Function0<kotlin/String>
    }
  }
}
