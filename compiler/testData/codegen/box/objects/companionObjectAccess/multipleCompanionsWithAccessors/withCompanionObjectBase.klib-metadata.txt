library {
  // module name: <main>

  library fragment {
    // package name: <root>

    package {

      public final fun box(): kotlin/String
    }
  }

  library fragment {
    // package name: a

    // class name: a/A
    // class name: a/A.Companion

    public open class a/A : kotlin/Any {

      public constructor()

      // companion object: Companion

      // nested class: Companion
    }

    protected final companion object a/A.Companion : kotlin/Any {

      private constructor()

      public final fun getOK(): kotlin/String
    }
  }

  library fragment {
    // package name: b

    // class name: b/B
    // class name: b/B.Companion

    public final class b/B : kotlin/Any {

      public constructor()

      // companion object: Companion

      // nested class: Companion
    }

    public final companion object b/B.Companion : a/A {

      private constructor()

      public final val ok: kotlin/String
        public final get
    }
  }
}
