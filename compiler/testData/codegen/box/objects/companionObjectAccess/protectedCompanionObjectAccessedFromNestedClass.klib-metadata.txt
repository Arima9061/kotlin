library {
  // module name: <main>

  library fragment {
    // package name: <root>

    // class name: Outer
    // class name: Outer.Companion
    // class name: Outer.Nested

    public final class Outer : kotlin/Any {

      public constructor()

      public final fun test(): kotlin/String

      // companion object: Companion

      // nested class: Companion

      // nested class: Nested
    }

    protected final companion object Outer.Companion : kotlin/Any {

      private constructor()

      public final val result: kotlin/String /* = ... */
        public final get
    }

    public final class Outer.Nested : kotlin/Any {

      public constructor()

      public final fun foo(): kotlin/String
    }

    package {

      public final fun box(): kotlin/String
    }
  }
}
