library {
  // module name: <main>

  library fragment {
    // package name: <root>

    // class name: A
    // class name: B
    // class name: C
    // class name: X
    // class name: Y

    public abstract interface A : kotlin/Any {
    }

    public open class B : A {

      public constructor()
    }

    public open class C : A {

      public constructor()
    }

    public abstract class X : kotlin/Any {

      public constructor()

      public final fun <T#0 /* S1 */ : A> foo(s: T#0): kotlin/String

      public abstract fun <T#0 /* S2 */ : B> foo(s: T#0): kotlin/String

      public abstract fun <T#0 /* S3 */ : C> foo(s: T#0): kotlin/String
    }

    public final class Y : X {

      public constructor()

      public open fun <T#0 /* S4 */ : B> foo(s: T#0): kotlin/String

      public open fun <T#0 /* S5 */ : C> foo(s: T#0): kotlin/String
    }

    package {

      public final fun box(): kotlin/String
    }
  }
}
