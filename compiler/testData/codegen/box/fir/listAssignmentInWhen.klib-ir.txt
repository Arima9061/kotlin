MODULE_FRAGMENT name:<main>
  FILE fqName:<root> fileName:/listAssignmentInWhen.kt
    FUN name:foo signature:/foo|foo(kotlin.collections.MutableList<kotlin.Any?>;kotlin.Boolean){}[0] visibility:public modality:FINAL <> (list:<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>?>, condition:<unbound IrClassSymbolImpl>) returnType:<unbound IrClassSymbolImpl>
      VALUE_PARAMETER name:list index:0 type:<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>?>
      VALUE_PARAMETER name:condition index:1 type:<unbound IrClassSymbolImpl>
      BLOCK_BODY
        RETURN type=<unbound IrClassSymbolImpl> from='public final fun foo (list: <unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>?>, condition: <unbound IrClassSymbolImpl>): <unbound IrClassSymbolImpl> declared in <root>'
          WHEN type=<unbound IrClassSymbolImpl> origin=WHEN
            BRANCH
              if: GET_VAR 'condition: <unbound IrClassSymbolImpl> declared in <root>.foo' type=<unbound IrClassSymbolImpl> origin=null
              then: BLOCK type=<unbound IrClassSymbolImpl> origin=null
                TYPE_OP type=<unbound IrClassSymbolImpl> origin=IMPLICIT_COERCION_TO_UNIT typeOperand=<unbound IrClassSymbolImpl>
                  CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl>? origin=EQ
                    $this: GET_VAR 'list: <unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>?> declared in <root>.foo' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>?> origin=null
                    1: CONST Int type=<unbound IrClassSymbolImpl> value=0
                    2: CONST String type=<unbound IrClassSymbolImpl> value="OK"
            BRANCH
              if: CONST Boolean type=<unbound IrClassSymbolImpl> value=true
              then: GET_OBJECT 'UNBOUND IrClassSymbolImpl' type=<unbound IrClassSymbolImpl>
    FUN name:box signature:/box|box(){}[0] visibility:public modality:FINAL <> () returnType:<unbound IrClassSymbolImpl>
      BLOCK_BODY
        VAR name:list type:<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>?> [val]
          CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>?> origin=null
            <1>: <unbound IrClassSymbolImpl>?
            1: VARARG type=<unbound IrClassSymbolImpl><out <unbound IrClassSymbolImpl>?> varargElementType=<unbound IrClassSymbolImpl>?
              CONST String type=<unbound IrClassSymbolImpl> value="FAIL"
        CALL 'public final fun foo (list: <unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>?>, condition: <unbound IrClassSymbolImpl>): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
          list: GET_VAR 'val list: <unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>?> [val] declared in <root>.box' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>?> origin=null
          condition: CONST Boolean type=<unbound IrClassSymbolImpl> value=true
        CALL 'public final fun foo (list: <unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>?>, condition: <unbound IrClassSymbolImpl>): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
          list: GET_VAR 'val list: <unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>?> [val] declared in <root>.box' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>?> origin=null
          condition: CONST Boolean type=<unbound IrClassSymbolImpl> value=false
        RETURN type=<unbound IrClassSymbolImpl> from='public final fun box (): <unbound IrClassSymbolImpl> declared in <root>'
          TYPE_OP type=<unbound IrClassSymbolImpl> origin=CAST typeOperand=<unbound IrClassSymbolImpl>
            CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl>? origin=GET_ARRAY_ELEMENT
              $this: GET_VAR 'val list: <unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>?> [val] declared in <root>.box' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>?> origin=null
              1: CONST Int type=<unbound IrClassSymbolImpl> value=0
