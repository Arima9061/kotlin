library {
  // module name: <main>

  library fragment {
    // package name: <root>

    // class name: NotEmptyMap

    private final object NotEmptyMap : kotlin/collections/MutableMap<kotlin/Any, kotlin/Int> {

      private constructor()

      public open fun clear(): kotlin/Unit

      public open fun containsKey(key: kotlin/Any): kotlin/Boolean

      public open fun containsValue(value: kotlin/Int): kotlin/Boolean

      public open operator fun get(key: kotlin/Any): kotlin/Int

      public open fun isEmpty(): kotlin/Boolean

      public open fun put(key: kotlin/Any, value: kotlin/Int): kotlin/Int?

      public open fun putAll(from: kotlin/collections/Map<out kotlin/Any, kotlin/Int>): kotlin/Unit

      public open fun remove(key: kotlin/Any): kotlin/Int

      public open val entries: kotlin/collections/MutableSet<kotlin/collections/MutableMap.MutableEntry<kotlin/Any, kotlin/Int>>
        public open /* non-default */ get

      public open val keys: kotlin/collections/MutableSet<kotlin/Any>
        public open /* non-default */ get

      public open val size: kotlin/Int
        public open /* non-default */ get

      public open val values: kotlin/collections/MutableCollection<kotlin/Int>
        public open /* non-default */ get
    }

    package {

      public final fun box(): kotlin/String
    }
  }
}
