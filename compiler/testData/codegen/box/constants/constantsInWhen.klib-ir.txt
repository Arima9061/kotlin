MODULE_FRAGMENT name:<main>
  FILE fqName:<root> fileName:/constantsInWhen.kt
    FUN name:test signature:/test|test(kotlin.Boolean;kotlin.Int){}[0] visibility:public modality:FINAL <> (b:<unbound IrClassSymbolImpl>, i:<unbound IrClassSymbolImpl>) returnType:<unbound IrClassSymbolImpl>
      VALUE_PARAMETER name:b index:0 type:<unbound IrClassSymbolImpl>
      VALUE_PARAMETER name:i index:1 type:<unbound IrClassSymbolImpl>
      BLOCK_BODY
        TYPE_OP type=<unbound IrClassSymbolImpl> origin=IMPLICIT_COERCION_TO_UNIT typeOperand=<unbound IrClassSymbolImpl>
          WHEN type=<unbound IrClassSymbolImpl>? origin=IF
            BRANCH
              if: GET_VAR 'b: <unbound IrClassSymbolImpl> declared in <root>.test' type=<unbound IrClassSymbolImpl> origin=null
              then: BLOCK type=<unbound IrClassSymbolImpl>? origin=null
                BLOCK type=<unbound IrClassSymbolImpl>? origin=WHEN
                  VAR IR_TEMPORARY_VARIABLE name:tmp0_subject type:<unbound IrClassSymbolImpl> [val]
                    GET_VAR 'i: <unbound IrClassSymbolImpl> declared in <root>.test' type=<unbound IrClassSymbolImpl> origin=null
                  WHEN type=<unbound IrClassSymbolImpl>? origin=WHEN
                    BRANCH
                      if: CALL 'public final fun EQEQ (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EQEQ
                        arg0: GET_VAR 'val tmp0_subject: <unbound IrClassSymbolImpl> [val] declared in <root>.test' type=<unbound IrClassSymbolImpl> origin=null
                        arg1: CONST Int type=<unbound IrClassSymbolImpl> value=0
                      then: CALL 'public final fun foo (i: <unbound IrClassSymbolImpl>): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
                        i: CONST Int type=<unbound IrClassSymbolImpl> value=1
                    BRANCH
                      if: CONST Boolean type=<unbound IrClassSymbolImpl> value=true
                      then: CONST Null type=<unbound IrClassSymbolImpl>? value=null
            BRANCH
              if: CONST Boolean type=<unbound IrClassSymbolImpl> value=true
              then: CONST Null type=<unbound IrClassSymbolImpl>? value=null
    FUN name:foo signature:/foo|foo(kotlin.Int){}[0] visibility:public modality:FINAL <> (i:<unbound IrClassSymbolImpl>) returnType:<unbound IrClassSymbolImpl>
      VALUE_PARAMETER name:i index:0 type:<unbound IrClassSymbolImpl>
      BLOCK_BODY
        RETURN type=<unbound IrClassSymbolImpl> from='public final fun foo (i: <unbound IrClassSymbolImpl>): <unbound IrClassSymbolImpl> declared in <root>'
          GET_VAR 'i: <unbound IrClassSymbolImpl> declared in <root>.foo' type=<unbound IrClassSymbolImpl> origin=null
    FUN name:box signature:/box|box(){}[0] visibility:public modality:FINAL <> () returnType:<unbound IrClassSymbolImpl>
      BLOCK_BODY
        CALL 'public final fun test (b: <unbound IrClassSymbolImpl>, i: <unbound IrClassSymbolImpl>): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
          b: CONST Boolean type=<unbound IrClassSymbolImpl> value=true
          i: CONST Int type=<unbound IrClassSymbolImpl> value=1
        RETURN type=<unbound IrClassSymbolImpl> from='public final fun box (): <unbound IrClassSymbolImpl> declared in <root>'
          CONST String type=<unbound IrClassSymbolImpl> value="OK"
