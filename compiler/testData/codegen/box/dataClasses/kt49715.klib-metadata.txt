library {
  // module name: <main>

  library fragment {
    // package name: <root>

    // class name: A
    // class name: B

    public abstract interface A : kotlin/Any {

      public open fun kotlin/Any.toString(): kotlin/String
    }

    public final data class B : A {

      public constructor(x: kotlin/Int)

      public final /* synthesized */ operator fun component1(): kotlin/Int

      public final /* synthesized */ fun copy(x: kotlin/Int /* = ... */): B

      public open /* synthesized */ operator fun equals(other: kotlin/Any?): kotlin/Boolean

      public open /* synthesized */ fun hashCode(): kotlin/Int

      public final fun kotlin/Any.hi(): kotlin/String

      public open /* synthesized */ fun toString(): kotlin/String

      public final val x: kotlin/Int
        public final get
    }

    package {

      public final fun box(): kotlin/String
    }
  }
}
