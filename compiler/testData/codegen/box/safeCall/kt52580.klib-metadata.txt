library {
  // module name: <main>

  library fragment {
    // package name: <root>

    // class name: Base
    // class name: BaseImpl
    // class name: Derived

    public abstract interface Base : kotlin/Any {

      public abstract val a: kotlin/String
        public abstract get
    }

    public final class BaseImpl : Base {

      public constructor(a: kotlin/String)

      public open val a: kotlin/String
        public open get
    }

    public abstract interface Derived : Base {

      public abstract val a: kotlin/String
        public abstract get

      public abstract val b: kotlin/Int
        public abstract get
    }

    package {

      public final fun box(): kotlin/String

      public final fun consume(s1: kotlin/String, s2: kotlin/String?, s3: kotlin/String): kotlin/String

      public final fun test(base: Base): kotlin/String
    }
  }
}
