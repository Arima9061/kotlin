MODULE_FRAGMENT name:<main>
  FILE fqName:<root> fileName:/comparable.kt
    CLASS INTERFACE name:A signature:/A|null[0] modality:ABSTRACT visibility:public superTypes:[<unbound IrClassSymbolImpl><<root>.A>]
      $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:<root>.A
    CLASS CLASS name:B signature:/B|null[0] modality:FINAL visibility:public superTypes:[<root>.A]
      $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:<root>.B
      CONSTRUCTOR signature:/B.<init>|<init>(kotlin.Int){}[0] visibility:public <> (x:<unbound IrClassSymbolImpl>) returnType:<root>.B [primary]
        VALUE_PARAMETER name:x index:0 type:<unbound IrClassSymbolImpl>
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL 'UNBOUND IrConstructorSymbolImpl'
          INSTANCE_INITIALIZER_CALL classDescriptor='CLASS CLASS name:B signature:/B|null[0] modality:FINAL visibility:public superTypes:[<root>.A]'
      PROPERTY name:x signature:/B.x|{}x[0] visibility:public modality:FINAL [val]
        FIELD PROPERTY_BACKING_FIELD name:x signature:[ /B.x|{}x[0] <- Local[<BF>|FIELD PROPERTY_BACKING_FIELD name:x type:kotlin.Int visibility:private [final]] ] type:<unbound IrClassSymbolImpl> visibility:private [final]
          EXPRESSION_BODY
            GET_VAR 'x: <unbound IrClassSymbolImpl> declared in <root>.B.<init>' type=<unbound IrClassSymbolImpl> origin=INITIALIZE_PROPERTY_FROM_PARAMETER
        FUN DEFAULT_PROPERTY_ACCESSOR name:<get-x> signature:/B.x.<get-x>|<get-x>(){}[0] visibility:public modality:FINAL <> ($this:<root>.B) returnType:<unbound IrClassSymbolImpl>
          correspondingProperty: PROPERTY name:x signature:/B.x|{}x[0] visibility:public modality:FINAL [val]
          $this: VALUE_PARAMETER name:<this> type:<root>.B
          BLOCK_BODY
            RETURN type=<unbound IrClassSymbolImpl> from='public final fun <get-x> (): <unbound IrClassSymbolImpl> declared in <root>.B'
              GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:x signature:[ /B.x|{}x[0] <- Local[<BF>|FIELD PROPERTY_BACKING_FIELD name:x type:kotlin.Int visibility:private [final]] ] type:<unbound IrClassSymbolImpl> visibility:private [final]' type=<unbound IrClassSymbolImpl> origin=null
                receiver: GET_VAR '<this>: <root>.B declared in <root>.B.<get-x>' type=<root>.B origin=null
      FUN name:compareTo signature:/B.compareTo|compareTo(A){}[0] visibility:public modality:OPEN <> ($this:<root>.B, other:<root>.A) returnType:<unbound IrClassSymbolImpl> [operator]
        overridden:
          UNBOUND IrSimpleFunctionSymbolImpl
        $this: VALUE_PARAMETER name:<this> type:<root>.B
        VALUE_PARAMETER name:other index:0 type:<root>.A
        BLOCK_BODY
          RETURN type=<unbound IrClassSymbolImpl> from='public open fun compareTo (other: <root>.A): <unbound IrClassSymbolImpl> [operator] declared in <root>.B'
            CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
              $this: CALL 'public final fun <get-x> (): <unbound IrClassSymbolImpl> declared in <root>.B' type=<unbound IrClassSymbolImpl> origin=GET_PROPERTY
                $this: GET_VAR '<this>: <root>.B declared in <root>.B.compareTo' type=<root>.B origin=null
              1: CALL 'public final fun <get-x> (): <unbound IrClassSymbolImpl> declared in <root>.B' type=<unbound IrClassSymbolImpl> origin=GET_PROPERTY
                $this: TYPE_OP type=<root>.B origin=CAST typeOperand=<root>.B
                  GET_VAR 'other: <root>.A declared in <root>.B.compareTo' type=<root>.A origin=null
    FUN name:checkLess signature:/checkLess|checkLess(A;A){}[0] visibility:public modality:FINAL <> (x:<root>.A, y:<root>.A) returnType:<unbound IrClassSymbolImpl>
      VALUE_PARAMETER name:x index:0 type:<root>.A
      VALUE_PARAMETER name:y index:1 type:<root>.A
      BLOCK_BODY
        RETURN type=<unbound IrClassSymbolImpl> from='public final fun checkLess (x: <root>.A, y: <root>.A): <unbound IrClassSymbolImpl> declared in <root>'
          WHEN type=<unbound IrClassSymbolImpl> origin=WHEN
            BRANCH
              if: CALL 'public final fun greaterOrEqual (arg0: <unbound IrClassSymbolImpl>, arg1: <unbound IrClassSymbolImpl>): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=GTEQ
                arg0: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=GTEQ
                  $this: GET_VAR 'x: <root>.A declared in <root>.checkLess' type=<root>.A origin=null
                  1: GET_VAR 'y: <root>.A declared in <root>.checkLess' type=<root>.A origin=null
                arg1: CONST Int type=<unbound IrClassSymbolImpl> value=0
              then: STRING_CONCATENATION type=<unbound IrClassSymbolImpl>
                CONST String type=<unbound IrClassSymbolImpl> value="Fail "
                GET_VAR 'x: <root>.A declared in <root>.checkLess' type=<root>.A origin=null
                CONST String type=<unbound IrClassSymbolImpl> value=" >= "
                GET_VAR 'y: <root>.A declared in <root>.checkLess' type=<root>.A origin=null
            BRANCH
              if: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
                $this: CALL 'public final fun less (arg0: <unbound IrClassSymbolImpl>, arg1: <unbound IrClassSymbolImpl>): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=LT
                  arg0: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=LT
                    $this: GET_VAR 'x: <root>.A declared in <root>.checkLess' type=<root>.A origin=null
                    1: GET_VAR 'y: <root>.A declared in <root>.checkLess' type=<root>.A origin=null
                  arg1: CONST Int type=<unbound IrClassSymbolImpl> value=0
              then: STRING_CONCATENATION type=<unbound IrClassSymbolImpl>
                CONST String type=<unbound IrClassSymbolImpl> value="Fail !("
                GET_VAR 'x: <root>.A declared in <root>.checkLess' type=<root>.A origin=null
                CONST String type=<unbound IrClassSymbolImpl> value=" < "
                GET_VAR 'y: <root>.A declared in <root>.checkLess' type=<root>.A origin=null
                CONST String type=<unbound IrClassSymbolImpl> value=")"
            BRANCH
              if: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
                $this: CALL 'public final fun lessOrEqual (arg0: <unbound IrClassSymbolImpl>, arg1: <unbound IrClassSymbolImpl>): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=LTEQ
                  arg0: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=LTEQ
                    $this: GET_VAR 'x: <root>.A declared in <root>.checkLess' type=<root>.A origin=null
                    1: GET_VAR 'y: <root>.A declared in <root>.checkLess' type=<root>.A origin=null
                  arg1: CONST Int type=<unbound IrClassSymbolImpl> value=0
              then: STRING_CONCATENATION type=<unbound IrClassSymbolImpl>
                CONST String type=<unbound IrClassSymbolImpl> value="Fail !("
                GET_VAR 'x: <root>.A declared in <root>.checkLess' type=<root>.A origin=null
                CONST String type=<unbound IrClassSymbolImpl> value=" <= "
                GET_VAR 'y: <root>.A declared in <root>.checkLess' type=<root>.A origin=null
                CONST String type=<unbound IrClassSymbolImpl> value=")"
            BRANCH
              if: CALL 'public final fun greater (arg0: <unbound IrClassSymbolImpl>, arg1: <unbound IrClassSymbolImpl>): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=GT
                arg0: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=GT
                  $this: GET_VAR 'x: <root>.A declared in <root>.checkLess' type=<root>.A origin=null
                  1: GET_VAR 'y: <root>.A declared in <root>.checkLess' type=<root>.A origin=null
                arg1: CONST Int type=<unbound IrClassSymbolImpl> value=0
              then: STRING_CONCATENATION type=<unbound IrClassSymbolImpl>
                CONST String type=<unbound IrClassSymbolImpl> value="Fail "
                GET_VAR 'x: <root>.A declared in <root>.checkLess' type=<root>.A origin=null
                CONST String type=<unbound IrClassSymbolImpl> value=" > "
                GET_VAR 'y: <root>.A declared in <root>.checkLess' type=<root>.A origin=null
            BRANCH
              if: CALL 'public final fun greaterOrEqual (arg0: <unbound IrClassSymbolImpl>, arg1: <unbound IrClassSymbolImpl>): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=GTEQ
                arg0: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
                  $this: GET_VAR 'x: <root>.A declared in <root>.checkLess' type=<root>.A origin=null
                  1: GET_VAR 'y: <root>.A declared in <root>.checkLess' type=<root>.A origin=null
                arg1: CONST Int type=<unbound IrClassSymbolImpl> value=0
              then: STRING_CONCATENATION type=<unbound IrClassSymbolImpl>
                CONST String type=<unbound IrClassSymbolImpl> value="Fail "
                GET_VAR 'x: <root>.A declared in <root>.checkLess' type=<root>.A origin=null
                CONST String type=<unbound IrClassSymbolImpl> value=".compareTo("
                GET_VAR 'y: <root>.A declared in <root>.checkLess' type=<root>.A origin=null
                CONST String type=<unbound IrClassSymbolImpl> value=") >= 0"
            BRANCH
              if: CONST Boolean type=<unbound IrClassSymbolImpl> value=true
              then: CONST String type=<unbound IrClassSymbolImpl> value="OK"
    FUN name:box signature:/box|box(){}[0] visibility:public modality:FINAL <> () returnType:<unbound IrClassSymbolImpl>
      BLOCK_BODY
        RETURN type=<unbound IrClassSymbolImpl> from='public final fun box (): <unbound IrClassSymbolImpl> declared in <root>'
          CALL 'public final fun checkLess (x: <root>.A, y: <root>.A): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
            x: CONSTRUCTOR_CALL 'public constructor <init> (x: <unbound IrClassSymbolImpl>) [primary] declared in <root>.B' type=<root>.B origin=null
              x: CONST Int type=<unbound IrClassSymbolImpl> value=0
            y: CONSTRUCTOR_CALL 'public constructor <init> (x: <unbound IrClassSymbolImpl>) [primary] declared in <root>.B' type=<root>.B origin=null
              x: CONST Int type=<unbound IrClassSymbolImpl> value=1
