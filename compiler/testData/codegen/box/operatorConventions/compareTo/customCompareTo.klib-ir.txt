MODULE_FRAGMENT name:<main>
  FILE fqName:<root> fileName:/customCompareTo.kt
    PROPERTY name:longCompareToInvocations signature:/longCompareToInvocations|{}longCompareToInvocations[0] visibility:public modality:FINAL [var]
      FIELD PROPERTY_BACKING_FIELD name:longCompareToInvocations signature:[ /longCompareToInvocations|{}longCompareToInvocations[0] <- Local[<BF>|FIELD PROPERTY_BACKING_FIELD name:longCompareToInvocations type:kotlin.Int visibility:private [static]] ] type:<unbound IrClassSymbolImpl> visibility:private [static]
        EXPRESSION_BODY
          CONST Int type=<unbound IrClassSymbolImpl> value=0
      FUN DEFAULT_PROPERTY_ACCESSOR name:<get-longCompareToInvocations> signature:/longCompareToInvocations.<get-longCompareToInvocations>|<get-longCompareToInvocations>(){}[0] visibility:public modality:FINAL <> () returnType:<unbound IrClassSymbolImpl>
        correspondingProperty: PROPERTY name:longCompareToInvocations signature:/longCompareToInvocations|{}longCompareToInvocations[0] visibility:public modality:FINAL [var]
        BLOCK_BODY
          RETURN type=<unbound IrClassSymbolImpl> from='public final fun <get-longCompareToInvocations> (): <unbound IrClassSymbolImpl> declared in <root>'
            GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:longCompareToInvocations signature:[ /longCompareToInvocations|{}longCompareToInvocations[0] <- Local[<BF>|FIELD PROPERTY_BACKING_FIELD name:longCompareToInvocations type:kotlin.Int visibility:private [static]] ] type:<unbound IrClassSymbolImpl> visibility:private [static]' type=<unbound IrClassSymbolImpl> origin=null
      FUN DEFAULT_PROPERTY_ACCESSOR name:<set-longCompareToInvocations> signature:/longCompareToInvocations.<set-longCompareToInvocations>|<set-longCompareToInvocations>(kotlin.Int){}[0] visibility:public modality:FINAL <> (<set-?>:<unbound IrClassSymbolImpl>) returnType:<unbound IrClassSymbolImpl>
        correspondingProperty: PROPERTY name:longCompareToInvocations signature:/longCompareToInvocations|{}longCompareToInvocations[0] visibility:public modality:FINAL [var]
        VALUE_PARAMETER name:<set-?> index:0 type:<unbound IrClassSymbolImpl>
        BLOCK_BODY
          SET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:longCompareToInvocations signature:[ /longCompareToInvocations|{}longCompareToInvocations[0] <- Local[<BF>|FIELD PROPERTY_BACKING_FIELD name:longCompareToInvocations type:kotlin.Int visibility:private [static]] ] type:<unbound IrClassSymbolImpl> visibility:private [static]' type=<unbound IrClassSymbolImpl> origin=null
            value: GET_VAR '<set-?>: <unbound IrClassSymbolImpl> declared in <root>.<set-longCompareToInvocations>' type=<unbound IrClassSymbolImpl> origin=null
    PROPERTY name:doubleCompareToInvocations signature:/doubleCompareToInvocations|{}doubleCompareToInvocations[0] visibility:public modality:FINAL [var]
      FIELD PROPERTY_BACKING_FIELD name:doubleCompareToInvocations signature:[ /doubleCompareToInvocations|{}doubleCompareToInvocations[0] <- Local[<BF>|FIELD PROPERTY_BACKING_FIELD name:longCompareToInvocations type:kotlin.Int visibility:private [static]] ] type:<unbound IrClassSymbolImpl> visibility:private [static]
        EXPRESSION_BODY
          CONST Int type=<unbound IrClassSymbolImpl> value=0
      FUN DEFAULT_PROPERTY_ACCESSOR name:<get-doubleCompareToInvocations> signature:/doubleCompareToInvocations.<get-doubleCompareToInvocations>|<get-doubleCompareToInvocations>(){}[0] visibility:public modality:FINAL <> () returnType:<unbound IrClassSymbolImpl>
        correspondingProperty: PROPERTY name:doubleCompareToInvocations signature:/doubleCompareToInvocations|{}doubleCompareToInvocations[0] visibility:public modality:FINAL [var]
        BLOCK_BODY
          RETURN type=<unbound IrClassSymbolImpl> from='public final fun <get-doubleCompareToInvocations> (): <unbound IrClassSymbolImpl> declared in <root>'
            GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:doubleCompareToInvocations signature:[ /doubleCompareToInvocations|{}doubleCompareToInvocations[0] <- Local[<BF>|FIELD PROPERTY_BACKING_FIELD name:longCompareToInvocations type:kotlin.Int visibility:private [static]] ] type:<unbound IrClassSymbolImpl> visibility:private [static]' type=<unbound IrClassSymbolImpl> origin=null
      FUN DEFAULT_PROPERTY_ACCESSOR name:<set-doubleCompareToInvocations> signature:/doubleCompareToInvocations.<set-doubleCompareToInvocations>|<set-doubleCompareToInvocations>(kotlin.Int){}[0] visibility:public modality:FINAL <> (<set-?>:<unbound IrClassSymbolImpl>) returnType:<unbound IrClassSymbolImpl>
        correspondingProperty: PROPERTY name:doubleCompareToInvocations signature:/doubleCompareToInvocations|{}doubleCompareToInvocations[0] visibility:public modality:FINAL [var]
        VALUE_PARAMETER name:<set-?> index:0 type:<unbound IrClassSymbolImpl>
        BLOCK_BODY
          SET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:doubleCompareToInvocations signature:[ /doubleCompareToInvocations|{}doubleCompareToInvocations[0] <- Local[<BF>|FIELD PROPERTY_BACKING_FIELD name:longCompareToInvocations type:kotlin.Int visibility:private [static]] ] type:<unbound IrClassSymbolImpl> visibility:private [static]' type=<unbound IrClassSymbolImpl> origin=null
            value: GET_VAR '<set-?>: <unbound IrClassSymbolImpl> declared in <root>.<set-doubleCompareToInvocations>' type=<unbound IrClassSymbolImpl> origin=null
    FUN name:compareTo signature:[ File '/customCompareTo.kt' <- /compareTo|compareTo@kotlin.Long?(kotlin.Long?){}[0] ] visibility:private modality:FINAL <> ($receiver:<unbound IrClassSymbolImpl>?, other:<unbound IrClassSymbolImpl>?) returnType:<unbound IrClassSymbolImpl> [operator]
      $receiver: VALUE_PARAMETER name:<this> type:<unbound IrClassSymbolImpl>?
      VALUE_PARAMETER name:other index:0 type:<unbound IrClassSymbolImpl>?
      BLOCK_BODY
        TYPE_OP type=<unbound IrClassSymbolImpl> origin=IMPLICIT_COERCION_TO_UNIT typeOperand=<unbound IrClassSymbolImpl>
          BLOCK type=<unbound IrClassSymbolImpl> origin=POSTFIX_INCR
            VAR IR_TEMPORARY_VARIABLE name:<unary> type:<unbound IrClassSymbolImpl> [val]
              CALL 'public final fun <get-longCompareToInvocations> (): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=POSTFIX_INCR
            CALL 'public final fun <set-longCompareToInvocations> (<set-?>: <unbound IrClassSymbolImpl>): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=POSTFIX_INCR
              <set-?>: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=POSTFIX_INCR
                $this: GET_VAR 'val <unary>: <unbound IrClassSymbolImpl> [val] declared in <root>.compareTo' type=<unbound IrClassSymbolImpl> origin=null
            GET_VAR 'val <unary>: <unbound IrClassSymbolImpl> [val] declared in <root>.compareTo' type=<unbound IrClassSymbolImpl> origin=null
        VAR name:diff type:<unbound IrClassSymbolImpl> [val]
          CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=MINUS
            $this: BLOCK type=<unbound IrClassSymbolImpl> origin=ELVIS
              VAR IR_TEMPORARY_VARIABLE name:tmp0_elvis_lhs type:<unbound IrClassSymbolImpl>? [val]
                GET_VAR '<this>: <unbound IrClassSymbolImpl>? declared in <root>.compareTo' type=<unbound IrClassSymbolImpl>? origin=null
              WHEN type=<unbound IrClassSymbolImpl> origin=null
                BRANCH
                  if: CALL 'public final fun EQEQ (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EQEQ
                    arg0: GET_VAR 'val tmp0_elvis_lhs: <unbound IrClassSymbolImpl>? [val] declared in <root>.compareTo' type=<unbound IrClassSymbolImpl>? origin=null
                    arg1: CONST Null type=<unbound IrClassSymbolImpl>? value=null
                  then: CONST Long type=<unbound IrClassSymbolImpl> value=0
                BRANCH
                  if: CONST Boolean type=<unbound IrClassSymbolImpl> value=true
                  then: GET_VAR 'val tmp0_elvis_lhs: <unbound IrClassSymbolImpl>? [val] declared in <root>.compareTo' type=<unbound IrClassSymbolImpl>? origin=null
            1: BLOCK type=<unbound IrClassSymbolImpl> origin=ELVIS
              VAR IR_TEMPORARY_VARIABLE name:tmp1_elvis_lhs type:<unbound IrClassSymbolImpl>? [val]
                GET_VAR 'other: <unbound IrClassSymbolImpl>? declared in <root>.compareTo' type=<unbound IrClassSymbolImpl>? origin=null
              WHEN type=<unbound IrClassSymbolImpl> origin=null
                BRANCH
                  if: CALL 'public final fun EQEQ (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EQEQ
                    arg0: GET_VAR 'val tmp1_elvis_lhs: <unbound IrClassSymbolImpl>? [val] declared in <root>.compareTo' type=<unbound IrClassSymbolImpl>? origin=null
                    arg1: CONST Null type=<unbound IrClassSymbolImpl>? value=null
                  then: CONST Long type=<unbound IrClassSymbolImpl> value=0
                BRANCH
                  if: CONST Boolean type=<unbound IrClassSymbolImpl> value=true
                  then: GET_VAR 'val tmp1_elvis_lhs: <unbound IrClassSymbolImpl>? [val] declared in <root>.compareTo' type=<unbound IrClassSymbolImpl>? origin=null
        RETURN type=<unbound IrClassSymbolImpl> from='private final fun compareTo (other: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> [operator] declared in <root>'
          WHEN type=<unbound IrClassSymbolImpl> origin=WHEN
            BRANCH
              if: CALL 'public final fun less (arg0: <unbound IrClassSymbolImpl>, arg1: <unbound IrClassSymbolImpl>): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=LT
                arg0: GET_VAR 'val diff: <unbound IrClassSymbolImpl> [val] declared in <root>.compareTo' type=<unbound IrClassSymbolImpl> origin=null
                arg1: CONST Long type=<unbound IrClassSymbolImpl> value=0
              then: CONST Int type=<unbound IrClassSymbolImpl> value=-1
            BRANCH
              if: CALL 'public final fun greater (arg0: <unbound IrClassSymbolImpl>, arg1: <unbound IrClassSymbolImpl>): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=GT
                arg0: GET_VAR 'val diff: <unbound IrClassSymbolImpl> [val] declared in <root>.compareTo' type=<unbound IrClassSymbolImpl> origin=null
                arg1: CONST Long type=<unbound IrClassSymbolImpl> value=0
              then: CONST Int type=<unbound IrClassSymbolImpl> value=1
            BRANCH
              if: CONST Boolean type=<unbound IrClassSymbolImpl> value=true
              then: CONST Int type=<unbound IrClassSymbolImpl> value=0
    FUN name:compareTo signature:[ File '/customCompareTo.kt' <- /compareTo|compareTo@kotlin.Double?(kotlin.Double?){}[0] ] visibility:private modality:FINAL <> ($receiver:<unbound IrClassSymbolImpl>?, other:<unbound IrClassSymbolImpl>?) returnType:<unbound IrClassSymbolImpl> [operator]
      $receiver: VALUE_PARAMETER name:<this> type:<unbound IrClassSymbolImpl>?
      VALUE_PARAMETER name:other index:0 type:<unbound IrClassSymbolImpl>?
      BLOCK_BODY
        TYPE_OP type=<unbound IrClassSymbolImpl> origin=IMPLICIT_COERCION_TO_UNIT typeOperand=<unbound IrClassSymbolImpl>
          BLOCK type=<unbound IrClassSymbolImpl> origin=POSTFIX_INCR
            VAR IR_TEMPORARY_VARIABLE name:<unary> type:<unbound IrClassSymbolImpl> [val]
              CALL 'public final fun <get-doubleCompareToInvocations> (): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=POSTFIX_INCR
            CALL 'public final fun <set-doubleCompareToInvocations> (<set-?>: <unbound IrClassSymbolImpl>): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=POSTFIX_INCR
              <set-?>: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=POSTFIX_INCR
                $this: GET_VAR 'val <unary>: <unbound IrClassSymbolImpl> [val] declared in <root>.compareTo' type=<unbound IrClassSymbolImpl> origin=null
            GET_VAR 'val <unary>: <unbound IrClassSymbolImpl> [val] declared in <root>.compareTo' type=<unbound IrClassSymbolImpl> origin=null
        VAR name:diff type:<unbound IrClassSymbolImpl> [val]
          CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=MINUS
            $this: BLOCK type=<unbound IrClassSymbolImpl> origin=ELVIS
              VAR IR_TEMPORARY_VARIABLE name:tmp0_elvis_lhs type:<unbound IrClassSymbolImpl>? [val]
                GET_VAR '<this>: <unbound IrClassSymbolImpl>? declared in <root>.compareTo' type=<unbound IrClassSymbolImpl>? origin=null
              WHEN type=<unbound IrClassSymbolImpl> origin=null
                BRANCH
                  if: CALL 'public final fun EQEQ (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EQEQ
                    arg0: GET_VAR 'val tmp0_elvis_lhs: <unbound IrClassSymbolImpl>? [val] declared in <root>.compareTo' type=<unbound IrClassSymbolImpl>? origin=null
                    arg1: CONST Null type=<unbound IrClassSymbolImpl>? value=null
                  then: CONST Double type=<unbound IrClassSymbolImpl> value=0.0
                BRANCH
                  if: CONST Boolean type=<unbound IrClassSymbolImpl> value=true
                  then: GET_VAR 'val tmp0_elvis_lhs: <unbound IrClassSymbolImpl>? [val] declared in <root>.compareTo' type=<unbound IrClassSymbolImpl>? origin=null
            1: BLOCK type=<unbound IrClassSymbolImpl> origin=ELVIS
              VAR IR_TEMPORARY_VARIABLE name:tmp1_elvis_lhs type:<unbound IrClassSymbolImpl>? [val]
                GET_VAR 'other: <unbound IrClassSymbolImpl>? declared in <root>.compareTo' type=<unbound IrClassSymbolImpl>? origin=null
              WHEN type=<unbound IrClassSymbolImpl> origin=null
                BRANCH
                  if: CALL 'public final fun EQEQ (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EQEQ
                    arg0: GET_VAR 'val tmp1_elvis_lhs: <unbound IrClassSymbolImpl>? [val] declared in <root>.compareTo' type=<unbound IrClassSymbolImpl>? origin=null
                    arg1: CONST Null type=<unbound IrClassSymbolImpl>? value=null
                  then: CONST Double type=<unbound IrClassSymbolImpl> value=0.0
                BRANCH
                  if: CONST Boolean type=<unbound IrClassSymbolImpl> value=true
                  then: GET_VAR 'val tmp1_elvis_lhs: <unbound IrClassSymbolImpl>? [val] declared in <root>.compareTo' type=<unbound IrClassSymbolImpl>? origin=null
        RETURN type=<unbound IrClassSymbolImpl> from='private final fun compareTo (other: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> [operator] declared in <root>'
          WHEN type=<unbound IrClassSymbolImpl> origin=WHEN
            BRANCH
              if: CALL 'public final fun less (arg0: <unbound IrClassSymbolImpl>, arg1: <unbound IrClassSymbolImpl>): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=LT
                arg0: GET_VAR 'val diff: <unbound IrClassSymbolImpl> [val] declared in <root>.compareTo' type=<unbound IrClassSymbolImpl> origin=null
                arg1: CONST Double type=<unbound IrClassSymbolImpl> value=0.0
              then: CONST Int type=<unbound IrClassSymbolImpl> value=-1
            BRANCH
              if: CALL 'public final fun greater (arg0: <unbound IrClassSymbolImpl>, arg1: <unbound IrClassSymbolImpl>): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=GT
                arg0: GET_VAR 'val diff: <unbound IrClassSymbolImpl> [val] declared in <root>.compareTo' type=<unbound IrClassSymbolImpl> origin=null
                arg1: CONST Double type=<unbound IrClassSymbolImpl> value=0.0
              then: CONST Int type=<unbound IrClassSymbolImpl> value=1
            BRANCH
              if: CONST Boolean type=<unbound IrClassSymbolImpl> value=true
              then: CONST Int type=<unbound IrClassSymbolImpl> value=0
    FUN name:checkLong signature:/checkLong|checkLong(){}[0] visibility:public modality:FINAL <> () returnType:<unbound IrClassSymbolImpl>?
      BLOCK_BODY
        VAR name:a type:<unbound IrClassSymbolImpl>? [val]
          CONST Null type=<unbound IrClassSymbolImpl>? value=null
        VAR name:b type:<unbound IrClassSymbolImpl>? [val]
          CONST Long type=<unbound IrClassSymbolImpl> value=42
        WHEN type=<unbound IrClassSymbolImpl> origin=IF
          BRANCH
            if: CALL 'public final fun greater (arg0: <unbound IrClassSymbolImpl>, arg1: <unbound IrClassSymbolImpl>): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=GT
              arg0: CALL 'private final fun compareTo (other: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> [operator] declared in <root>' type=<unbound IrClassSymbolImpl> origin=GT
                $receiver: GET_VAR 'val a: <unbound IrClassSymbolImpl>? [val] declared in <root>.checkLong' type=<unbound IrClassSymbolImpl>? origin=null
                other: GET_VAR 'val b: <unbound IrClassSymbolImpl>? [val] declared in <root>.checkLong' type=<unbound IrClassSymbolImpl>? origin=null
              arg1: CONST Int type=<unbound IrClassSymbolImpl> value=0
            then: RETURN type=<unbound IrClassSymbolImpl> from='public final fun checkLong (): <unbound IrClassSymbolImpl>? declared in <root>'
              CONST String type=<unbound IrClassSymbolImpl> value="Fail Long >"
        WHEN type=<unbound IrClassSymbolImpl> origin=IF
          BRANCH
            if: CALL 'public final fun greaterOrEqual (arg0: <unbound IrClassSymbolImpl>, arg1: <unbound IrClassSymbolImpl>): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=GTEQ
              arg0: CALL 'private final fun compareTo (other: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> [operator] declared in <root>' type=<unbound IrClassSymbolImpl> origin=GTEQ
                $receiver: GET_VAR 'val a: <unbound IrClassSymbolImpl>? [val] declared in <root>.checkLong' type=<unbound IrClassSymbolImpl>? origin=null
                other: GET_VAR 'val b: <unbound IrClassSymbolImpl>? [val] declared in <root>.checkLong' type=<unbound IrClassSymbolImpl>? origin=null
              arg1: CONST Int type=<unbound IrClassSymbolImpl> value=0
            then: RETURN type=<unbound IrClassSymbolImpl> from='public final fun checkLong (): <unbound IrClassSymbolImpl>? declared in <root>'
              CONST String type=<unbound IrClassSymbolImpl> value="Fail Long >="
        WHEN type=<unbound IrClassSymbolImpl> origin=IF
          BRANCH
            if: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
              $this: CALL 'public final fun less (arg0: <unbound IrClassSymbolImpl>, arg1: <unbound IrClassSymbolImpl>): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=LT
                arg0: CALL 'private final fun compareTo (other: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> [operator] declared in <root>' type=<unbound IrClassSymbolImpl> origin=LT
                  $receiver: GET_VAR 'val a: <unbound IrClassSymbolImpl>? [val] declared in <root>.checkLong' type=<unbound IrClassSymbolImpl>? origin=null
                  other: GET_VAR 'val b: <unbound IrClassSymbolImpl>? [val] declared in <root>.checkLong' type=<unbound IrClassSymbolImpl>? origin=null
                arg1: CONST Int type=<unbound IrClassSymbolImpl> value=0
            then: RETURN type=<unbound IrClassSymbolImpl> from='public final fun checkLong (): <unbound IrClassSymbolImpl>? declared in <root>'
              CONST String type=<unbound IrClassSymbolImpl> value="Fail Long <"
        WHEN type=<unbound IrClassSymbolImpl> origin=IF
          BRANCH
            if: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
              $this: CALL 'public final fun lessOrEqual (arg0: <unbound IrClassSymbolImpl>, arg1: <unbound IrClassSymbolImpl>): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=LTEQ
                arg0: CALL 'private final fun compareTo (other: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> [operator] declared in <root>' type=<unbound IrClassSymbolImpl> origin=LTEQ
                  $receiver: GET_VAR 'val a: <unbound IrClassSymbolImpl>? [val] declared in <root>.checkLong' type=<unbound IrClassSymbolImpl>? origin=null
                  other: GET_VAR 'val b: <unbound IrClassSymbolImpl>? [val] declared in <root>.checkLong' type=<unbound IrClassSymbolImpl>? origin=null
                arg1: CONST Int type=<unbound IrClassSymbolImpl> value=0
            then: RETURN type=<unbound IrClassSymbolImpl> from='public final fun checkLong (): <unbound IrClassSymbolImpl>? declared in <root>'
              CONST String type=<unbound IrClassSymbolImpl> value="Fail Long <="
        WHEN type=<unbound IrClassSymbolImpl> origin=IF
          BRANCH
            if: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=EXCLEQ
              $this: CALL 'public final fun EQEQ (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EXCLEQ
                arg0: CALL 'public final fun <get-longCompareToInvocations> (): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=GET_PROPERTY
                arg1: CONST Int type=<unbound IrClassSymbolImpl> value=4
            then: RETURN type=<unbound IrClassSymbolImpl> from='public final fun checkLong (): <unbound IrClassSymbolImpl>? declared in <root>'
              STRING_CONCATENATION type=<unbound IrClassSymbolImpl>
                CONST String type=<unbound IrClassSymbolImpl> value="Fail: expected 4 compareTo invocations, but was "
                CALL 'public final fun <get-longCompareToInvocations> (): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=GET_PROPERTY
        RETURN type=<unbound IrClassSymbolImpl> from='public final fun checkLong (): <unbound IrClassSymbolImpl>? declared in <root>'
          CONST Null type=<unbound IrClassSymbolImpl>? value=null
    FUN name:checkDouble signature:/checkDouble|checkDouble(){}[0] visibility:public modality:FINAL <> () returnType:<unbound IrClassSymbolImpl>?
      BLOCK_BODY
        VAR name:a type:<unbound IrClassSymbolImpl>? [val]
          CONST Null type=<unbound IrClassSymbolImpl>? value=null
        VAR name:b type:<unbound IrClassSymbolImpl>? [val]
          CONST Double type=<unbound IrClassSymbolImpl> value=3.14
        WHEN type=<unbound IrClassSymbolImpl> origin=IF
          BRANCH
            if: CALL 'public final fun greater (arg0: <unbound IrClassSymbolImpl>, arg1: <unbound IrClassSymbolImpl>): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=GT
              arg0: CALL 'private final fun compareTo (other: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> [operator] declared in <root>' type=<unbound IrClassSymbolImpl> origin=GT
                $receiver: GET_VAR 'val a: <unbound IrClassSymbolImpl>? [val] declared in <root>.checkDouble' type=<unbound IrClassSymbolImpl>? origin=null
                other: GET_VAR 'val b: <unbound IrClassSymbolImpl>? [val] declared in <root>.checkDouble' type=<unbound IrClassSymbolImpl>? origin=null
              arg1: CONST Int type=<unbound IrClassSymbolImpl> value=0
            then: RETURN type=<unbound IrClassSymbolImpl> from='public final fun checkDouble (): <unbound IrClassSymbolImpl>? declared in <root>'
              CONST String type=<unbound IrClassSymbolImpl> value="Fail Double >"
        WHEN type=<unbound IrClassSymbolImpl> origin=IF
          BRANCH
            if: CALL 'public final fun greaterOrEqual (arg0: <unbound IrClassSymbolImpl>, arg1: <unbound IrClassSymbolImpl>): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=GTEQ
              arg0: CALL 'private final fun compareTo (other: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> [operator] declared in <root>' type=<unbound IrClassSymbolImpl> origin=GTEQ
                $receiver: GET_VAR 'val a: <unbound IrClassSymbolImpl>? [val] declared in <root>.checkDouble' type=<unbound IrClassSymbolImpl>? origin=null
                other: GET_VAR 'val b: <unbound IrClassSymbolImpl>? [val] declared in <root>.checkDouble' type=<unbound IrClassSymbolImpl>? origin=null
              arg1: CONST Int type=<unbound IrClassSymbolImpl> value=0
            then: RETURN type=<unbound IrClassSymbolImpl> from='public final fun checkDouble (): <unbound IrClassSymbolImpl>? declared in <root>'
              CONST String type=<unbound IrClassSymbolImpl> value="Fail Double >="
        WHEN type=<unbound IrClassSymbolImpl> origin=IF
          BRANCH
            if: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
              $this: CALL 'public final fun less (arg0: <unbound IrClassSymbolImpl>, arg1: <unbound IrClassSymbolImpl>): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=LT
                arg0: CALL 'private final fun compareTo (other: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> [operator] declared in <root>' type=<unbound IrClassSymbolImpl> origin=LT
                  $receiver: GET_VAR 'val a: <unbound IrClassSymbolImpl>? [val] declared in <root>.checkDouble' type=<unbound IrClassSymbolImpl>? origin=null
                  other: GET_VAR 'val b: <unbound IrClassSymbolImpl>? [val] declared in <root>.checkDouble' type=<unbound IrClassSymbolImpl>? origin=null
                arg1: CONST Int type=<unbound IrClassSymbolImpl> value=0
            then: RETURN type=<unbound IrClassSymbolImpl> from='public final fun checkDouble (): <unbound IrClassSymbolImpl>? declared in <root>'
              CONST String type=<unbound IrClassSymbolImpl> value="Fail Double <"
        WHEN type=<unbound IrClassSymbolImpl> origin=IF
          BRANCH
            if: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
              $this: CALL 'public final fun lessOrEqual (arg0: <unbound IrClassSymbolImpl>, arg1: <unbound IrClassSymbolImpl>): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=LTEQ
                arg0: CALL 'private final fun compareTo (other: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> [operator] declared in <root>' type=<unbound IrClassSymbolImpl> origin=LTEQ
                  $receiver: GET_VAR 'val a: <unbound IrClassSymbolImpl>? [val] declared in <root>.checkDouble' type=<unbound IrClassSymbolImpl>? origin=null
                  other: GET_VAR 'val b: <unbound IrClassSymbolImpl>? [val] declared in <root>.checkDouble' type=<unbound IrClassSymbolImpl>? origin=null
                arg1: CONST Int type=<unbound IrClassSymbolImpl> value=0
            then: RETURN type=<unbound IrClassSymbolImpl> from='public final fun checkDouble (): <unbound IrClassSymbolImpl>? declared in <root>'
              CONST String type=<unbound IrClassSymbolImpl> value="Fail Double <="
        WHEN type=<unbound IrClassSymbolImpl> origin=IF
          BRANCH
            if: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=EXCLEQ
              $this: CALL 'public final fun EQEQ (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EXCLEQ
                arg0: CALL 'public final fun <get-doubleCompareToInvocations> (): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=GET_PROPERTY
                arg1: CONST Int type=<unbound IrClassSymbolImpl> value=4
            then: RETURN type=<unbound IrClassSymbolImpl> from='public final fun checkDouble (): <unbound IrClassSymbolImpl>? declared in <root>'
              STRING_CONCATENATION type=<unbound IrClassSymbolImpl>
                CONST String type=<unbound IrClassSymbolImpl> value="Fail: expected 4 compareTo invocations, but was "
                CALL 'public final fun <get-doubleCompareToInvocations> (): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=GET_PROPERTY
        RETURN type=<unbound IrClassSymbolImpl> from='public final fun checkDouble (): <unbound IrClassSymbolImpl>? declared in <root>'
          CONST Null type=<unbound IrClassSymbolImpl>? value=null
    FUN name:box signature:/box|box(){}[0] visibility:public modality:FINAL <> () returnType:<unbound IrClassSymbolImpl>
      BLOCK_BODY
        TYPE_OP type=<unbound IrClassSymbolImpl> origin=IMPLICIT_COERCION_TO_UNIT typeOperand=<unbound IrClassSymbolImpl>
          BLOCK type=<unbound IrClassSymbolImpl>? origin=SAFE_CALL
            VAR IR_TEMPORARY_VARIABLE name:tmp0_safe_receiver type:<unbound IrClassSymbolImpl>? [val]
              CALL 'public final fun checkLong (): <unbound IrClassSymbolImpl>? declared in <root>' type=<unbound IrClassSymbolImpl>? origin=null
            WHEN type=<unbound IrClassSymbolImpl>? origin=null
              BRANCH
                if: CALL 'public final fun EQEQ (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EQEQ
                  arg0: GET_VAR 'val tmp0_safe_receiver: <unbound IrClassSymbolImpl>? [val] declared in <root>.box' type=<unbound IrClassSymbolImpl>? origin=null
                  arg1: CONST Null type=<unbound IrClassSymbolImpl>? value=null
                then: CONST Null type=<unbound IrClassSymbolImpl>? value=null
              BRANCH
                if: CONST Boolean type=<unbound IrClassSymbolImpl> value=true
                then: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
                  <1>: <unbound IrClassSymbolImpl>
                  <2>: <unbound IrClassSymbolImpl>
                  $receiver: GET_VAR 'val tmp0_safe_receiver: <unbound IrClassSymbolImpl>? [val] declared in <root>.box' type=<unbound IrClassSymbolImpl>? origin=null
                  1: FUN_EXPR type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>, <unbound IrClassSymbolImpl>> origin=LAMBDA
                    FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL <> (it:<unbound IrClassSymbolImpl>) returnType:<unbound IrClassSymbolImpl>
                      VALUE_PARAMETER name:it index:0 type:<unbound IrClassSymbolImpl>
                      BLOCK_BODY
                        RETURN type=<unbound IrClassSymbolImpl> from='public final fun box (): <unbound IrClassSymbolImpl> declared in <root>'
                          GET_VAR 'it: <unbound IrClassSymbolImpl> declared in <root>.box.<anonymous>' type=<unbound IrClassSymbolImpl> origin=null
        TYPE_OP type=<unbound IrClassSymbolImpl> origin=IMPLICIT_COERCION_TO_UNIT typeOperand=<unbound IrClassSymbolImpl>
          BLOCK type=<unbound IrClassSymbolImpl>? origin=SAFE_CALL
            VAR IR_TEMPORARY_VARIABLE name:tmp1_safe_receiver type:<unbound IrClassSymbolImpl>? [val]
              CALL 'public final fun checkDouble (): <unbound IrClassSymbolImpl>? declared in <root>' type=<unbound IrClassSymbolImpl>? origin=null
            WHEN type=<unbound IrClassSymbolImpl>? origin=null
              BRANCH
                if: CALL 'public final fun EQEQ (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EQEQ
                  arg0: GET_VAR 'val tmp1_safe_receiver: <unbound IrClassSymbolImpl>? [val] declared in <root>.box' type=<unbound IrClassSymbolImpl>? origin=null
                  arg1: CONST Null type=<unbound IrClassSymbolImpl>? value=null
                then: CONST Null type=<unbound IrClassSymbolImpl>? value=null
              BRANCH
                if: CONST Boolean type=<unbound IrClassSymbolImpl> value=true
                then: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
                  <1>: <unbound IrClassSymbolImpl>
                  <2>: <unbound IrClassSymbolImpl>
                  $receiver: GET_VAR 'val tmp1_safe_receiver: <unbound IrClassSymbolImpl>? [val] declared in <root>.box' type=<unbound IrClassSymbolImpl>? origin=null
                  1: FUN_EXPR type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>, <unbound IrClassSymbolImpl>> origin=LAMBDA
                    FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL <> (it:<unbound IrClassSymbolImpl>) returnType:<unbound IrClassSymbolImpl>
                      VALUE_PARAMETER name:it index:0 type:<unbound IrClassSymbolImpl>
                      BLOCK_BODY
                        RETURN type=<unbound IrClassSymbolImpl> from='public final fun box (): <unbound IrClassSymbolImpl> declared in <root>'
                          GET_VAR 'it: <unbound IrClassSymbolImpl> declared in <root>.box.<anonymous>' type=<unbound IrClassSymbolImpl> origin=null
        RETURN type=<unbound IrClassSymbolImpl> from='public final fun box (): <unbound IrClassSymbolImpl> declared in <root>'
          CONST String type=<unbound IrClassSymbolImpl> value="OK"
