MODULE_FRAGMENT name:<main>
  FILE fqName:<root> fileName:/doubleInt.kt
    FUN name:checkLess signature:/checkLess|checkLess(kotlin.Double;kotlin.Int){}[0] visibility:public modality:FINAL <> (x:<unbound IrClassSymbolImpl>, y:<unbound IrClassSymbolImpl>) returnType:<unbound IrClassSymbolImpl>
      VALUE_PARAMETER name:x index:0 type:<unbound IrClassSymbolImpl>
      VALUE_PARAMETER name:y index:1 type:<unbound IrClassSymbolImpl>
      BLOCK_BODY
        RETURN type=<unbound IrClassSymbolImpl> from='public final fun checkLess (x: <unbound IrClassSymbolImpl>, y: <unbound IrClassSymbolImpl>): <unbound IrClassSymbolImpl> declared in <root>'
          WHEN type=<unbound IrClassSymbolImpl> origin=WHEN
            BRANCH
              if: CALL 'public final fun greaterOrEqual (arg0: <unbound IrClassSymbolImpl>, arg1: <unbound IrClassSymbolImpl>): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=GTEQ
                arg0: GET_VAR 'x: <unbound IrClassSymbolImpl> declared in <root>.checkLess' type=<unbound IrClassSymbolImpl> origin=null
                arg1: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
                  $this: GET_VAR 'y: <unbound IrClassSymbolImpl> declared in <root>.checkLess' type=<unbound IrClassSymbolImpl> origin=null
              then: STRING_CONCATENATION type=<unbound IrClassSymbolImpl>
                CONST String type=<unbound IrClassSymbolImpl> value="Fail "
                GET_VAR 'x: <unbound IrClassSymbolImpl> declared in <root>.checkLess' type=<unbound IrClassSymbolImpl> origin=null
                CONST String type=<unbound IrClassSymbolImpl> value=" >= "
                GET_VAR 'y: <unbound IrClassSymbolImpl> declared in <root>.checkLess' type=<unbound IrClassSymbolImpl> origin=null
            BRANCH
              if: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
                $this: CALL 'public final fun less (arg0: <unbound IrClassSymbolImpl>, arg1: <unbound IrClassSymbolImpl>): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=LT
                  arg0: GET_VAR 'x: <unbound IrClassSymbolImpl> declared in <root>.checkLess' type=<unbound IrClassSymbolImpl> origin=null
                  arg1: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
                    $this: GET_VAR 'y: <unbound IrClassSymbolImpl> declared in <root>.checkLess' type=<unbound IrClassSymbolImpl> origin=null
              then: STRING_CONCATENATION type=<unbound IrClassSymbolImpl>
                CONST String type=<unbound IrClassSymbolImpl> value="Fail !("
                GET_VAR 'x: <unbound IrClassSymbolImpl> declared in <root>.checkLess' type=<unbound IrClassSymbolImpl> origin=null
                CONST String type=<unbound IrClassSymbolImpl> value=" < "
                GET_VAR 'y: <unbound IrClassSymbolImpl> declared in <root>.checkLess' type=<unbound IrClassSymbolImpl> origin=null
                CONST String type=<unbound IrClassSymbolImpl> value=")"
            BRANCH
              if: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
                $this: CALL 'public final fun lessOrEqual (arg0: <unbound IrClassSymbolImpl>, arg1: <unbound IrClassSymbolImpl>): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=LTEQ
                  arg0: GET_VAR 'x: <unbound IrClassSymbolImpl> declared in <root>.checkLess' type=<unbound IrClassSymbolImpl> origin=null
                  arg1: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
                    $this: GET_VAR 'y: <unbound IrClassSymbolImpl> declared in <root>.checkLess' type=<unbound IrClassSymbolImpl> origin=null
              then: STRING_CONCATENATION type=<unbound IrClassSymbolImpl>
                CONST String type=<unbound IrClassSymbolImpl> value="Fail !("
                GET_VAR 'x: <unbound IrClassSymbolImpl> declared in <root>.checkLess' type=<unbound IrClassSymbolImpl> origin=null
                CONST String type=<unbound IrClassSymbolImpl> value=" <= "
                GET_VAR 'y: <unbound IrClassSymbolImpl> declared in <root>.checkLess' type=<unbound IrClassSymbolImpl> origin=null
                CONST String type=<unbound IrClassSymbolImpl> value=")"
            BRANCH
              if: CALL 'public final fun greater (arg0: <unbound IrClassSymbolImpl>, arg1: <unbound IrClassSymbolImpl>): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=GT
                arg0: GET_VAR 'x: <unbound IrClassSymbolImpl> declared in <root>.checkLess' type=<unbound IrClassSymbolImpl> origin=null
                arg1: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
                  $this: GET_VAR 'y: <unbound IrClassSymbolImpl> declared in <root>.checkLess' type=<unbound IrClassSymbolImpl> origin=null
              then: STRING_CONCATENATION type=<unbound IrClassSymbolImpl>
                CONST String type=<unbound IrClassSymbolImpl> value="Fail "
                GET_VAR 'x: <unbound IrClassSymbolImpl> declared in <root>.checkLess' type=<unbound IrClassSymbolImpl> origin=null
                CONST String type=<unbound IrClassSymbolImpl> value=" > "
                GET_VAR 'y: <unbound IrClassSymbolImpl> declared in <root>.checkLess' type=<unbound IrClassSymbolImpl> origin=null
            BRANCH
              if: CALL 'public final fun greaterOrEqual (arg0: <unbound IrClassSymbolImpl>, arg1: <unbound IrClassSymbolImpl>): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=GTEQ
                arg0: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
                  $this: GET_VAR 'x: <unbound IrClassSymbolImpl> declared in <root>.checkLess' type=<unbound IrClassSymbolImpl> origin=null
                  1: GET_VAR 'y: <unbound IrClassSymbolImpl> declared in <root>.checkLess' type=<unbound IrClassSymbolImpl> origin=null
                arg1: CONST Int type=<unbound IrClassSymbolImpl> value=0
              then: STRING_CONCATENATION type=<unbound IrClassSymbolImpl>
                CONST String type=<unbound IrClassSymbolImpl> value="Fail "
                GET_VAR 'x: <unbound IrClassSymbolImpl> declared in <root>.checkLess' type=<unbound IrClassSymbolImpl> origin=null
                CONST String type=<unbound IrClassSymbolImpl> value=".compareTo("
                GET_VAR 'y: <unbound IrClassSymbolImpl> declared in <root>.checkLess' type=<unbound IrClassSymbolImpl> origin=null
                CONST String type=<unbound IrClassSymbolImpl> value=") >= 0"
            BRANCH
              if: CONST Boolean type=<unbound IrClassSymbolImpl> value=true
              then: CONST String type=<unbound IrClassSymbolImpl> value="OK"
    FUN name:box signature:/box|box(){}[0] visibility:public modality:FINAL <> () returnType:<unbound IrClassSymbolImpl>
      BLOCK_BODY
        RETURN type=<unbound IrClassSymbolImpl> from='public final fun box (): <unbound IrClassSymbolImpl> declared in <root>'
          CALL 'public final fun checkLess (x: <unbound IrClassSymbolImpl>, y: <unbound IrClassSymbolImpl>): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
            x: CONST Double type=<unbound IrClassSymbolImpl> value=0.5
            y: CONST Int type=<unbound IrClassSymbolImpl> value=1
