library {
  // module name: <main>

  library fragment {
    // package name: <root>

    // class name: A
    // class name: B
    // class name: C
    // class name: MyClass
    // class name: Z

    public abstract interface A : kotlin/Any {

      public abstract fun test(): kotlin/String
    }

    public abstract interface B : kotlin/Any {

      public abstract fun test(): kotlin/String
    }

    public abstract interface C : A, B {
    }

    public final class MyClass : C {

      public constructor(value: C)

      public open /* delegation */ fun test(): kotlin/String

      public final val value: C
        public final get
    }

    public final class Z : C {

      public constructor(param: kotlin/String)

      public open fun test(): kotlin/String

      public final val param: kotlin/String
        public final get
    }

    package {

      public final fun box(): kotlin/String
    }
  }
}
