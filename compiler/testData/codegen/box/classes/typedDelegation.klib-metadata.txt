library {
  // module name: <main>

  library fragment {
    // package name: <root>

    // class name: A
    // class name: Base
    // class name: X

    public abstract interface A<T#0 /* T */> : kotlin/Any {

      public abstract fun zzz(): T#0

      public abstract var zzzValue: T#0
        public abstract get
        public abstract set
    }

    public final class Base<T#0 /* T */> : A<T#0?> {

      public constructor()

      public open fun zzz(): T#0?

      public open var zzzValue: T#0?
        public open get
        public open set
    }

    public final class X : A<kotlin/String?> {

      public constructor()

      public open /* delegation */ fun zzz(): kotlin/String?

      public open /* delegation */ var zzzValue: kotlin/String?
        public open get
        public open set
    }

    package {

      public final fun box(): kotlin/String
    }
  }
}
