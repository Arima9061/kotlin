MODULE_FRAGMENT name:<main>
  FILE fqName:<root> fileName:/kt723.kt
    FUN name:inc signature:/inc|inc@kotlin.Int?(){}[0] visibility:public modality:FINAL <> ($receiver:<unbound IrClassSymbolImpl>?) returnType:<unbound IrClassSymbolImpl> [operator]
      $receiver: VALUE_PARAMETER name:<this> type:<unbound IrClassSymbolImpl>?
      BLOCK_BODY
        WHEN type=<unbound IrClassSymbolImpl> origin=IF
          BRANCH
            if: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=EXCLEQ
              $this: CALL 'public final fun EQEQ (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EXCLEQ
                arg0: GET_VAR '<this>: <unbound IrClassSymbolImpl>? declared in <root>.inc' type=<unbound IrClassSymbolImpl>? origin=null
                arg1: CONST Null type=<unbound IrClassSymbolImpl>? value=null
            then: RETURN type=<unbound IrClassSymbolImpl> from='public final fun inc (): <unbound IrClassSymbolImpl> [operator] declared in <root>'
              CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
                $this: GET_VAR '<this>: <unbound IrClassSymbolImpl>? declared in <root>.inc' type=<unbound IrClassSymbolImpl>? origin=null
          BRANCH
            if: CONST Boolean type=<unbound IrClassSymbolImpl> value=true
            then: THROW type=<unbound IrClassSymbolImpl>
              CONSTRUCTOR_CALL 'UNBOUND IrConstructorSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
    FUN name:box signature:/box|box(){}[0] visibility:public modality:FINAL <> () returnType:<unbound IrClassSymbolImpl>
      BLOCK_BODY
        VAR name:i type:<unbound IrClassSymbolImpl>? [var]
          CONST Int type=<unbound IrClassSymbolImpl> value=10
        VAR name:j type:<unbound IrClassSymbolImpl>? [val]
          BLOCK type=<unbound IrClassSymbolImpl>? origin=POSTFIX_INCR
            VAR IR_TEMPORARY_VARIABLE name:<unary> type:<unbound IrClassSymbolImpl>? [val]
              GET_VAR 'var i: <unbound IrClassSymbolImpl>? [var] declared in <root>.box' type=<unbound IrClassSymbolImpl>? origin=POSTFIX_INCR
            SET_VAR 'var i: <unbound IrClassSymbolImpl>? [var] declared in <root>.box' type=<unbound IrClassSymbolImpl> origin=POSTFIX_INCR
              CALL 'public final fun inc (): <unbound IrClassSymbolImpl> [operator] declared in <root>' type=<unbound IrClassSymbolImpl> origin=POSTFIX_INCR
                $receiver: GET_VAR 'val <unary>: <unbound IrClassSymbolImpl>? [val] declared in <root>.box' type=<unbound IrClassSymbolImpl>? origin=null
            GET_VAR 'val <unary>: <unbound IrClassSymbolImpl>? [val] declared in <root>.box' type=<unbound IrClassSymbolImpl>? origin=null
        RETURN type=<unbound IrClassSymbolImpl> from='public final fun box (): <unbound IrClassSymbolImpl> declared in <root>'
          WHEN type=<unbound IrClassSymbolImpl> origin=IF
            BRANCH
              if: WHEN type=<unbound IrClassSymbolImpl> origin=ANDAND
                BRANCH
                  if: CALL 'public final fun EQEQ (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EQEQ
                    arg0: GET_VAR 'val j: <unbound IrClassSymbolImpl>? [val] declared in <root>.box' type=<unbound IrClassSymbolImpl>? origin=null
                    arg1: CONST Int type=<unbound IrClassSymbolImpl> value=10
                  then: CALL 'public final fun EQEQ (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EQEQ
                    arg0: CONST Int type=<unbound IrClassSymbolImpl> value=11
                    arg1: GET_VAR 'var i: <unbound IrClassSymbolImpl>? [var] declared in <root>.box' type=<unbound IrClassSymbolImpl>? origin=null
                BRANCH
                  if: CONST Boolean type=<unbound IrClassSymbolImpl> value=true
                  then: CONST Boolean type=<unbound IrClassSymbolImpl> value=false
              then: CONST String type=<unbound IrClassSymbolImpl> value="OK"
            BRANCH
              if: CONST Boolean type=<unbound IrClassSymbolImpl> value=true
              then: CONST String type=<unbound IrClassSymbolImpl> value="fail"
