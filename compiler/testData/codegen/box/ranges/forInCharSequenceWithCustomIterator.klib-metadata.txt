library {
  // module name: <main>

  library fragment {
    // package name: <root>

    // class name: CharSequenceWithExtensionIterator
    // class name: CharSequenceWithMemberIterator

    public open class CharSequenceWithExtensionIterator : kotlin/CharSequence {

      public constructor(s: kotlin/String)

      public open operator fun get(index: kotlin/Int): kotlin/Char

      public final fun get(foo: kotlin/String): kotlin/Char

      public open fun subSequence(startIndex: kotlin/Int, endIndex: kotlin/Int): kotlin/CharSequence

      public open val length: kotlin/Int
        public open get

      public final val s: kotlin/String
        public final get
    }

    public final class CharSequenceWithMemberIterator : CharSequenceWithExtensionIterator {

      public constructor(s: kotlin/String)

      public final operator fun iterator(): kotlin/collections/CharIterator
    }

    package {

      public final fun box(): kotlin/String

      public final fun collectChars(cs: kotlin/CharSequence): kotlin/String

      public final fun <T#0 /* T */ : kotlin/CharSequence> collectCharsTypeParam(cs: T#0): kotlin/String

      public final operator fun CharSequenceWithExtensionIterator.iterator(): kotlin/collections/CharIterator
    }
  }
}
