library {
  // module name: <main>

  library fragment {
    // package name: <root>

    // class name: UInt
    // class name: ULong

    public final value class UInt : kotlin/Any {

      public constructor(value: kotlin/Int)

      public open /* synthesized */ operator fun equals(other: kotlin/Any?): kotlin/Boolean

      public open /* synthesized */ fun hashCode(): kotlin/Int

      public open /* synthesized */ fun toString(): kotlin/String

      public final val value: kotlin/Int
        public final get

      // underlying property: value

      // underlying type: kotlin/Int
    }

    public final value class ULong : kotlin/Any {

      public constructor(value: kotlin/Long)

      public open /* synthesized */ operator fun equals(other: kotlin/Any?): kotlin/Boolean

      public open /* synthesized */ fun hashCode(): kotlin/Int

      public open /* synthesized */ fun toString(): kotlin/String

      public final val value: kotlin/Long
        public final get

      // underlying property: value

      // underlying type: kotlin/Long
    }

    package {

      public final fun box(): kotlin/String

      public final fun foo(u: UInt, f: kotlin/Function1<UInt, ULong>): ULong

      public final inline fun inlinedFoo(u: UInt, f: kotlin/Function1<UInt, ULong>): ULong

      public final fun mapUIntToULong(u: UInt): ULong
    }
  }
}
