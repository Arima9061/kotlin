library {
  // module name: <main>

  library fragment {
    // package name: <root>

    // class name: X

    public final value class X<T#0 /* T */ : kotlin/Any> : kotlin/Any {

      public constructor(x: T#0?)

      public open /* synthesized */ operator fun equals(other: kotlin/Any?): kotlin/Boolean

      public open /* synthesized */ fun hashCode(): kotlin/Int

      public open /* synthesized */ fun toString(): kotlin/String

      public final val x: T#0?
        public final get

      // underlying property: x

      // underlying type: T#0?
    }

    package {

      public final fun box(): kotlin/String

      public final fun <T#0 /* T */> call(fn: kotlin/Function0<T#0>): T#0

      public final fun useX(x: X<kotlin/String>): kotlin/String
    }
  }
}
