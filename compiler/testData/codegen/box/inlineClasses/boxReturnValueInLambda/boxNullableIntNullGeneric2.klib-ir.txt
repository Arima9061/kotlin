MODULE_FRAGMENT name:<main>
  FILE fqName:<root> fileName:/boxNullableIntNullGeneric2.kt
    CLASS CLASS name:X signature:/X|null[0] modality:FINAL visibility:public [value] superTypes:[<unbound IrClassSymbolImpl>]
      $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:<root>.X<T of <root>.X>
      TYPE_PARAMETER name:T index:0 variance: signature:[ /X|null[0] <- Local[<TP>,0|TYPE_PARAMETER name:T index:0 variance: superTypes:[kotlin.Int] reified:false] ] superTypes:[<unbound IrClassSymbolImpl>] reified:false
      CONSTRUCTOR signature:/X.<init>|<init>(1:0?){}[0] visibility:public <> (x:T of <root>.X?) returnType:<root>.X<T of <root>.X> [primary]
        VALUE_PARAMETER name:x index:0 type:T of <root>.X?
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL 'UNBOUND IrConstructorSymbolImpl'
          INSTANCE_INITIALIZER_CALL classDescriptor='CLASS CLASS name:X signature:/X|null[0] modality:FINAL visibility:public [value] superTypes:[<unbound IrClassSymbolImpl>]'
      PROPERTY name:x signature:/X.x|{}x[0] visibility:public modality:FINAL [val]
        FIELD PROPERTY_BACKING_FIELD name:x signature:[ /X.x|{}x[0] <- Local[<BF>|FIELD PROPERTY_BACKING_FIELD name:x type:T of <root>.X? visibility:private [final]] ] type:T of <root>.X? visibility:private [final]
          EXPRESSION_BODY
            GET_VAR 'x: T of <root>.X? declared in <root>.X.<init>' type=T of <root>.X? origin=INITIALIZE_PROPERTY_FROM_PARAMETER
        FUN DEFAULT_PROPERTY_ACCESSOR name:<get-x> signature:/X.x.<get-x>|<get-x>(){}[0] visibility:public modality:FINAL <> ($this:<root>.X<T of <root>.X>) returnType:T of <root>.X?
          correspondingProperty: PROPERTY name:x signature:/X.x|{}x[0] visibility:public modality:FINAL [val]
          $this: VALUE_PARAMETER name:<this> type:<root>.X<T of <root>.X>
          BLOCK_BODY
            RETURN type=<unbound IrClassSymbolImpl> from='public final fun <get-x> (): T of <root>.X? declared in <root>.X'
              GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:x signature:[ /X.x|{}x[0] <- Local[<BF>|FIELD PROPERTY_BACKING_FIELD name:x type:T of <root>.X? visibility:private [final]] ] type:T of <root>.X? visibility:private [final]' type=T of <root>.X? origin=null
                receiver: GET_VAR '<this>: <root>.X<T of <root>.X> declared in <root>.X.<get-x>' type=<root>.X<T of <root>.X> origin=null
      FUN GENERATED_SINGLE_FIELD_VALUE_CLASS_MEMBER name:toString signature:/X.toString|toString(){}[0] visibility:public modality:OPEN <> ($this:<root>.X<T of <root>.X>) returnType:<unbound IrClassSymbolImpl>
        overridden:
          UNBOUND IrSimpleFunctionSymbolImpl
        $this: VALUE_PARAMETER name:<this> type:<root>.X<T of <root>.X>
        BLOCK_BODY
          RETURN type=<unbound IrClassSymbolImpl> from='public open fun toString (): <unbound IrClassSymbolImpl> declared in <root>.X'
            STRING_CONCATENATION type=<unbound IrClassSymbolImpl>
              CONST String type=<unbound IrClassSymbolImpl> value="X("
              CONST String type=<unbound IrClassSymbolImpl> value="x="
              GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:x signature:[ /X.x|{}x[0] <- Local[<BF>|FIELD PROPERTY_BACKING_FIELD name:x type:T of <root>.X? visibility:private [final]] ] type:T of <root>.X? visibility:private [final]' type=T of <root>.X? origin=null
                receiver: GET_VAR '<this>: <root>.X<T of <root>.X> declared in <root>.X.toString' type=<root>.X<T of <root>.X> origin=null
              CONST String type=<unbound IrClassSymbolImpl> value=")"
      FUN GENERATED_SINGLE_FIELD_VALUE_CLASS_MEMBER name:hashCode signature:/X.hashCode|hashCode(){}[0] visibility:public modality:OPEN <> ($this:<root>.X<T of <root>.X>) returnType:<unbound IrClassSymbolImpl>
        overridden:
          UNBOUND IrSimpleFunctionSymbolImpl
        $this: VALUE_PARAMETER name:<this> type:<root>.X<T of <root>.X>
        BLOCK_BODY
          RETURN type=<unbound IrClassSymbolImpl> from='public open fun hashCode (): <unbound IrClassSymbolImpl> declared in <root>.X'
            WHEN type=<unbound IrClassSymbolImpl> origin=null
              BRANCH
                if: CALL 'public final fun EQEQ (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EQEQ
                  arg0: GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:x signature:[ /X.x|{}x[0] <- Local[<BF>|FIELD PROPERTY_BACKING_FIELD name:x type:T of <root>.X? visibility:private [final]] ] type:T of <root>.X? visibility:private [final]' type=T of <root>.X? origin=null
                    receiver: GET_VAR '<this>: <root>.X<T of <root>.X> declared in <root>.X.hashCode' type=<root>.X<T of <root>.X> origin=null
                  arg1: CONST Null type=<unbound IrClassSymbolImpl>? value=null
                then: CONST Int type=<unbound IrClassSymbolImpl> value=0
              BRANCH
                if: CONST Boolean type=<unbound IrClassSymbolImpl> value=true
                then: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
                  $this: GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:x signature:[ /X.x|{}x[0] <- Local[<BF>|FIELD PROPERTY_BACKING_FIELD name:x type:T of <root>.X? visibility:private [final]] ] type:T of <root>.X? visibility:private [final]' type=T of <root>.X? origin=null
                    receiver: GET_VAR '<this>: <root>.X<T of <root>.X> declared in <root>.X.hashCode' type=<root>.X<T of <root>.X> origin=null
      FUN GENERATED_SINGLE_FIELD_VALUE_CLASS_MEMBER name:equals signature:/X.equals|equals(kotlin.Any?){}[0] visibility:public modality:OPEN <> ($this:<root>.X<T of <root>.X>, other:<unbound IrClassSymbolImpl>?) returnType:<unbound IrClassSymbolImpl> [operator]
        overridden:
          UNBOUND IrSimpleFunctionSymbolImpl
        $this: VALUE_PARAMETER name:<this> type:<root>.X<T of <root>.X>
        VALUE_PARAMETER name:other index:0 type:<unbound IrClassSymbolImpl>?
        BLOCK_BODY
          WHEN type=<unbound IrClassSymbolImpl> origin=null
            BRANCH
              if: TYPE_OP type=<unbound IrClassSymbolImpl> origin=NOT_INSTANCEOF typeOperand=<root>.X<T of <root>.X>
                GET_VAR 'other: <unbound IrClassSymbolImpl>? declared in <root>.X.equals' type=<unbound IrClassSymbolImpl>? origin=null
              then: RETURN type=<unbound IrClassSymbolImpl> from='public open fun equals (other: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> [operator] declared in <root>.X'
                CONST Boolean type=<unbound IrClassSymbolImpl> value=false
          VAR IR_TEMPORARY_VARIABLE name:tmp0_other_with_cast type:<root>.X<T of <root>.X> [val]
            TYPE_OP type=<root>.X<T of <root>.X> origin=CAST typeOperand=<root>.X<T of <root>.X>
              GET_VAR 'other: <unbound IrClassSymbolImpl>? declared in <root>.X.equals' type=<unbound IrClassSymbolImpl>? origin=null
          WHEN type=<unbound IrClassSymbolImpl> origin=null
            BRANCH
              if: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=EXCLEQ
                $this: CALL 'public final fun EQEQ (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EXCLEQ
                  arg0: GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:x signature:[ /X.x|{}x[0] <- Local[<BF>|FIELD PROPERTY_BACKING_FIELD name:x type:T of <root>.X? visibility:private [final]] ] type:T of <root>.X? visibility:private [final]' type=T of <root>.X? origin=null
                    receiver: GET_VAR '<this>: <root>.X<T of <root>.X> declared in <root>.X.equals' type=<root>.X<T of <root>.X> origin=null
                  arg1: GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:x signature:[ /X.x|{}x[0] <- Local[<BF>|FIELD PROPERTY_BACKING_FIELD name:x type:T of <root>.X? visibility:private [final]] ] type:T of <root>.X? visibility:private [final]' type=T of <root>.X? origin=null
                    receiver: GET_VAR 'val tmp0_other_with_cast: <root>.X<T of <root>.X> [val] declared in <root>.X.equals' type=<root>.X<T of <root>.X> origin=null
              then: RETURN type=<unbound IrClassSymbolImpl> from='public open fun equals (other: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> [operator] declared in <root>.X'
                CONST Boolean type=<unbound IrClassSymbolImpl> value=false
          RETURN type=<unbound IrClassSymbolImpl> from='public open fun equals (other: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> [operator] declared in <root>.X'
            CONST Boolean type=<unbound IrClassSymbolImpl> value=true
    FUN name:useX signature:/useX|useX(X<kotlin.Int>){}[0] visibility:public modality:FINAL <> (x:<root>.X<<unbound IrClassSymbolImpl>>) returnType:<unbound IrClassSymbolImpl>
      VALUE_PARAMETER name:x index:0 type:<root>.X<<unbound IrClassSymbolImpl>>
      BLOCK_BODY
        RETURN type=<unbound IrClassSymbolImpl> from='public final fun useX (x: <root>.X<<unbound IrClassSymbolImpl>>): <unbound IrClassSymbolImpl> declared in <root>'
          WHEN type=<unbound IrClassSymbolImpl> origin=IF
            BRANCH
              if: CALL 'public final fun EQEQ (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EQEQ
                arg0: CALL 'public final fun <get-x> (): T of <root>.X? declared in <root>.X' type=<unbound IrClassSymbolImpl>? origin=GET_PROPERTY
                  $this: GET_VAR 'x: <root>.X<<unbound IrClassSymbolImpl>> declared in <root>.useX' type=<root>.X<<unbound IrClassSymbolImpl>> origin=null
                arg1: CONST Null type=<unbound IrClassSymbolImpl>? value=null
              then: CONST String type=<unbound IrClassSymbolImpl> value="OK"
            BRANCH
              if: CONST Boolean type=<unbound IrClassSymbolImpl> value=true
              then: STRING_CONCATENATION type=<unbound IrClassSymbolImpl>
                CONST String type=<unbound IrClassSymbolImpl> value="fail: "
                GET_VAR 'x: <root>.X<<unbound IrClassSymbolImpl>> declared in <root>.useX' type=<root>.X<<unbound IrClassSymbolImpl>> origin=null
    FUN name:call signature:/call|call(kotlin.Function0<0:0>){0§<kotlin.Any?>}[0] visibility:public modality:FINAL <T> (fn:<unbound IrClassSymbolImpl><T of <root>.call>) returnType:T of <root>.call
      TYPE_PARAMETER name:T index:0 variance: signature:[ /call|call(kotlin.Function0<0:0>){0§<kotlin.Any?>}[0] <- Local[<TP>,0|TYPE_PARAMETER name:T index:0 variance: superTypes:[kotlin.Int] reified:false] ] superTypes:[<unbound IrClassSymbolImpl>?] reified:false
      VALUE_PARAMETER name:fn index:0 type:<unbound IrClassSymbolImpl><T of <root>.call>
      BLOCK_BODY
        RETURN type=<unbound IrClassSymbolImpl> from='public final fun call <T> (fn: <unbound IrClassSymbolImpl><T of <root>.call>): T of <root>.call declared in <root>'
          CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=T of <root>.call origin=INVOKE
            $this: GET_VAR 'fn: <unbound IrClassSymbolImpl><T of <root>.call> declared in <root>.call' type=<unbound IrClassSymbolImpl><T of <root>.call> origin=VARIABLE_AS_FUNCTION
    FUN name:box signature:/box|box(){}[0] visibility:public modality:FINAL <> () returnType:<unbound IrClassSymbolImpl>
      BLOCK_BODY
        RETURN type=<unbound IrClassSymbolImpl> from='public final fun box (): <unbound IrClassSymbolImpl> declared in <root>'
          CALL 'public final fun useX (x: <root>.X<<unbound IrClassSymbolImpl>>): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
            x: CALL 'public final fun call <T> (fn: <unbound IrClassSymbolImpl><T of <root>.call>): T of <root>.call declared in <root>' type=<root>.X<<unbound IrClassSymbolImpl>> origin=null
              <T>: <root>.X<<unbound IrClassSymbolImpl>>
              fn: FUN_EXPR type=<unbound IrClassSymbolImpl><<root>.X<<unbound IrClassSymbolImpl>>> origin=LAMBDA
                FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL <> () returnType:<root>.X<<unbound IrClassSymbolImpl>>
                  BLOCK_BODY
                    RETURN type=<unbound IrClassSymbolImpl> from='local final fun <anonymous> (): <root>.X<<unbound IrClassSymbolImpl>> declared in <root>.box'
                      CONSTRUCTOR_CALL 'public constructor <init> (x: T of <root>.X?) [primary] declared in <root>.X' type=<root>.X<<unbound IrClassSymbolImpl>> origin=null
                        <class: T>: <unbound IrClassSymbolImpl>
                        x: CONST Null type=<unbound IrClassSymbolImpl>? value=null
