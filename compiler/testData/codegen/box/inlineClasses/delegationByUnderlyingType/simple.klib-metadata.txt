library {
  // module name: <main>

  library fragment {
    // package name: <root>

    // class name: I
    // class name: IC

    public abstract interface I : kotlin/Any {

      public abstract fun ok(): kotlin/String
    }

    public final value class IC : I {

      public constructor(i: I)

      public open /* synthesized */ operator fun equals(other: kotlin/Any?): kotlin/Boolean

      public open /* synthesized */ fun hashCode(): kotlin/Int

      public open /* delegation */ fun ok(): kotlin/String

      public open /* synthesized */ fun toString(): kotlin/String

      public final val i: I
        public final get

      // underlying property: i

      // underlying type: I
    }

    package {

      public final fun box(): kotlin/String
    }
  }
}
