library {
  // module name: <main>

  library fragment {
    // package name: <root>

    // class name: IcAny
    // class name: IcInt
    // class name: IcLong
    // class name: IcOverIc

    public final value class IcAny<T#0 /* T */> : kotlin/Any {

      public constructor(a: T#0)

      public open /* synthesized */ operator fun equals(other: kotlin/Any?): kotlin/Boolean

      public open /* synthesized */ fun hashCode(): kotlin/Int

      public final fun simple(): kotlin/String

      public open /* synthesized */ fun toString(): kotlin/String

      public final val a: T#0
        public final get

      // underlying property: a

      // underlying type: T#0
    }

    public final value class IcInt<T#0 /* T */ : kotlin/Int> : kotlin/Any {

      public constructor(i: T#0)

      public open /* synthesized */ operator fun equals(other: kotlin/Any?): kotlin/Boolean

      public open /* synthesized */ fun hashCode(): kotlin/Int

      public final fun simple(): kotlin/String

      public open /* synthesized */ fun toString(): kotlin/String

      public final val i: T#0
        public final get

      // underlying property: i

      // underlying type: T#0
    }

    public final value class IcLong<T#0 /* T */ : kotlin/Long> : kotlin/Any {

      public constructor(l: T#0)

      public open /* synthesized */ operator fun equals(other: kotlin/Any?): kotlin/Boolean

      public open /* synthesized */ fun hashCode(): kotlin/Int

      public final fun simple(): kotlin/String

      public open /* synthesized */ fun toString(): kotlin/String

      public final val l: T#0
        public final get

      // underlying property: l

      // underlying type: T#0
    }

    public final value class IcOverIc<T#0 /* T */ : IcLong<kotlin/Long>> : kotlin/Any {

      public constructor(o: T#0)

      public open /* synthesized */ operator fun equals(other: kotlin/Any?): kotlin/Boolean

      public open /* synthesized */ fun hashCode(): kotlin/Int

      public final fun simple(): kotlin/String

      public open /* synthesized */ fun toString(): kotlin/String

      public final val o: T#0
        public final get

      // underlying property: o

      // underlying type: T#0
    }

    package {

      public final fun box(): kotlin/String

      public final inline fun foo(init: kotlin/Function0<kotlin/String>): kotlin/String

      public final fun testBoxed(i: IcInt<kotlin/Int>?, l: IcLong<kotlin/Long>?, a: IcAny<kotlin/Int>?, o: IcOverIc<IcLong<kotlin/Long>>?): kotlin/String

      public final fun testCapturedVars(): kotlin/String

      public final fun testGlobalProperties(): kotlin/String

      public final fun testLocalVars(): kotlin/String

      public final fun testUnboxed(i: IcInt<kotlin/Int>, l: IcLong<kotlin/Long>, a: IcAny<kotlin/Int>, o: IcOverIc<IcLong<kotlin/Long>>): kotlin/String

      public final val ap: IcAny<kotlin/Int>
        public final get

      public final val ip: IcInt<kotlin/Int>
        public final get

      public final val lp: IcLong<kotlin/Long>
        public final get

      public final val op: IcOverIc<IcLong<kotlin/Long>>
        public final get
    }
  }
}
