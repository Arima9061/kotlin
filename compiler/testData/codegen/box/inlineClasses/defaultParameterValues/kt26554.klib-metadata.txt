library {
  // module name: <main>

  library fragment {
    // package name: <root>

    // class name: RGBA
    // class name: RgbaArray

    public final data class RGBA : kotlin/Any {

      public constructor(rgba: kotlin/Int)

      public final /* synthesized */ operator fun component1(): kotlin/Int

      public final /* synthesized */ fun copy(rgba: kotlin/Int /* = ... */): RGBA

      public open /* synthesized */ operator fun equals(other: kotlin/Any?): kotlin/Boolean

      public open /* synthesized */ fun hashCode(): kotlin/Int

      public open /* synthesized */ fun toString(): kotlin/String

      public final val rgba: kotlin/Int
        public final get
    }

    public final value class RgbaArray : kotlin/Any {

      public constructor(array: kotlin/IntArray)

      public open /* synthesized */ operator fun equals(other: kotlin/Any?): kotlin/Boolean

      public final fun fill(value: RGBA, start: kotlin/Int /* = ... */, end: kotlin/Int /* = ... */): kotlin/Unit

      public open /* synthesized */ fun hashCode(): kotlin/Int

      public open /* synthesized */ fun toString(): kotlin/String

      public final val array: kotlin/IntArray
        public final get

      public final val size: kotlin/Int
        public final /* non-default */ get

      // underlying property: array

      // underlying type: kotlin/IntArray
    }

    package {

      public final fun box(): kotlin/String
    }
  }
}
