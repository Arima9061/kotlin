library {
  // module name: <main>

  library fragment {
    // package name: <root>

    // class name: Z

    public final value class Z<T#0 /* T */ : kotlin/Int> : kotlin/Any {

      public constructor(value: T#0)

      public open /* synthesized */ operator fun equals(other: kotlin/Any?): kotlin/Boolean

      public open /* synthesized */ fun hashCode(): kotlin/Int

      public open /* synthesized */ fun toString(): kotlin/String

      public final val value: T#0
        public final get

      // underlying property: value

      // underlying type: T#0
    }

    package {

      public final fun box(): kotlin/String

      public final fun <T#0 /* T */ : kotlin/Int> test1_1(z: Z<T#0>): kotlin/String

      public final fun <T#0 /* T */ : kotlin/Int> test1_2(z: Z<T#0>): kotlin/String

      public final fun <T#0 /* T */ : kotlin/Int> test1_concat1(z: Z<T#0>): kotlin/String

      public final fun <T#0 /* T */ : kotlin/Int> test1_concat2(z: Z<T#0>): kotlin/String

      public final fun <T#0 /* T */ : kotlin/Int> test1_concat3(z: Z<T#0>): kotlin/String

      public final fun <T#0 /* T */ : kotlin/Int> test1_many(z: Z<T#0>): kotlin/String

      public final fun <T#0 /* T */ : kotlin/Int> test2_1(z: Z<T#0>?): kotlin/String

      public final fun <T#0 /* T */ : kotlin/Int> test2_2(z: Z<T#0>?): kotlin/String

      public final fun <T#0 /* T */ : kotlin/Int> test2_concat1(z: Z<T#0>?): kotlin/String

      public final fun <T#0 /* T */ : kotlin/Int> test2_concat2(z: Z<T#0>?): kotlin/String

      public final fun <T#0 /* T */ : kotlin/Int> test2_concat3(z: Z<T#0>?): kotlin/String

      public final fun <T#0 /* T */ : kotlin/Int> test2_many(z: Z<T#0>?): kotlin/String
    }
  }
}
