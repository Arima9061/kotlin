MODULE_FRAGMENT name:<main>
  FILE fqName:<root> fileName:/iterateOverListOfInlineClassValuesGeneric.kt
    CLASS CLASS name:Foo signature:/Foo|null[0] modality:FINAL visibility:public [value] superTypes:[<unbound IrClassSymbolImpl>]
      $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:<root>.Foo<T of <root>.Foo>
      TYPE_PARAMETER name:T index:0 variance: signature:[ /Foo|null[0] <- Local[<TP>,0|TYPE_PARAMETER name:T index:0 variance: superTypes:[kotlin.String] reified:false] ] superTypes:[<unbound IrClassSymbolImpl>] reified:false
      CONSTRUCTOR signature:/Foo.<init>|<init>(1:0){}[0] visibility:public <> (arg:T of <root>.Foo) returnType:<root>.Foo<T of <root>.Foo> [primary]
        VALUE_PARAMETER name:arg index:0 type:T of <root>.Foo
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL 'UNBOUND IrConstructorSymbolImpl'
          INSTANCE_INITIALIZER_CALL classDescriptor='CLASS CLASS name:Foo signature:/Foo|null[0] modality:FINAL visibility:public [value] superTypes:[<unbound IrClassSymbolImpl>]'
      PROPERTY name:arg signature:/Foo.arg|{}arg[0] visibility:public modality:FINAL [val]
        FIELD PROPERTY_BACKING_FIELD name:arg signature:[ /Foo.arg|{}arg[0] <- Local[<BF>|FIELD PROPERTY_BACKING_FIELD name:arg type:T of <root>.Foo visibility:private [final]] ] type:T of <root>.Foo visibility:private [final]
          EXPRESSION_BODY
            GET_VAR 'arg: T of <root>.Foo declared in <root>.Foo.<init>' type=T of <root>.Foo origin=INITIALIZE_PROPERTY_FROM_PARAMETER
        FUN DEFAULT_PROPERTY_ACCESSOR name:<get-arg> signature:/Foo.arg.<get-arg>|<get-arg>(){}[0] visibility:public modality:FINAL <> ($this:<root>.Foo<T of <root>.Foo>) returnType:T of <root>.Foo
          correspondingProperty: PROPERTY name:arg signature:/Foo.arg|{}arg[0] visibility:public modality:FINAL [val]
          $this: VALUE_PARAMETER name:<this> type:<root>.Foo<T of <root>.Foo>
          BLOCK_BODY
            RETURN type=<unbound IrClassSymbolImpl> from='public final fun <get-arg> (): T of <root>.Foo declared in <root>.Foo'
              GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:arg signature:[ /Foo.arg|{}arg[0] <- Local[<BF>|FIELD PROPERTY_BACKING_FIELD name:arg type:T of <root>.Foo visibility:private [final]] ] type:T of <root>.Foo visibility:private [final]' type=T of <root>.Foo origin=null
                receiver: GET_VAR '<this>: <root>.Foo<T of <root>.Foo> declared in <root>.Foo.<get-arg>' type=<root>.Foo<T of <root>.Foo> origin=null
      FUN GENERATED_SINGLE_FIELD_VALUE_CLASS_MEMBER name:toString signature:/Foo.toString|toString(){}[0] visibility:public modality:OPEN <> ($this:<root>.Foo<T of <root>.Foo>) returnType:<unbound IrClassSymbolImpl>
        overridden:
          UNBOUND IrSimpleFunctionSymbolImpl
        $this: VALUE_PARAMETER name:<this> type:<root>.Foo<T of <root>.Foo>
        BLOCK_BODY
          RETURN type=<unbound IrClassSymbolImpl> from='public open fun toString (): <unbound IrClassSymbolImpl> declared in <root>.Foo'
            STRING_CONCATENATION type=<unbound IrClassSymbolImpl>
              CONST String type=<unbound IrClassSymbolImpl> value="Foo("
              CONST String type=<unbound IrClassSymbolImpl> value="arg="
              GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:arg signature:[ /Foo.arg|{}arg[0] <- Local[<BF>|FIELD PROPERTY_BACKING_FIELD name:arg type:T of <root>.Foo visibility:private [final]] ] type:T of <root>.Foo visibility:private [final]' type=T of <root>.Foo origin=null
                receiver: GET_VAR '<this>: <root>.Foo<T of <root>.Foo> declared in <root>.Foo.toString' type=<root>.Foo<T of <root>.Foo> origin=null
              CONST String type=<unbound IrClassSymbolImpl> value=")"
      FUN GENERATED_SINGLE_FIELD_VALUE_CLASS_MEMBER name:hashCode signature:/Foo.hashCode|hashCode(){}[0] visibility:public modality:OPEN <> ($this:<root>.Foo<T of <root>.Foo>) returnType:<unbound IrClassSymbolImpl>
        overridden:
          UNBOUND IrSimpleFunctionSymbolImpl
        $this: VALUE_PARAMETER name:<this> type:<root>.Foo<T of <root>.Foo>
        BLOCK_BODY
          RETURN type=<unbound IrClassSymbolImpl> from='public open fun hashCode (): <unbound IrClassSymbolImpl> declared in <root>.Foo'
            CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
              $this: GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:arg signature:[ /Foo.arg|{}arg[0] <- Local[<BF>|FIELD PROPERTY_BACKING_FIELD name:arg type:T of <root>.Foo visibility:private [final]] ] type:T of <root>.Foo visibility:private [final]' type=T of <root>.Foo origin=null
                receiver: GET_VAR '<this>: <root>.Foo<T of <root>.Foo> declared in <root>.Foo.hashCode' type=<root>.Foo<T of <root>.Foo> origin=null
      FUN GENERATED_SINGLE_FIELD_VALUE_CLASS_MEMBER name:equals signature:/Foo.equals|equals(kotlin.Any?){}[0] visibility:public modality:OPEN <> ($this:<root>.Foo<T of <root>.Foo>, other:<unbound IrClassSymbolImpl>?) returnType:<unbound IrClassSymbolImpl> [operator]
        overridden:
          UNBOUND IrSimpleFunctionSymbolImpl
        $this: VALUE_PARAMETER name:<this> type:<root>.Foo<T of <root>.Foo>
        VALUE_PARAMETER name:other index:0 type:<unbound IrClassSymbolImpl>?
        BLOCK_BODY
          WHEN type=<unbound IrClassSymbolImpl> origin=null
            BRANCH
              if: TYPE_OP type=<unbound IrClassSymbolImpl> origin=NOT_INSTANCEOF typeOperand=<root>.Foo<T of <root>.Foo>
                GET_VAR 'other: <unbound IrClassSymbolImpl>? declared in <root>.Foo.equals' type=<unbound IrClassSymbolImpl>? origin=null
              then: RETURN type=<unbound IrClassSymbolImpl> from='public open fun equals (other: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> [operator] declared in <root>.Foo'
                CONST Boolean type=<unbound IrClassSymbolImpl> value=false
          VAR IR_TEMPORARY_VARIABLE name:tmp0_other_with_cast type:<root>.Foo<T of <root>.Foo> [val]
            TYPE_OP type=<root>.Foo<T of <root>.Foo> origin=CAST typeOperand=<root>.Foo<T of <root>.Foo>
              GET_VAR 'other: <unbound IrClassSymbolImpl>? declared in <root>.Foo.equals' type=<unbound IrClassSymbolImpl>? origin=null
          WHEN type=<unbound IrClassSymbolImpl> origin=null
            BRANCH
              if: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=EXCLEQ
                $this: CALL 'public final fun EQEQ (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EXCLEQ
                  arg0: GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:arg signature:[ /Foo.arg|{}arg[0] <- Local[<BF>|FIELD PROPERTY_BACKING_FIELD name:arg type:T of <root>.Foo visibility:private [final]] ] type:T of <root>.Foo visibility:private [final]' type=T of <root>.Foo origin=null
                    receiver: GET_VAR '<this>: <root>.Foo<T of <root>.Foo> declared in <root>.Foo.equals' type=<root>.Foo<T of <root>.Foo> origin=null
                  arg1: GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:arg signature:[ /Foo.arg|{}arg[0] <- Local[<BF>|FIELD PROPERTY_BACKING_FIELD name:arg type:T of <root>.Foo visibility:private [final]] ] type:T of <root>.Foo visibility:private [final]' type=T of <root>.Foo origin=null
                    receiver: GET_VAR 'val tmp0_other_with_cast: <root>.Foo<T of <root>.Foo> [val] declared in <root>.Foo.equals' type=<root>.Foo<T of <root>.Foo> origin=null
              then: RETURN type=<unbound IrClassSymbolImpl> from='public open fun equals (other: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> [operator] declared in <root>.Foo'
                CONST Boolean type=<unbound IrClassSymbolImpl> value=false
          RETURN type=<unbound IrClassSymbolImpl> from='public open fun equals (other: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> [operator] declared in <root>.Foo'
            CONST Boolean type=<unbound IrClassSymbolImpl> value=true
    FUN name:box signature:/box|box(){}[0] visibility:public modality:FINAL <> () returnType:<unbound IrClassSymbolImpl>
      BLOCK_BODY
        VAR name:ls type:<unbound IrClassSymbolImpl><<root>.Foo<<unbound IrClassSymbolImpl>>> [val]
          CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl><<root>.Foo<<unbound IrClassSymbolImpl>>> origin=null
            <1>: <root>.Foo<<unbound IrClassSymbolImpl>>
            1: VARARG type=<unbound IrClassSymbolImpl><out <root>.Foo<<unbound IrClassSymbolImpl>>> varargElementType=<root>.Foo<<unbound IrClassSymbolImpl>>
              CONSTRUCTOR_CALL 'public constructor <init> (arg: T of <root>.Foo) [primary] declared in <root>.Foo' type=<root>.Foo<<unbound IrClassSymbolImpl>> origin=null
                <class: T>: <unbound IrClassSymbolImpl>
                arg: CONST String type=<unbound IrClassSymbolImpl> value="abc"
              CONSTRUCTOR_CALL 'public constructor <init> (arg: T of <root>.Foo) [primary] declared in <root>.Foo' type=<root>.Foo<<unbound IrClassSymbolImpl>> origin=null
                <class: T>: <unbound IrClassSymbolImpl>
                arg: CONST String type=<unbound IrClassSymbolImpl> value="def"
        VAR name:res type:<unbound IrClassSymbolImpl> [var]
          CONST String type=<unbound IrClassSymbolImpl> value=""
        BLOCK type=<unbound IrClassSymbolImpl> origin=FOR_LOOP
          VAR FOR_LOOP_ITERATOR name:<iterator> type:<unbound IrClassSymbolImpl><<root>.Foo<<unbound IrClassSymbolImpl>>> [val]
            CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl><<root>.Foo<<unbound IrClassSymbolImpl>>> origin=FOR_LOOP_ITERATOR
              $this: GET_VAR 'val ls: <unbound IrClassSymbolImpl><<root>.Foo<<unbound IrClassSymbolImpl>>> [val] declared in <root>.box' type=<unbound IrClassSymbolImpl><<root>.Foo<<unbound IrClassSymbolImpl>>> origin=null
          WHILE label=null origin=FOR_LOOP_INNER_WHILE
            condition: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=FOR_LOOP_HAS_NEXT
              $this: GET_VAR 'val <iterator>: <unbound IrClassSymbolImpl><<root>.Foo<<unbound IrClassSymbolImpl>>> [val] declared in <root>.box' type=<unbound IrClassSymbolImpl><<root>.Foo<<unbound IrClassSymbolImpl>>> origin=null
            body: BLOCK type=<unbound IrClassSymbolImpl> origin=FOR_LOOP_INNER_WHILE
              VAR FOR_LOOP_VARIABLE name:el type:<root>.Foo<<unbound IrClassSymbolImpl>> [val]
                CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<root>.Foo<<unbound IrClassSymbolImpl>> origin=FOR_LOOP_NEXT
                  $this: GET_VAR 'val <iterator>: <unbound IrClassSymbolImpl><<root>.Foo<<unbound IrClassSymbolImpl>>> [val] declared in <root>.box' type=<unbound IrClassSymbolImpl><<root>.Foo<<unbound IrClassSymbolImpl>>> origin=null
              BLOCK type=<unbound IrClassSymbolImpl> origin=null
                SET_VAR 'var res: <unbound IrClassSymbolImpl> [var] declared in <root>.box' type=<unbound IrClassSymbolImpl> origin=PLUSEQ
                  CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=PLUSEQ
                    $this: GET_VAR 'var res: <unbound IrClassSymbolImpl> [var] declared in <root>.box' type=<unbound IrClassSymbolImpl> origin=PLUSEQ
                    1: CALL 'public final fun <get-arg> (): T of <root>.Foo declared in <root>.Foo' type=<unbound IrClassSymbolImpl> origin=GET_PROPERTY
                      $this: GET_VAR 'val el: <root>.Foo<<unbound IrClassSymbolImpl>> [val] declared in <root>.box' type=<root>.Foo<<unbound IrClassSymbolImpl>> origin=null
        RETURN type=<unbound IrClassSymbolImpl> from='public final fun box (): <unbound IrClassSymbolImpl> declared in <root>'
          WHEN type=<unbound IrClassSymbolImpl> origin=IF
            BRANCH
              if: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=EXCLEQ
                $this: CALL 'public final fun EQEQ (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EXCLEQ
                  arg0: GET_VAR 'var res: <unbound IrClassSymbolImpl> [var] declared in <root>.box' type=<unbound IrClassSymbolImpl> origin=null
                  arg1: CONST String type=<unbound IrClassSymbolImpl> value="abcdef"
              then: CONST String type=<unbound IrClassSymbolImpl> value="Fail"
            BRANCH
              if: CONST Boolean type=<unbound IrClassSymbolImpl> value=true
              then: CONST String type=<unbound IrClassSymbolImpl> value="OK"
