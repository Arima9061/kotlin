library {
  // module name: <main>

  library fragment {
    // package name: <root>

    // class name: A
    // class name: A.Companion

    public final value class A<T#0 /* T */ : kotlin/Int> : kotlin/Any {

      public constructor(a: T#0 /* = ... */)

      public open /* synthesized */ operator fun equals(other: kotlin/Any?): kotlin/Boolean

      public open /* synthesized */ fun hashCode(): kotlin/Int

      public open /* synthesized */ fun toString(): kotlin/String

      public final val a: T#0
        public final get

      // companion object: Companion

      // nested class: Companion

      // underlying property: a

      // underlying type: T#0
    }

    public final companion object A.Companion : kotlin/Any {

      private constructor()

      public final val a: kotlin/Int /* = ... */
        public final get
    }

    package {

      public final fun box(): kotlin/String
    }
  }
}
