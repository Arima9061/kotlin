library {
  // module name: <main>

  library fragment {
    // package name: <root>

    // class name: InlineDouble
    // class name: InlineFloat

    public final value class InlineDouble : kotlin/Any {

      public constructor(data: kotlin/Double)

      public open /* synthesized */ operator fun equals(other: kotlin/Any?): kotlin/Boolean

      public open /* synthesized */ fun hashCode(): kotlin/Int

      public open /* synthesized */ fun toString(): kotlin/String

      public final val data: kotlin/Double
        public final get

      // underlying property: data

      // underlying type: kotlin/Double
    }

    public final value class InlineFloat : kotlin/Any {

      public constructor(data: kotlin/Float)

      public open /* synthesized */ operator fun equals(other: kotlin/Any?): kotlin/Boolean

      public open /* synthesized */ fun hashCode(): kotlin/Int

      public open /* synthesized */ fun toString(): kotlin/String

      public final val data: kotlin/Float
        public final get

      // underlying property: data

      // underlying type: kotlin/Float
    }

    package {

      public final fun box(): kotlin/String
    }
  }
}
