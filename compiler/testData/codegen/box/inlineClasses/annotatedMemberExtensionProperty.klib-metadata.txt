library {
  // module name: <main>

  library fragment {
    // package name: <root>

    // class name: A
    // class name: Anno
    // class name: Z

    public final class A : kotlin/Any {

      public constructor()

      @Anno
      public final val Z.r: kotlin/String
        public final /* non-default */ get
    }

    @kotlin/annotation/Target(allowedTargets = [kotlin/annotation/AnnotationTarget.PROPERTY])
    public final annotation class Anno : kotlin/Annotation {

      public constructor()
    }

    public final value class Z : kotlin/Any {

      public constructor(s: kotlin/String)

      public open /* synthesized */ operator fun equals(other: kotlin/Any?): kotlin/Boolean

      public open /* synthesized */ fun hashCode(): kotlin/Int

      public open /* synthesized */ fun toString(): kotlin/String

      public final val s: kotlin/String
        public final get

      // underlying property: s

      // underlying type: kotlin/String
    }

    package {

      public final fun box(): kotlin/String
    }
  }
}
