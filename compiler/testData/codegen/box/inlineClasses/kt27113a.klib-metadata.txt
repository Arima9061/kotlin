library {
  // module name: <main>

  library fragment {
    // package name: <root>

    // class name: A
    // class name: NA

    public final value class A : kotlin/Any {

      public constructor(a: kotlin/Any)

      public open /* synthesized */ operator fun equals(other: kotlin/Any?): kotlin/Boolean

      public open /* synthesized */ fun hashCode(): kotlin/Int

      public open /* synthesized */ fun toString(): kotlin/String

      public final val a: kotlin/Any
        public final get

      // underlying property: a

      // underlying type: kotlin/Any
    }

    public final value class NA : kotlin/Any {

      public constructor(b: kotlin/Any?)

      public open /* synthesized */ operator fun equals(other: kotlin/Any?): kotlin/Boolean

      public open /* synthesized */ fun hashCode(): kotlin/Int

      public open /* synthesized */ fun toString(): kotlin/String

      public final val b: kotlin/Any?
        public final get

      // underlying property: b

      // underlying type: kotlin/Any?
    }

    package {

      public final fun box(): kotlin/String
    }
  }
}
