// MODULE: lib1
library {
  // module name: <lib1>

  library fragment {
    // package name: <root>

    // class name: C

    public final class C<T#0 /* T */> : kotlin/Any {

      public constructor(t: T#0)

      public open fun hashCode(): kotlin/Int

      public final val t: T#0
        public final get
    }
  }
}

// MODULE: lib2
library {
  // module name: <lib2>

  library fragment {
    // package name: <root>

    // class name: IC

    public final value class IC<T#0 /* TT */> : kotlin/Any {

      public constructor(c: C<T#0>)

      public open /* synthesized */ operator fun equals(other: kotlin/Any?): kotlin/Boolean

      public final fun foo(): kotlin/Int

      public open /* synthesized */ fun hashCode(): kotlin/Int

      public open /* synthesized */ fun toString(): kotlin/String

      public final val c: C<T#0>
        public final get

      // underlying property: c

      // underlying type: C<T#0>
    }
  }
}

// MODULE: main
library {
  // module name: <main>

  library fragment {
    // package name: <root>

    package {

      public final fun box(): kotlin/String
    }
  }
}
