library {
  // module name: <main>

  library fragment {
    // package name: <root>

    // class name: AsAny
    // class name: AsInt

    public final value class AsAny : kotlin/Any {

      public constructor(value: kotlin/Any)

      public open /* synthesized */ operator fun equals(other: kotlin/Any?): kotlin/Boolean

      public open /* synthesized */ fun hashCode(): kotlin/Int

      public open fun toString(): kotlin/String

      public final val value: kotlin/Any
        public final get

      // underlying property: value

      // underlying type: kotlin/Any
    }

    public final value class AsInt : kotlin/Any {

      public constructor(value: kotlin/Int)

      public open /* synthesized */ operator fun equals(other: kotlin/Any?): kotlin/Boolean

      public open /* synthesized */ fun hashCode(): kotlin/Int

      public open fun toString(): kotlin/String

      public final val value: kotlin/Int
        public final get

      // underlying property: value

      // underlying type: kotlin/Int
    }

    package {

      public final fun box(): kotlin/String

      public final fun getInt(): kotlin/Int

      public final fun <T#0 /* T */> id(x: T#0): T#0

      public final fun takeAny(a: kotlin/Any): kotlin/String
    }
  }
}
