MODULE_FRAGMENT name:<main>
  FILE fqName:<root> fileName:/useInlineClassesInsideElvisOperatorGeneric.kt
    CLASS CLASS name:UInt signature:/UInt|null[0] modality:FINAL visibility:public [value] superTypes:[<unbound IrClassSymbolImpl>]
      $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:<root>.UInt<T of <root>.UInt>
      TYPE_PARAMETER name:T index:0 variance: signature:[ /UInt|null[0] <- Local[<TP>,0|TYPE_PARAMETER name:T index:0 variance: superTypes:[kotlin.Int] reified:false] ] superTypes:[<unbound IrClassSymbolImpl>] reified:false
      CONSTRUCTOR signature:/UInt.<init>|<init>(1:0){}[0] visibility:public <> (u:T of <root>.UInt) returnType:<root>.UInt<T of <root>.UInt> [primary]
        VALUE_PARAMETER name:u index:0 type:T of <root>.UInt
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL 'UNBOUND IrConstructorSymbolImpl'
          INSTANCE_INITIALIZER_CALL classDescriptor='CLASS CLASS name:UInt signature:/UInt|null[0] modality:FINAL visibility:public [value] superTypes:[<unbound IrClassSymbolImpl>]'
      PROPERTY name:u signature:/UInt.u|{}u[0] visibility:private modality:FINAL [val]
        FIELD PROPERTY_BACKING_FIELD name:u signature:[ /UInt.u|{}u[0] <- Local[<BF>|FIELD PROPERTY_BACKING_FIELD name:u type:T of <root>.UInt visibility:private [final]] ] type:T of <root>.UInt visibility:private [final]
          EXPRESSION_BODY
            GET_VAR 'u: T of <root>.UInt declared in <root>.UInt.<init>' type=T of <root>.UInt origin=INITIALIZE_PROPERTY_FROM_PARAMETER
        FUN DEFAULT_PROPERTY_ACCESSOR name:<get-u> signature:/UInt.u.<get-u>|<get-u>(){}[0] visibility:private modality:FINAL <> ($this:<root>.UInt<T of <root>.UInt>) returnType:T of <root>.UInt
          correspondingProperty: PROPERTY name:u signature:/UInt.u|{}u[0] visibility:private modality:FINAL [val]
          $this: VALUE_PARAMETER name:<this> type:<root>.UInt<T of <root>.UInt>
          BLOCK_BODY
            RETURN type=<unbound IrClassSymbolImpl> from='private final fun <get-u> (): T of <root>.UInt declared in <root>.UInt'
              GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:u signature:[ /UInt.u|{}u[0] <- Local[<BF>|FIELD PROPERTY_BACKING_FIELD name:u type:T of <root>.UInt visibility:private [final]] ] type:T of <root>.UInt visibility:private [final]' type=T of <root>.UInt origin=null
                receiver: GET_VAR '<this>: <root>.UInt<T of <root>.UInt> declared in <root>.UInt.<get-u>' type=<root>.UInt<T of <root>.UInt> origin=null
      FUN name:asResult signature:/UInt.asResult|asResult(){}[0] visibility:public modality:FINAL <> ($this:<root>.UInt<T of <root>.UInt>) returnType:T of <root>.UInt
        $this: VALUE_PARAMETER name:<this> type:<root>.UInt<T of <root>.UInt>
        BLOCK_BODY
          RETURN type=<unbound IrClassSymbolImpl> from='public final fun asResult (): T of <root>.UInt declared in <root>.UInt'
            CALL 'private final fun <get-u> (): T of <root>.UInt declared in <root>.UInt' type=T of <root>.UInt origin=GET_PROPERTY
              $this: GET_VAR '<this>: <root>.UInt<T of <root>.UInt> declared in <root>.UInt.asResult' type=<root>.UInt<T of <root>.UInt> origin=null
      FUN GENERATED_SINGLE_FIELD_VALUE_CLASS_MEMBER name:toString signature:/UInt.toString|toString(){}[0] visibility:public modality:OPEN <> ($this:<root>.UInt<T of <root>.UInt>) returnType:<unbound IrClassSymbolImpl>
        overridden:
          UNBOUND IrSimpleFunctionSymbolImpl
        $this: VALUE_PARAMETER name:<this> type:<root>.UInt<T of <root>.UInt>
        BLOCK_BODY
          RETURN type=<unbound IrClassSymbolImpl> from='public open fun toString (): <unbound IrClassSymbolImpl> declared in <root>.UInt'
            STRING_CONCATENATION type=<unbound IrClassSymbolImpl>
              CONST String type=<unbound IrClassSymbolImpl> value="UInt("
              CONST String type=<unbound IrClassSymbolImpl> value="u="
              GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:u signature:[ /UInt.u|{}u[0] <- Local[<BF>|FIELD PROPERTY_BACKING_FIELD name:u type:T of <root>.UInt visibility:private [final]] ] type:T of <root>.UInt visibility:private [final]' type=T of <root>.UInt origin=null
                receiver: GET_VAR '<this>: <root>.UInt<T of <root>.UInt> declared in <root>.UInt.toString' type=<root>.UInt<T of <root>.UInt> origin=null
              CONST String type=<unbound IrClassSymbolImpl> value=")"
      FUN GENERATED_SINGLE_FIELD_VALUE_CLASS_MEMBER name:hashCode signature:/UInt.hashCode|hashCode(){}[0] visibility:public modality:OPEN <> ($this:<root>.UInt<T of <root>.UInt>) returnType:<unbound IrClassSymbolImpl>
        overridden:
          UNBOUND IrSimpleFunctionSymbolImpl
        $this: VALUE_PARAMETER name:<this> type:<root>.UInt<T of <root>.UInt>
        BLOCK_BODY
          RETURN type=<unbound IrClassSymbolImpl> from='public open fun hashCode (): <unbound IrClassSymbolImpl> declared in <root>.UInt'
            CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
              $this: GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:u signature:[ /UInt.u|{}u[0] <- Local[<BF>|FIELD PROPERTY_BACKING_FIELD name:u type:T of <root>.UInt visibility:private [final]] ] type:T of <root>.UInt visibility:private [final]' type=T of <root>.UInt origin=null
                receiver: GET_VAR '<this>: <root>.UInt<T of <root>.UInt> declared in <root>.UInt.hashCode' type=<root>.UInt<T of <root>.UInt> origin=null
      FUN GENERATED_SINGLE_FIELD_VALUE_CLASS_MEMBER name:equals signature:/UInt.equals|equals(kotlin.Any?){}[0] visibility:public modality:OPEN <> ($this:<root>.UInt<T of <root>.UInt>, other:<unbound IrClassSymbolImpl>?) returnType:<unbound IrClassSymbolImpl> [operator]
        overridden:
          UNBOUND IrSimpleFunctionSymbolImpl
        $this: VALUE_PARAMETER name:<this> type:<root>.UInt<T of <root>.UInt>
        VALUE_PARAMETER name:other index:0 type:<unbound IrClassSymbolImpl>?
        BLOCK_BODY
          WHEN type=<unbound IrClassSymbolImpl> origin=null
            BRANCH
              if: TYPE_OP type=<unbound IrClassSymbolImpl> origin=NOT_INSTANCEOF typeOperand=<root>.UInt<T of <root>.UInt>
                GET_VAR 'other: <unbound IrClassSymbolImpl>? declared in <root>.UInt.equals' type=<unbound IrClassSymbolImpl>? origin=null
              then: RETURN type=<unbound IrClassSymbolImpl> from='public open fun equals (other: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> [operator] declared in <root>.UInt'
                CONST Boolean type=<unbound IrClassSymbolImpl> value=false
          VAR IR_TEMPORARY_VARIABLE name:tmp0_other_with_cast type:<root>.UInt<T of <root>.UInt> [val]
            TYPE_OP type=<root>.UInt<T of <root>.UInt> origin=CAST typeOperand=<root>.UInt<T of <root>.UInt>
              GET_VAR 'other: <unbound IrClassSymbolImpl>? declared in <root>.UInt.equals' type=<unbound IrClassSymbolImpl>? origin=null
          WHEN type=<unbound IrClassSymbolImpl> origin=null
            BRANCH
              if: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=EXCLEQ
                $this: CALL 'public final fun EQEQ (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EXCLEQ
                  arg0: GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:u signature:[ /UInt.u|{}u[0] <- Local[<BF>|FIELD PROPERTY_BACKING_FIELD name:u type:T of <root>.UInt visibility:private [final]] ] type:T of <root>.UInt visibility:private [final]' type=T of <root>.UInt origin=null
                    receiver: GET_VAR '<this>: <root>.UInt<T of <root>.UInt> declared in <root>.UInt.equals' type=<root>.UInt<T of <root>.UInt> origin=null
                  arg1: GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:u signature:[ /UInt.u|{}u[0] <- Local[<BF>|FIELD PROPERTY_BACKING_FIELD name:u type:T of <root>.UInt visibility:private [final]] ] type:T of <root>.UInt visibility:private [final]' type=T of <root>.UInt origin=null
                    receiver: GET_VAR 'val tmp0_other_with_cast: <root>.UInt<T of <root>.UInt> [val] declared in <root>.UInt.equals' type=<root>.UInt<T of <root>.UInt> origin=null
              then: RETURN type=<unbound IrClassSymbolImpl> from='public open fun equals (other: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> [operator] declared in <root>.UInt'
                CONST Boolean type=<unbound IrClassSymbolImpl> value=false
          RETURN type=<unbound IrClassSymbolImpl> from='public open fun equals (other: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> [operator] declared in <root>.UInt'
            CONST Boolean type=<unbound IrClassSymbolImpl> value=true
    FUN name:test signature:/test|test(UInt<0:0>?;UInt<0:0>?;UInt<0:0>;UInt<0:0>?){0ยง<kotlin.Int>}[0] visibility:public modality:FINAL <T> (x1:<root>.UInt<T of <root>.test>?, x2:<root>.UInt<T of <root>.test>?, y:<root>.UInt<T of <root>.test>, z:<root>.UInt<T of <root>.test>?) returnType:<unbound IrClassSymbolImpl>
      TYPE_PARAMETER name:T index:0 variance: signature:[ /test|test(UInt<0:0>?;UInt<0:0>?;UInt<0:0>;UInt<0:0>?){0ยง<kotlin.Int>}[0] <- Local[<TP>,0|TYPE_PARAMETER name:T index:0 variance: superTypes:[kotlin.Int] reified:false] ] superTypes:[<unbound IrClassSymbolImpl>] reified:false
      VALUE_PARAMETER name:x1 index:0 type:<root>.UInt<T of <root>.test>?
      VALUE_PARAMETER name:x2 index:1 type:<root>.UInt<T of <root>.test>?
      VALUE_PARAMETER name:y index:2 type:<root>.UInt<T of <root>.test>
      VALUE_PARAMETER name:z index:3 type:<root>.UInt<T of <root>.test>?
      BLOCK_BODY
        VAR name:a type:<root>.UInt<T of <root>.test> [val]
          BLOCK type=<root>.UInt<T of <root>.test> origin=ELVIS
            VAR IR_TEMPORARY_VARIABLE name:tmp0_elvis_lhs type:<root>.UInt<T of <root>.test>? [val]
              GET_VAR 'x1: <root>.UInt<T of <root>.test>? declared in <root>.test' type=<root>.UInt<T of <root>.test>? origin=null
            WHEN type=<root>.UInt<T of <root>.test> origin=null
              BRANCH
                if: CALL 'public final fun EQEQ (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EQEQ
                  arg0: GET_VAR 'val tmp0_elvis_lhs: <root>.UInt<T of <root>.test>? [val] declared in <root>.test' type=<root>.UInt<T of <root>.test>? origin=null
                  arg1: CONST Null type=<unbound IrClassSymbolImpl>? value=null
                then: GET_VAR 'y: <root>.UInt<T of <root>.test> declared in <root>.test' type=<root>.UInt<T of <root>.test> origin=null
              BRANCH
                if: CONST Boolean type=<unbound IrClassSymbolImpl> value=true
                then: GET_VAR 'val tmp0_elvis_lhs: <root>.UInt<T of <root>.test>? [val] declared in <root>.test' type=<root>.UInt<T of <root>.test>? origin=null
        VAR name:b type:<root>.UInt<T of <root>.test> [val]
          BLOCK type=<root>.UInt<T of <root>.test> origin=ELVIS
            VAR IR_TEMPORARY_VARIABLE name:tmp1_elvis_lhs type:<root>.UInt<T of <root>.test>? [val]
              GET_VAR 'x1: <root>.UInt<T of <root>.test>? declared in <root>.test' type=<root>.UInt<T of <root>.test>? origin=null
            WHEN type=<root>.UInt<T of <root>.test> origin=null
              BRANCH
                if: CALL 'public final fun EQEQ (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EQEQ
                  arg0: GET_VAR 'val tmp1_elvis_lhs: <root>.UInt<T of <root>.test>? [val] declared in <root>.test' type=<root>.UInt<T of <root>.test>? origin=null
                  arg1: CONST Null type=<unbound IrClassSymbolImpl>? value=null
                then: CALL 'public final fun CHECK_NOT_NULL <T0> (arg0: T0 of kotlin.internal.ir.CHECK_NOT_NULL?): {T0 of kotlin.internal.ir.CHECK_NOT_NULL & Any} declared in kotlin.internal.ir' type=<root>.UInt<T of <root>.test> origin=EXCLEXCL
                  <T0>: <root>.UInt<T of <root>.test>
                  arg0: GET_VAR 'z: <root>.UInt<T of <root>.test>? declared in <root>.test' type=<root>.UInt<T of <root>.test>? origin=null
              BRANCH
                if: CONST Boolean type=<unbound IrClassSymbolImpl> value=true
                then: GET_VAR 'val tmp1_elvis_lhs: <root>.UInt<T of <root>.test>? [val] declared in <root>.test' type=<root>.UInt<T of <root>.test>? origin=null
        VAR name:c type:<root>.UInt<T of <root>.test> [val]
          BLOCK type=<root>.UInt<T of <root>.test> origin=ELVIS
            VAR IR_TEMPORARY_VARIABLE name:tmp3_elvis_lhs type:<root>.UInt<T of <root>.test>? [val]
              BLOCK type=<root>.UInt<T of <root>.test>? origin=ELVIS
                VAR IR_TEMPORARY_VARIABLE name:tmp2_elvis_lhs type:<root>.UInt<T of <root>.test>? [val]
                  GET_VAR 'x1: <root>.UInt<T of <root>.test>? declared in <root>.test' type=<root>.UInt<T of <root>.test>? origin=null
                WHEN type=<root>.UInt<T of <root>.test>? origin=null
                  BRANCH
                    if: CALL 'public final fun EQEQ (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EQEQ
                      arg0: GET_VAR 'val tmp2_elvis_lhs: <root>.UInt<T of <root>.test>? [val] declared in <root>.test' type=<root>.UInt<T of <root>.test>? origin=null
                      arg1: CONST Null type=<unbound IrClassSymbolImpl>? value=null
                    then: GET_VAR 'x2: <root>.UInt<T of <root>.test>? declared in <root>.test' type=<root>.UInt<T of <root>.test>? origin=null
                  BRANCH
                    if: CONST Boolean type=<unbound IrClassSymbolImpl> value=true
                    then: GET_VAR 'val tmp2_elvis_lhs: <root>.UInt<T of <root>.test>? [val] declared in <root>.test' type=<root>.UInt<T of <root>.test>? origin=null
            WHEN type=<root>.UInt<T of <root>.test> origin=null
              BRANCH
                if: CALL 'public final fun EQEQ (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EQEQ
                  arg0: GET_VAR 'val tmp3_elvis_lhs: <root>.UInt<T of <root>.test>? [val] declared in <root>.test' type=<root>.UInt<T of <root>.test>? origin=null
                  arg1: CONST Null type=<unbound IrClassSymbolImpl>? value=null
                then: GET_VAR 'y: <root>.UInt<T of <root>.test> declared in <root>.test' type=<root>.UInt<T of <root>.test> origin=null
              BRANCH
                if: CONST Boolean type=<unbound IrClassSymbolImpl> value=true
                then: GET_VAR 'val tmp3_elvis_lhs: <root>.UInt<T of <root>.test>? [val] declared in <root>.test' type=<root>.UInt<T of <root>.test>? origin=null
        RETURN type=<unbound IrClassSymbolImpl> from='public final fun test <T> (x1: <root>.UInt<T of <root>.test>?, x2: <root>.UInt<T of <root>.test>?, y: <root>.UInt<T of <root>.test>, z: <root>.UInt<T of <root>.test>?): <unbound IrClassSymbolImpl> declared in <root>'
          CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=PLUS
            $this: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=PLUS
              $this: CALL 'public final fun asResult (): T of <root>.UInt declared in <root>.UInt' type=T of <root>.test origin=null
                $this: GET_VAR 'val a: <root>.UInt<T of <root>.test> [val] declared in <root>.test' type=<root>.UInt<T of <root>.test> origin=null
              1: CALL 'public final fun asResult (): T of <root>.UInt declared in <root>.UInt' type=T of <root>.test origin=null
                $this: GET_VAR 'val b: <root>.UInt<T of <root>.test> [val] declared in <root>.test' type=<root>.UInt<T of <root>.test> origin=null
            1: CALL 'public final fun asResult (): T of <root>.UInt declared in <root>.UInt' type=T of <root>.test origin=null
              $this: GET_VAR 'val c: <root>.UInt<T of <root>.test> [val] declared in <root>.test' type=<root>.UInt<T of <root>.test> origin=null
    FUN name:box signature:/box|box(){}[0] visibility:public modality:FINAL <> () returnType:<unbound IrClassSymbolImpl>
      BLOCK_BODY
        VAR name:u1 type:<root>.UInt<<unbound IrClassSymbolImpl>> [val]
          CONSTRUCTOR_CALL 'public constructor <init> (u: T of <root>.UInt) [primary] declared in <root>.UInt' type=<root>.UInt<<unbound IrClassSymbolImpl>> origin=null
            <class: T>: <unbound IrClassSymbolImpl>
            u: CONST Int type=<unbound IrClassSymbolImpl> value=10
        VAR name:u2 type:<root>.UInt<<unbound IrClassSymbolImpl>> [val]
          CONSTRUCTOR_CALL 'public constructor <init> (u: T of <root>.UInt) [primary] declared in <root>.UInt' type=<root>.UInt<<unbound IrClassSymbolImpl>> origin=null
            <class: T>: <unbound IrClassSymbolImpl>
            u: CONST Int type=<unbound IrClassSymbolImpl> value=20
        VAR name:r type:<unbound IrClassSymbolImpl> [val]
          CALL 'public final fun test <T> (x1: <root>.UInt<T of <root>.test>?, x2: <root>.UInt<T of <root>.test>?, y: <root>.UInt<T of <root>.test>, z: <root>.UInt<T of <root>.test>?): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
            <T>: <unbound IrClassSymbolImpl>
            x1: CONST Null type=<unbound IrClassSymbolImpl>? value=null
            x2: CONST Null type=<unbound IrClassSymbolImpl>? value=null
            y: GET_VAR 'val u1: <root>.UInt<<unbound IrClassSymbolImpl>> [val] declared in <root>.box' type=<root>.UInt<<unbound IrClassSymbolImpl>> origin=null
            z: GET_VAR 'val u2: <root>.UInt<<unbound IrClassSymbolImpl>> [val] declared in <root>.box' type=<root>.UInt<<unbound IrClassSymbolImpl>> origin=null
        RETURN type=<unbound IrClassSymbolImpl> from='public final fun box (): <unbound IrClassSymbolImpl> declared in <root>'
          WHEN type=<unbound IrClassSymbolImpl> origin=IF
            BRANCH
              if: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=EXCLEQ
                $this: CALL 'public final fun EQEQ (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EXCLEQ
                  arg0: GET_VAR 'val r: <unbound IrClassSymbolImpl> [val] declared in <root>.box' type=<unbound IrClassSymbolImpl> origin=null
                  arg1: CONST Int type=<unbound IrClassSymbolImpl> value=40
              then: STRING_CONCATENATION type=<unbound IrClassSymbolImpl>
                CONST String type=<unbound IrClassSymbolImpl> value="fail: "
                GET_VAR 'val r: <unbound IrClassSymbolImpl> [val] declared in <root>.box' type=<unbound IrClassSymbolImpl> origin=null
            BRANCH
              if: CONST Boolean type=<unbound IrClassSymbolImpl> value=true
              then: CONST String type=<unbound IrClassSymbolImpl> value="OK"
