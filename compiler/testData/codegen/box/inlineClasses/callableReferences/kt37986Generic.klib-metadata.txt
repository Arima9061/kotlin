library {
  // module name: <main>

  library fragment {
    // package name: <root>

    // class name: R

    public final value class R<T#0 /* T */ : kotlin/Any> : kotlin/Any {

      public constructor(x: T#0)

      public open /* synthesized */ operator fun equals(other: kotlin/Any?): kotlin/Boolean

      public open /* synthesized */ fun hashCode(): kotlin/Int

      public open /* synthesized */ fun toString(): kotlin/String

      public final val x: T#0
        public final get

      // underlying property: x

      // underlying type: T#0
    }

    package {

      public final fun box(): kotlin/String

      public final fun fnWithDefaultR(r: R<kotlin/String> /* = ... */): R<kotlin/String>

      public final fun useR(r: R<kotlin/String>): kotlin/Unit

      public final fun useR0(fn: kotlin/Function0<R<kotlin/String>>): kotlin/Unit

      public final fun useR1(r: R<kotlin/String>, fn: kotlin/Function1<R<kotlin/String>, R<kotlin/String>>): kotlin/Unit
    }
  }
}
