MODULE_FRAGMENT name:<main>
  FILE fqName:<root> fileName:/kt30780Generic.kt
    CLASS CLASS name:Test signature:/Test|null[0] modality:FINAL visibility:public [value] superTypes:[<unbound IrClassSymbolImpl>]
      $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:<root>.Test<T of <root>.Test>
      TYPE_PARAMETER name:T index:0 variance: signature:[ /Test|null[0] <- Local[<TP>,0|TYPE_PARAMETER name:T index:0 variance: superTypes:[kotlin.Int] reified:false] ] superTypes:[<unbound IrClassSymbolImpl>] reified:false
      CONSTRUCTOR signature:/Test.<init>|<init>(1:0){}[0] visibility:public <> (x:T of <root>.Test) returnType:<root>.Test<T of <root>.Test> [primary]
        VALUE_PARAMETER name:x index:0 type:T of <root>.Test
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL 'UNBOUND IrConstructorSymbolImpl'
          INSTANCE_INITIALIZER_CALL classDescriptor='CLASS CLASS name:Test signature:/Test|null[0] modality:FINAL visibility:public [value] superTypes:[<unbound IrClassSymbolImpl>]'
      PROPERTY name:x signature:/Test.x|{}x[0] visibility:public modality:FINAL [val]
        FIELD PROPERTY_BACKING_FIELD name:x signature:[ /Test.x|{}x[0] <- Local[<BF>|FIELD PROPERTY_BACKING_FIELD name:x type:T of <root>.Test visibility:private [final]] ] type:T of <root>.Test visibility:private [final]
          EXPRESSION_BODY
            GET_VAR 'x: T of <root>.Test declared in <root>.Test.<init>' type=T of <root>.Test origin=INITIALIZE_PROPERTY_FROM_PARAMETER
        FUN DEFAULT_PROPERTY_ACCESSOR name:<get-x> signature:/Test.x.<get-x>|<get-x>(){}[0] visibility:public modality:FINAL <> ($this:<root>.Test<T of <root>.Test>) returnType:T of <root>.Test
          correspondingProperty: PROPERTY name:x signature:/Test.x|{}x[0] visibility:public modality:FINAL [val]
          $this: VALUE_PARAMETER name:<this> type:<root>.Test<T of <root>.Test>
          BLOCK_BODY
            RETURN type=<unbound IrClassSymbolImpl> from='public final fun <get-x> (): T of <root>.Test declared in <root>.Test'
              GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:x signature:[ /Test.x|{}x[0] <- Local[<BF>|FIELD PROPERTY_BACKING_FIELD name:x type:T of <root>.Test visibility:private [final]] ] type:T of <root>.Test visibility:private [final]' type=T of <root>.Test origin=null
                receiver: GET_VAR '<this>: <root>.Test<T of <root>.Test> declared in <root>.Test.<get-x>' type=<root>.Test<T of <root>.Test> origin=null
      CLASS OBJECT name:Companion signature:/Test.Companion|null[0] modality:FINAL visibility:private [companion] superTypes:[<unbound IrClassSymbolImpl>]
        $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:<root>.Test.Companion
        CONSTRUCTOR signature:/Test.Companion.<init>|<init>(){}[0] visibility:private <> () returnType:<root>.Test.Companion [primary]
          BLOCK_BODY
            DELEGATING_CONSTRUCTOR_CALL 'UNBOUND IrConstructorSymbolImpl'
            INSTANCE_INITIALIZER_CALL classDescriptor='CLASS OBJECT name:Companion signature:/Test.Companion|null[0] modality:FINAL visibility:private [companion] superTypes:[<unbound IrClassSymbolImpl>]'
        PROPERTY name:CONSTANT signature:/Test.Companion.CONSTANT|{}CONSTANT[0] visibility:private modality:FINAL [const,val]
          FIELD PROPERTY_BACKING_FIELD name:CONSTANT signature:[ /Test.Companion.CONSTANT|{}CONSTANT[0] <- Local[<BF>|FIELD PROPERTY_BACKING_FIELD name:x type:T of <root>.Test visibility:private [final]] ] type:<unbound IrClassSymbolImpl> visibility:private [final]
            EXPRESSION_BODY
              CONST String type=<unbound IrClassSymbolImpl> value="OK"
          FUN DEFAULT_PROPERTY_ACCESSOR name:<get-CONSTANT> signature:/Test.Companion.CONSTANT.<get-CONSTANT>|<get-CONSTANT>(){}[0] visibility:private modality:FINAL <> ($this:<root>.Test.Companion) returnType:<unbound IrClassSymbolImpl>
            correspondingProperty: PROPERTY name:CONSTANT signature:/Test.Companion.CONSTANT|{}CONSTANT[0] visibility:private modality:FINAL [const,val]
            $this: VALUE_PARAMETER name:<this> type:<root>.Test.Companion
            BLOCK_BODY
              RETURN type=<unbound IrClassSymbolImpl> from='private final fun <get-CONSTANT> (): <unbound IrClassSymbolImpl> declared in <root>.Test.Companion'
                GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:CONSTANT signature:[ /Test.Companion.CONSTANT|{}CONSTANT[0] <- Local[<BF>|FIELD PROPERTY_BACKING_FIELD name:x type:T of <root>.Test visibility:private [final]] ] type:<unbound IrClassSymbolImpl> visibility:private [final]' type=<unbound IrClassSymbolImpl> origin=null
                  receiver: GET_VAR '<this>: <root>.Test.Companion declared in <root>.Test.Companion.<get-CONSTANT>' type=<root>.Test.Companion origin=null
      FUN name:crash signature:/Test.crash|crash(){}[0] visibility:public modality:FINAL <> ($this:<root>.Test<T of <root>.Test>) returnType:<unbound IrClassSymbolImpl>
        $this: VALUE_PARAMETER name:<this> type:<root>.Test<T of <root>.Test>
        BLOCK_BODY
          RETURN type=<unbound IrClassSymbolImpl> from='public final fun crash (): <unbound IrClassSymbolImpl> declared in <root>.Test'
            CALL 'private final fun getInlineConstant (): <unbound IrClassSymbolImpl> [inline] declared in <root>.Test' type=<unbound IrClassSymbolImpl> origin=null
              $this: GET_VAR '<this>: <root>.Test<T of <root>.Test> declared in <root>.Test.crash' type=<root>.Test<T of <root>.Test> origin=null
      FUN name:getInlineConstant signature:/Test.getInlineConstant|getInlineConstant(){}[0] visibility:private modality:FINAL <> ($this:<root>.Test<T of <root>.Test>) returnType:<unbound IrClassSymbolImpl> [inline]
        $this: VALUE_PARAMETER name:<this> type:<root>.Test<T of <root>.Test>
        BLOCK_BODY
          RETURN type=<unbound IrClassSymbolImpl> from='private final fun getInlineConstant (): <unbound IrClassSymbolImpl> [inline] declared in <root>.Test'
            CONST String type=<unbound IrClassSymbolImpl> value="OK"
      FUN GENERATED_SINGLE_FIELD_VALUE_CLASS_MEMBER name:toString signature:/Test.toString|toString(){}[0] visibility:public modality:OPEN <> ($this:<root>.Test<T of <root>.Test>) returnType:<unbound IrClassSymbolImpl>
        overridden:
          UNBOUND IrSimpleFunctionSymbolImpl
        $this: VALUE_PARAMETER name:<this> type:<root>.Test<T of <root>.Test>
        BLOCK_BODY
          RETURN type=<unbound IrClassSymbolImpl> from='public open fun toString (): <unbound IrClassSymbolImpl> declared in <root>.Test'
            STRING_CONCATENATION type=<unbound IrClassSymbolImpl>
              CONST String type=<unbound IrClassSymbolImpl> value="Test("
              CONST String type=<unbound IrClassSymbolImpl> value="x="
              GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:x signature:[ /Test.x|{}x[0] <- Local[<BF>|FIELD PROPERTY_BACKING_FIELD name:x type:T of <root>.Test visibility:private [final]] ] type:T of <root>.Test visibility:private [final]' type=T of <root>.Test origin=null
                receiver: GET_VAR '<this>: <root>.Test<T of <root>.Test> declared in <root>.Test.toString' type=<root>.Test<T of <root>.Test> origin=null
              CONST String type=<unbound IrClassSymbolImpl> value=")"
      FUN GENERATED_SINGLE_FIELD_VALUE_CLASS_MEMBER name:hashCode signature:/Test.hashCode|hashCode(){}[0] visibility:public modality:OPEN <> ($this:<root>.Test<T of <root>.Test>) returnType:<unbound IrClassSymbolImpl>
        overridden:
          UNBOUND IrSimpleFunctionSymbolImpl
        $this: VALUE_PARAMETER name:<this> type:<root>.Test<T of <root>.Test>
        BLOCK_BODY
          RETURN type=<unbound IrClassSymbolImpl> from='public open fun hashCode (): <unbound IrClassSymbolImpl> declared in <root>.Test'
            CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
              $this: GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:x signature:[ /Test.x|{}x[0] <- Local[<BF>|FIELD PROPERTY_BACKING_FIELD name:x type:T of <root>.Test visibility:private [final]] ] type:T of <root>.Test visibility:private [final]' type=T of <root>.Test origin=null
                receiver: GET_VAR '<this>: <root>.Test<T of <root>.Test> declared in <root>.Test.hashCode' type=<root>.Test<T of <root>.Test> origin=null
      FUN GENERATED_SINGLE_FIELD_VALUE_CLASS_MEMBER name:equals signature:/Test.equals|equals(kotlin.Any?){}[0] visibility:public modality:OPEN <> ($this:<root>.Test<T of <root>.Test>, other:<unbound IrClassSymbolImpl>?) returnType:<unbound IrClassSymbolImpl> [operator]
        overridden:
          UNBOUND IrSimpleFunctionSymbolImpl
        $this: VALUE_PARAMETER name:<this> type:<root>.Test<T of <root>.Test>
        VALUE_PARAMETER name:other index:0 type:<unbound IrClassSymbolImpl>?
        BLOCK_BODY
          WHEN type=<unbound IrClassSymbolImpl> origin=null
            BRANCH
              if: TYPE_OP type=<unbound IrClassSymbolImpl> origin=NOT_INSTANCEOF typeOperand=<root>.Test<T of <root>.Test>
                GET_VAR 'other: <unbound IrClassSymbolImpl>? declared in <root>.Test.equals' type=<unbound IrClassSymbolImpl>? origin=null
              then: RETURN type=<unbound IrClassSymbolImpl> from='public open fun equals (other: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> [operator] declared in <root>.Test'
                CONST Boolean type=<unbound IrClassSymbolImpl> value=false
          VAR IR_TEMPORARY_VARIABLE name:tmp0_other_with_cast type:<root>.Test<T of <root>.Test> [val]
            TYPE_OP type=<root>.Test<T of <root>.Test> origin=CAST typeOperand=<root>.Test<T of <root>.Test>
              GET_VAR 'other: <unbound IrClassSymbolImpl>? declared in <root>.Test.equals' type=<unbound IrClassSymbolImpl>? origin=null
          WHEN type=<unbound IrClassSymbolImpl> origin=null
            BRANCH
              if: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=EXCLEQ
                $this: CALL 'public final fun EQEQ (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EXCLEQ
                  arg0: GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:x signature:[ /Test.x|{}x[0] <- Local[<BF>|FIELD PROPERTY_BACKING_FIELD name:x type:T of <root>.Test visibility:private [final]] ] type:T of <root>.Test visibility:private [final]' type=T of <root>.Test origin=null
                    receiver: GET_VAR '<this>: <root>.Test<T of <root>.Test> declared in <root>.Test.equals' type=<root>.Test<T of <root>.Test> origin=null
                  arg1: GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:x signature:[ /Test.x|{}x[0] <- Local[<BF>|FIELD PROPERTY_BACKING_FIELD name:x type:T of <root>.Test visibility:private [final]] ] type:T of <root>.Test visibility:private [final]' type=T of <root>.Test origin=null
                    receiver: GET_VAR 'val tmp0_other_with_cast: <root>.Test<T of <root>.Test> [val] declared in <root>.Test.equals' type=<root>.Test<T of <root>.Test> origin=null
              then: RETURN type=<unbound IrClassSymbolImpl> from='public open fun equals (other: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> [operator] declared in <root>.Test'
                CONST Boolean type=<unbound IrClassSymbolImpl> value=false
          RETURN type=<unbound IrClassSymbolImpl> from='public open fun equals (other: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> [operator] declared in <root>.Test'
            CONST Boolean type=<unbound IrClassSymbolImpl> value=true
    FUN name:box signature:/box|box(){}[0] visibility:public modality:FINAL <> () returnType:<unbound IrClassSymbolImpl>
      BLOCK_BODY
        RETURN type=<unbound IrClassSymbolImpl> from='public final fun box (): <unbound IrClassSymbolImpl> declared in <root>'
          CALL 'public final fun crash (): <unbound IrClassSymbolImpl> declared in <root>.Test' type=<unbound IrClassSymbolImpl> origin=null
            $this: CONSTRUCTOR_CALL 'public constructor <init> (x: T of <root>.Test) [primary] declared in <root>.Test' type=<root>.Test<<unbound IrClassSymbolImpl>> origin=null
              <class: T>: <unbound IrClassSymbolImpl>
              x: CONST Int type=<unbound IrClassSymbolImpl> value=1
