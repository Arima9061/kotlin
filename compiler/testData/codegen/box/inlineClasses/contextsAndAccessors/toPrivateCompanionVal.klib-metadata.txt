library {
  // module name: <main>

  library fragment {
    // package name: <root>

    // class name: R
    // class name: R.Companion

    public final value class R : kotlin/Any {

      public constructor(r: kotlin/Int)

      public open /* synthesized */ operator fun equals(other: kotlin/Any?): kotlin/Boolean

      public open /* synthesized */ fun hashCode(): kotlin/Int

      public final fun test(): kotlin/String

      public open /* synthesized */ fun toString(): kotlin/String

      private final val r: kotlin/Int
        private final get

      // companion object: Companion

      // nested class: Companion

      // underlying property: r

      // underlying type: kotlin/Int
    }

    public final companion object R.Companion : kotlin/Any {

      private constructor()

      private final val pv: kotlin/String /* = ... */
        private final get
    }

    package {

      public final fun box(): kotlin/String
    }
  }
}
