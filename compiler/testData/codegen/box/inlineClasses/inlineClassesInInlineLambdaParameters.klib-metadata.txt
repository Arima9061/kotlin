library {
  // module name: <main>

  library fragment {
    // package name: <root>

    // class name: L
    // class name: Z

    public final value class L : kotlin/Any {

      public constructor(long: kotlin/Long)

      public open /* synthesized */ operator fun equals(other: kotlin/Any?): kotlin/Boolean

      public open /* synthesized */ fun hashCode(): kotlin/Int

      public open /* synthesized */ fun toString(): kotlin/String

      public final val long: kotlin/Long
        public final get

      // underlying property: long

      // underlying type: kotlin/Long
    }

    public final value class Z : kotlin/Any {

      public constructor(int: kotlin/Int)

      public open /* synthesized */ operator fun equals(other: kotlin/Any?): kotlin/Boolean

      public open /* synthesized */ fun hashCode(): kotlin/Int

      public open /* synthesized */ fun toString(): kotlin/String

      public final val int: kotlin/Int
        public final get

      // underlying property: int

      // underlying type: kotlin/Int
    }

    package {

      public final fun box(): kotlin/String

      public final inline fun <T#0 /* T */, T#1 /* R */> s0(x: T#0, fn: kotlin/Function2<kotlin/Int, T#0, T#1>): T#1

      public final fun testS0L(x: L): L

      public final fun testS0Z(x: Z): Z

      public final fun testWeirdMixL(x: L): L

      public final fun testWeirdMixZ(x: Z): Z

      public final inline fun <T#0 /* T */, T#1 /* R */> weirdMix(x: T#0, fn: kotlin/Function4<kotlin/Int, T#0, kotlin/Long, T#0, T#1>): T#1
    }
  }
}
