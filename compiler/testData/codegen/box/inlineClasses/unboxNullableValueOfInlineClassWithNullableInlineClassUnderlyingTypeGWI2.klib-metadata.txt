library {
  // module name: <main>

  library fragment {
    // package name: <root>

    // class name: BoxAny
    // class name: BoxFoo
    // class name: BoxT
    // class name: BoxT2
    // class name: I32
    // class name: IFoo
    // class name: IcInt
    // class name: Marker

    public final class BoxAny : kotlin/Any {

      public constructor(boxed: kotlin/Any?)

      public final val boxed: kotlin/Any?
        public final get
    }

    public final class BoxFoo : kotlin/Any {

      public constructor(boxed: IFoo?)

      public final val boxed: IFoo?
        public final get
    }

    public final class BoxT<T#0 /* T */> : kotlin/Any {

      public constructor(boxed: T#0)

      public final val boxed: T#0
        public final get
    }

    public final class BoxT2<T#0 /* T */ : kotlin/Any> : kotlin/Any {

      public constructor(boxed: T#0?)

      public final val boxed: T#0?
        public final get
    }

    public final value class I32<T#0 /* T */ : IcInt & Marker> : IFoo {

      public constructor(value: T#0?)

      public open /* synthesized */ operator fun equals(other: kotlin/Any?): kotlin/Boolean

      public open /* synthesized */ fun hashCode(): kotlin/Int

      public open /* synthesized */ fun toString(): kotlin/String

      public final val value: T#0?
        public final get

      // underlying property: value

      // underlying type: T#0?
    }

    public abstract interface IFoo : kotlin/Any {
    }

    public final value class IcInt : Marker {

      public constructor(i: kotlin/Int)

      public open /* synthesized */ operator fun equals(other: kotlin/Any?): kotlin/Boolean

      public open /* synthesized */ fun hashCode(): kotlin/Int

      public open /* synthesized */ fun toString(): kotlin/String

      public final val i: kotlin/Int
        public final get

      // underlying property: i

      // underlying type: kotlin/Int
    }

    public abstract interface Marker : kotlin/Any {
    }

    package {

      public final fun box(): kotlin/String

      public final fun <T#0 /* T */ : IcInt & Marker> boxToNullableAny(x: I32<T#0>?): BoxAny

      public final fun <T#0 /* T */ : IcInt & Marker> boxToNullableInterface(x: I32<T#0>?): BoxFoo

      public final fun <T#0 /* T */ : IcInt & Marker> boxToTypeParameter(x: I32<T#0>?): BoxT<I32<T#0>?>

      public final fun <T#0 /* T */ : IcInt & Marker> boxToTypeParameter2(x: I32<T#0>?): BoxT2<I32<T#0>>

      public final fun <T#0 /* T */ : IcInt & Marker> useNullableI32(x: I32<T#0>?): kotlin/Unit
    }
  }
}
