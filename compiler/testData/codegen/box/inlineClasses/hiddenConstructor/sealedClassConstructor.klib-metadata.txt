library {
  // module name: <main>

  library fragment {
    // package name: <root>

    // class name: S
    // class name: Sealed
    // class name: Test

    public final value class S : kotlin/Any {

      public constructor(string: kotlin/String)

      public open /* synthesized */ operator fun equals(other: kotlin/Any?): kotlin/Boolean

      public open /* synthesized */ fun hashCode(): kotlin/Int

      public open /* synthesized */ fun toString(): kotlin/String

      public final val string: kotlin/String
        public final get

      // underlying property: string

      // underlying type: kotlin/String
    }

    public sealed class Sealed : kotlin/Any {

      protected constructor(x: S)

      public final val x: S
        public final get

      // sealed subclass: Test
    }

    public final class Test : Sealed {

      public constructor(x: S)
    }

    package {

      public final fun box(): kotlin/String
    }
  }
}
