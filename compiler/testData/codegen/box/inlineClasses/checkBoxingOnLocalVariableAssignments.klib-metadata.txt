library {
  // module name: <main>

  library fragment {
    // package name: <root>

    // class name: InlineNotNullPrimitive
    // class name: InlineNotNullReference
    // class name: InlineNullablePrimitive
    // class name: InlineNullableReference

    public final value class InlineNotNullPrimitive : kotlin/Any {

      public constructor(x: kotlin/Int)

      public open /* synthesized */ operator fun equals(other: kotlin/Any?): kotlin/Boolean

      public open /* synthesized */ fun hashCode(): kotlin/Int

      public open /* synthesized */ fun toString(): kotlin/String

      public final val x: kotlin/Int
        public final get

      // underlying property: x

      // underlying type: kotlin/Int
    }

    public final value class InlineNotNullReference : kotlin/Any {

      public constructor(a: kotlin/Any)

      public open /* synthesized */ operator fun equals(other: kotlin/Any?): kotlin/Boolean

      public open /* synthesized */ fun hashCode(): kotlin/Int

      public open /* synthesized */ fun toString(): kotlin/String

      public final val a: kotlin/Any
        public final get

      // underlying property: a

      // underlying type: kotlin/Any
    }

    public final value class InlineNullablePrimitive : kotlin/Any {

      public constructor(x: kotlin/Int?)

      public open /* synthesized */ operator fun equals(other: kotlin/Any?): kotlin/Boolean

      public open /* synthesized */ fun hashCode(): kotlin/Int

      public open /* synthesized */ fun toString(): kotlin/String

      public final val x: kotlin/Int?
        public final get

      // underlying property: x

      // underlying type: kotlin/Int?
    }

    public final value class InlineNullableReference : kotlin/Any {

      public constructor(a: kotlin/Any?)

      public open /* synthesized */ operator fun equals(other: kotlin/Any?): kotlin/Boolean

      public open /* synthesized */ fun hashCode(): kotlin/Int

      public open /* synthesized */ fun toString(): kotlin/String

      public final val a: kotlin/Any?
        public final get

      // underlying property: a

      // underlying type: kotlin/Any?
    }

    package {

      public final fun box(): kotlin/String

      public final fun test1(a: InlineNotNullPrimitive): kotlin/Unit

      public final fun test2(b: InlineNullablePrimitive): kotlin/Unit

      public final fun test3(c: InlineNotNullReference): kotlin/Unit

      public final fun test4(d: InlineNullableReference): kotlin/Unit
    }
  }
}
