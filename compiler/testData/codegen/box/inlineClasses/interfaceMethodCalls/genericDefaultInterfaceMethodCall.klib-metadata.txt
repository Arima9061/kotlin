library {
  // module name: <main>

  library fragment {
    // package name: <root>

    // class name: IFoo
    // class name: Z

    public abstract interface IFoo<T#0 /* T */ : IFoo<T#0>> : kotlin/Any {

      public abstract fun bar(): kotlin/String

      public open fun foo(t: T#0): kotlin/String
    }

    public final value class Z : IFoo<Z> {

      public constructor(x: kotlin/Int)

      public open fun bar(): kotlin/String

      public open /* synthesized */ operator fun equals(other: kotlin/Any?): kotlin/Boolean

      public open /* synthesized */ fun hashCode(): kotlin/Int

      public open /* synthesized */ fun toString(): kotlin/String

      public final val x: kotlin/Int
        public final get

      // underlying property: x

      // underlying type: kotlin/Int
    }

    package {

      public final fun box(): kotlin/String
    }
  }
}
