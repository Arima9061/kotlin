library {
  // module name: <main>

  library fragment {
    // package name: <root>

    // class name: C
    // class name: D
    // class name: E

    public abstract interface C<T#0 /* T */> : kotlin/Any {

      public abstract fun foo(x: T#0): kotlin/String
    }

    public open class D<T#0 /* T */> : C<kotlin/Result<T#0>> {

      public constructor()

      public open fun foo(x: kotlin/Result<T#0>): kotlin/String
    }

    public final class E : D<kotlin/String> {

      public constructor()

      public open fun foo(x: kotlin/Result<kotlin/String>): kotlin/String
    }

    package {

      public final fun <T#0 /* T */> C<kotlin/Result<T#0>>.bar(x: T#0): kotlin/String

      public final fun box(): kotlin/String

      public final fun <T#0 /* T */> kotlin/Result<T#0>.get(): T#0
    }
  }
}
