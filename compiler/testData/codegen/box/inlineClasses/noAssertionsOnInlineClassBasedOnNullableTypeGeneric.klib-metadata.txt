library {
  // module name: <main>

  library fragment {
    // package name: <root>

    // class name: Result

    public final value class Result<T#0 /* T */> : kotlin/Any {

      public constructor(a: T#0?)

      public open /* synthesized */ operator fun equals(other: kotlin/Any?): kotlin/Boolean

      public open /* synthesized */ fun hashCode(): kotlin/Int

      public open /* synthesized */ fun toString(): kotlin/String

      public final val a: T#0?
        public final get

      // underlying property: a

      // underlying type: T#0?
    }

    package {

      public final fun box(): kotlin/String

      public final fun Result<kotlin/Int>.extension(): Result<kotlin/Int>

      public final fun <T#0 /* T */> idResult(r: Result<T#0>): Result<T#0>

      public final fun resultOfIntToResultOfInt(r: Result<kotlin/Int>): Result<kotlin/Int>
    }
  }
}
