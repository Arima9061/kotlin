library {
  // module name: <main>

  library fragment {
    // package name: <root>

    // class name: ICIStr
    // class name: ICIStrArray
    // class name: ICStr

    public final value class ICIStr<T#0 /* T */ : ICStr> : kotlin/Any {

      public constructor(value: T#0)

      public open /* synthesized */ operator fun equals(other: kotlin/Any?): kotlin/Boolean

      public open /* synthesized */ fun hashCode(): kotlin/Int

      public open /* synthesized */ fun toString(): kotlin/String

      public final val value: T#0
        public final get

      // underlying property: value

      // underlying type: T#0
    }

    public final value class ICIStrArray<T#0 /* T */ : ICStr> : kotlin/Any {

      public constructor(value: kotlin/Array<T#0>)

      public open /* synthesized */ operator fun equals(other: kotlin/Any?): kotlin/Boolean

      public open /* synthesized */ fun hashCode(): kotlin/Int

      public open /* synthesized */ fun toString(): kotlin/String

      public final val value: kotlin/Array<T#0>
        public final get

      // underlying property: value

      // underlying type: kotlin/Array<T#0>
    }

    public final value class ICStr : kotlin/Any {

      public constructor(value: kotlin/String)

      public open /* synthesized */ operator fun equals(other: kotlin/Any?): kotlin/Boolean

      public open /* synthesized */ fun hashCode(): kotlin/Int

      public open /* synthesized */ fun toString(): kotlin/String

      public final val value: kotlin/String
        public final get

      // underlying property: value

      // underlying type: kotlin/String
    }

    package {

      public final fun box(): kotlin/String
    }
  }
}
