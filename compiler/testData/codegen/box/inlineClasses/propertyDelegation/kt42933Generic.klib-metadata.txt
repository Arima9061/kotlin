library {
  // module name: <main>

  library fragment {
    // package name: <root>

    // class name: Delegate
    // class name: Kla1

    public final class Delegate : kotlin/Any {

      public constructor()

      public final operator fun getValue(t: kotlin/Any?, p: kotlin/Any): kotlin/String
    }

    public final value class Kla1<T#0 /* T */ : kotlin/Int> : kotlin/Any {

      public constructor(default: T#0)

      public open /* synthesized */ operator fun equals(other: kotlin/Any?): kotlin/Boolean

      public final fun getValue(): kotlin/String

      public open /* synthesized */ fun hashCode(): kotlin/Int

      public open /* synthesized */ fun toString(): kotlin/String

      public final val default: T#0
        public final get

      // underlying property: default

      // underlying type: T#0
    }

    package {

      public final fun box(): kotlin/String
    }
  }
}
