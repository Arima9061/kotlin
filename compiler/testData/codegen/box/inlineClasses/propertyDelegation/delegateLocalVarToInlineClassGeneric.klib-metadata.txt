library {
  // module name: <main>

  library fragment {
    // package name: <root>

    // class name: DelegateInt
    // class name: DelegateLong
    // class name: DelegateStr

    public final value class DelegateInt<T#0 /* T */ : kotlin/Int> : kotlin/Any {

      public constructor(ignored: T#0)

      public open /* synthesized */ operator fun equals(other: kotlin/Any?): kotlin/Boolean

      public final operator fun getValue(thisRef: kotlin/Any?, prop: kotlin/Any?): kotlin/Int

      public open /* synthesized */ fun hashCode(): kotlin/Int

      public final operator fun setValue(thisRef: kotlin/Any?, prop: kotlin/Any?, newValue: kotlin/Int): kotlin/Unit

      public open /* synthesized */ fun toString(): kotlin/String

      public final val ignored: T#0
        public final get

      // underlying property: ignored

      // underlying type: T#0
    }

    public final value class DelegateLong<T#0 /* T */ : kotlin/Long> : kotlin/Any {

      public constructor(ignored: T#0)

      public open /* synthesized */ operator fun equals(other: kotlin/Any?): kotlin/Boolean

      public final operator fun getValue(thisRef: kotlin/Any?, prop: kotlin/Any?): kotlin/Int

      public open /* synthesized */ fun hashCode(): kotlin/Int

      public final operator fun setValue(thisRef: kotlin/Any?, prop: kotlin/Any?, newValue: kotlin/Int): kotlin/Unit

      public open /* synthesized */ fun toString(): kotlin/String

      public final val ignored: T#0
        public final get

      // underlying property: ignored

      // underlying type: T#0
    }

    public final value class DelegateStr<T#0 /* T */ : kotlin/String> : kotlin/Any {

      public constructor(ignored: T#0)

      public open /* synthesized */ operator fun equals(other: kotlin/Any?): kotlin/Boolean

      public final operator fun getValue(thisRef: kotlin/Any?, prop: kotlin/Any?): kotlin/Int

      public open /* synthesized */ fun hashCode(): kotlin/Int

      public final operator fun setValue(thisRef: kotlin/Any?, prop: kotlin/Any?, newValue: kotlin/Int): kotlin/Unit

      public open /* synthesized */ fun toString(): kotlin/String

      public final val ignored: T#0
        public final get

      // underlying property: ignored

      // underlying type: T#0
    }

    package {

      public final fun box(): kotlin/String

      private final fun testDelegateInt(): kotlin/Unit

      private final fun testDelegateLong(): kotlin/Unit

      private final fun testDelegateStr(): kotlin/Unit

      public final var backing: kotlin/Int
        public final get
        public final set

      public final var setterInvoked: kotlin/Int
        public final get
        public final set
    }
  }
}
