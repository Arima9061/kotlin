library {
  // module name: <main>

  library fragment {
    // package name: <root>

    // class name: Delegate
    // class name: Demo
    // class name: ICInt
    // class name: ICLong
    // class name: ICOverIC

    public final class Delegate<T#0 /* T */> : kotlin/Any {

      public constructor(f: kotlin/Function0<T#0>)

      public final operator fun getValue(thisRef: kotlin/Any?, property: kotlin/reflect/KProperty<*>): T#0

      public final operator fun setValue(thisRef: kotlin/Any?, property: kotlin/reflect/KProperty<*>, value: T#0): kotlin/Unit

      public final var f: kotlin/Function0<T#0>
        public final get
        public final set
    }

    public final object Demo : kotlin/Any {

      private constructor()

      public final /* delegated */ val i0: ICInt<kotlin/Int>
        public final /* non-default */ get

      public final /* delegated */ val i1: ICInt<kotlin/Int>
        public final /* non-default */ get

      public final /* delegated */ var i2: ICInt<kotlin/Int>
        public final /* non-default */ get
        public final /* non-default */ set(<set-?>: ICInt<kotlin/Int>)

      public final /* delegated */ val l0: ICLong<kotlin/Long>
        public final /* non-default */ get

      public final /* delegated */ val l1: ICLong<kotlin/Long>
        public final /* non-default */ get

      public final /* delegated */ var l2: ICLong<kotlin/Long>
        public final /* non-default */ get
        public final /* non-default */ set(<set-?>: ICLong<kotlin/Long>)

      public final /* delegated */ val o0: ICOverIC<ICLong<kotlin/Long>>
        public final /* non-default */ get

      public final /* delegated */ val o1: ICOverIC<ICLong<kotlin/Long>>
        public final /* non-default */ get

      public final /* delegated */ var o2: ICOverIC<ICLong<kotlin/Long>>
        public final /* non-default */ get
        public final /* non-default */ set(<set-?>: ICOverIC<ICLong<kotlin/Long>>)
    }

    public final value class ICInt<T#0 /* T */ : kotlin/Int> : kotlin/Any {

      public constructor(i: T#0)

      public open /* synthesized */ operator fun equals(other: kotlin/Any?): kotlin/Boolean

      public open /* synthesized */ fun hashCode(): kotlin/Int

      public open /* synthesized */ fun toString(): kotlin/String

      public final val i: T#0
        public final get

      // underlying property: i

      // underlying type: T#0
    }

    public final value class ICLong<T#0 /* T */ : kotlin/Long> : kotlin/Any {

      public constructor(l: T#0)

      public open /* synthesized */ operator fun equals(other: kotlin/Any?): kotlin/Boolean

      public open /* synthesized */ fun hashCode(): kotlin/Int

      public open /* synthesized */ fun toString(): kotlin/String

      public final val l: T#0
        public final get

      // underlying property: l

      // underlying type: T#0
    }

    public final value class ICOverIC<T#0 /* T */ : ICLong<kotlin/Long>> : kotlin/Any {

      public constructor(o: T#0)

      public open /* synthesized */ operator fun equals(other: kotlin/Any?): kotlin/Boolean

      public open /* synthesized */ fun hashCode(): kotlin/Int

      public open /* synthesized */ fun toString(): kotlin/String

      public final val o: T#0
        public final get

      // underlying property: o

      // underlying type: T#0
    }

    package {

      public final fun box(): kotlin/String
    }
  }
}
