library {
  // module name: <main>

  library fragment {
    // package name: <root>

    // class name: DelegateInt
    // class name: DelegateLong
    // class name: DelegateStr

    public final value class DelegateInt : kotlin/Any {

      public constructor(ignored: kotlin/Int)

      public open /* synthesized */ operator fun equals(other: kotlin/Any?): kotlin/Boolean

      public final operator fun getValue(thisRef: kotlin/Any?, prop: kotlin/Any?): kotlin/Int

      public open /* synthesized */ fun hashCode(): kotlin/Int

      public final operator fun setValue(thisRef: kotlin/Any?, prop: kotlin/Any?, newValue: kotlin/Int): kotlin/Unit

      public open /* synthesized */ fun toString(): kotlin/String

      public final val ignored: kotlin/Int
        public final get

      // underlying property: ignored

      // underlying type: kotlin/Int
    }

    public final value class DelegateLong : kotlin/Any {

      public constructor(ignored: kotlin/Long)

      public open /* synthesized */ operator fun equals(other: kotlin/Any?): kotlin/Boolean

      public final operator fun getValue(thisRef: kotlin/Any?, prop: kotlin/Any?): kotlin/Int

      public open /* synthesized */ fun hashCode(): kotlin/Int

      public final operator fun setValue(thisRef: kotlin/Any?, prop: kotlin/Any?, newValue: kotlin/Int): kotlin/Unit

      public open /* synthesized */ fun toString(): kotlin/String

      public final val ignored: kotlin/Long
        public final get

      // underlying property: ignored

      // underlying type: kotlin/Long
    }

    public final value class DelegateStr : kotlin/Any {

      public constructor(ignored: kotlin/String)

      public open /* synthesized */ operator fun equals(other: kotlin/Any?): kotlin/Boolean

      public final operator fun getValue(thisRef: kotlin/Any?, prop: kotlin/Any?): kotlin/Int

      public open /* synthesized */ fun hashCode(): kotlin/Int

      public final operator fun setValue(thisRef: kotlin/Any?, prop: kotlin/Any?, newValue: kotlin/Int): kotlin/Unit

      public open /* synthesized */ fun toString(): kotlin/String

      public final val ignored: kotlin/String
        public final get

      // underlying property: ignored

      // underlying type: kotlin/String
    }

    package {

      public final fun box(): kotlin/String

      private final fun testDelegateInt(): kotlin/Unit

      private final fun testDelegateLong(): kotlin/Unit

      private final fun testDelegateStr(): kotlin/Unit

      public final var backing: kotlin/Int
        public final get
        public final set

      public final var setterInvoked: kotlin/Int
        public final get
        public final set
    }
  }
}
