library {
  // module name: <main>

  library fragment {
    // package name: <root>

    // class name: Foo

    public final value class Foo<T#0 /* T */ : kotlin/Int> : kotlin/Any {

      public constructor(value: T#0)

      public open /* synthesized */ operator fun equals(other: kotlin/Any?): kotlin/Boolean

      public open /* synthesized */ fun hashCode(): kotlin/Int

      public open /* synthesized */ fun toString(): kotlin/String

      public final val value: T#0
        public final get

      // underlying property: value

      // underlying type: T#0
    }

    package {

      public final fun box(): kotlin/String

      public final fun <T#0 /* T */> id(x: T#0): T#0

      public final fun <T#0 /* T */> T#0.idExtension(): T#0

      public final inline fun <T#0 /* T */> inlinedId(x: T#0): T#0

      public final inline fun <T#0 /* T */> T#0.inlinedIdExtension(): T#0

      public final fun <T#0 /* T */ : kotlin/Int> test(f: Foo<T#0>): kotlin/Unit
    }
  }
}
