library {
  // module name: <main>

  library fragment {
    // package name: <root>

    // class name: Delegate
    // class name: F
    // class name: F.A

    public final class Delegate : kotlin/Any {

      public constructor()

      public final operator fun getValue(t: F.A, p: kotlin/reflect/KProperty<*>): kotlin/Int
    }

    public final class F : kotlin/Any {

      public constructor()

      public final fun foo(): kotlin/Int

      public final /* delegated */ val F.A.prop: kotlin/Int
        public final /* non-default */ get

      // nested class: A
    }

    public final class F.A : kotlin/Any {

      public constructor()
    }

    package {

      public final fun box(): kotlin/String
    }
  }
}
