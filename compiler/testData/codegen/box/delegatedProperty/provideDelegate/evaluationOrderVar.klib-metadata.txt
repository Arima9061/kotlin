library {
  // module name: <main>

  library fragment {
    // package name: <root>

    package {

      public final fun box(): kotlin/String

      public final operator fun kotlin/String.getValue(receiver: kotlin/Any?, p: kotlin/Any): kotlin/String

      public final operator fun kotlin/String.provideDelegate(host: kotlin/Any?, p: kotlin/Any): kotlin/String

      public final inline fun <T#0 /* T */> runLogged(entry: kotlin/String, action: kotlin/Function0<T#0>): T#0

      public final operator fun kotlin/String.setValue(receiver: kotlin/Any?, p: kotlin/Any, newValue: kotlin/String): kotlin/Unit

      public final val dispatcher: kotlin/collections/HashMap<kotlin/String, kotlin/String>
        public final get

      public final var log: kotlin/String
        public final get
        public final set

      public final /* delegated */ var testK: kotlin/String
        public final /* non-default */ get
        public final /* non-default */ set(<set-?>: kotlin/String)

      public final /* delegated */ var testO: kotlin/String
        public final /* non-default */ get
        public final /* non-default */ set(<set-?>: kotlin/String)

      public final val testOK: kotlin/String
        public final get
    }
  }
}
