library {
  // module name: <main>

  library fragment {
    // package name: <root>

    // class name: MyClass

    public final class MyClass : kotlin/Any {

      public constructor(value: kotlin/String)

      public final val value: kotlin/String
        public final get
    }

    package {

      public final fun box(): kotlin/String

      public final operator fun kotlin/String.getValue(receiver: kotlin/Any?, p: kotlin/Any): kotlin/String

      public final operator fun MyClass.provideDelegate(host: kotlin/Any?, p: kotlin/Any): kotlin/String

      public final inline fun <T#0 /* T */> runLogged(entry: kotlin/String, action: kotlin/Function0<T#0>): T#0

      public final var log: kotlin/String
        public final get
        public final set

      public final /* delegated */ val testK: kotlin/String
        public final /* non-default */ get

      public final /* delegated */ val testO: kotlin/String
        public final /* non-default */ get

      public final val testOK: kotlin/String
        public final get
    }
  }
}
