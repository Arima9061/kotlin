library {
  // module name: <main>

  library fragment {
    // package name: <root>

    // class name: Delegate

    public final class Delegate<T#0 /* T */> : kotlin/Any {

      public constructor(initializer: T#0)

      public final operator fun getValue(thisRef: kotlin/Any?, property: kotlin/reflect/KProperty<*>): T#0

      public final val initializer: T#0
        public final get
    }

    package {

      public final fun box(): kotlin/String

      public final fun <T#0 /* T */> myDelegate(initializer: T#0): Delegate<T#0>

      public final operator fun <T#0 /* T */ : kotlin/Any> T#0.provideDelegate(receiver: kotlin/Any?, property: kotlin/reflect/KProperty<*>): T#0

      public final /* delegated */ val test1: kotlin/collections/Map<kotlin/String, kotlin/String>
        public final /* non-default */ get

      public final /* delegated */ val test2: kotlin/String
        public final /* non-default */ get
    }
  }
}
