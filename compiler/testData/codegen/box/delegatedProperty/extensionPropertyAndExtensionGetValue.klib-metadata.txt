library {
  // module name: <main>

  library fragment {
    // package name: <root>

    // class name: A
    // class name: B
    // class name: I

    public final class A : kotlin/Any {

      public constructor(o: kotlin/String)

      public final val o: kotlin/String
        public final get
    }

    public final class B : I {

      public constructor(k: kotlin/String)

      public open val k: kotlin/String
        public open get
    }

    public abstract interface I : kotlin/Any {

      public abstract val k: kotlin/String
        public abstract get
    }

    package {

      public final fun box(): kotlin/String

      public final operator inline fun A.getValue(thisRef: I, property: kotlin/Any): kotlin/String

      public final /* delegated */ val B.prop: kotlin/String
        public final /* non-default */ get
    }
  }
}
