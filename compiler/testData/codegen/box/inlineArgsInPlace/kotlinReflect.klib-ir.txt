MODULE_FRAGMENT name:<main>
  FILE fqName:<root> fileName:/kotlinReflect.kt
    CLASS INTERFACE name:Foo signature:/Foo|null[0] modality:ABSTRACT visibility:public superTypes:[<unbound IrClassSymbolImpl>]
      $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:<root>.Foo
      PROPERTY name:foos signature:/Foo.foos|{}foos[0] visibility:public modality:ABSTRACT [val]
        FUN DEFAULT_PROPERTY_ACCESSOR name:<get-foos> signature:/Foo.foos.<get-foos>|<get-foos>(){}[0] visibility:public modality:ABSTRACT <> ($this:<root>.Foo) returnType:<unbound IrClassSymbolImpl><<root>.Foo>
          correspondingProperty: PROPERTY name:foos signature:/Foo.foos|{}foos[0] visibility:public modality:ABSTRACT [val]
          $this: VALUE_PARAMETER name:<this> type:<root>.Foo
    FUN name:firstIsInstanceOrNull signature:/firstIsInstanceOrNull|firstIsInstanceOrNull@kotlin.sequences.Sequence<*>(){0ยง<kotlin.Any>}[0] visibility:public modality:FINAL <T> ($receiver:<unbound IrClassSymbolImpl><*>) returnType:T of <root>.firstIsInstanceOrNull? [inline]
      TYPE_PARAMETER name:T index:0 variance: signature:[ /firstIsInstanceOrNull|firstIsInstanceOrNull@kotlin.sequences.Sequence<*>(){0ยง<kotlin.Any>}[0] <- Local[<TP>,0|TYPE_PARAMETER name:T index:0 variance: superTypes:[kotlin.Any] reified:true] ] superTypes:[<unbound IrClassSymbolImpl>] reified:true
      $receiver: VALUE_PARAMETER name:<this> type:<unbound IrClassSymbolImpl><*>
      BLOCK_BODY
        BLOCK type=<unbound IrClassSymbolImpl> origin=FOR_LOOP
          VAR FOR_LOOP_ITERATOR name:<iterator> type:<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>?> [val]
            CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>?> origin=null
              $this: GET_VAR '<this>: <unbound IrClassSymbolImpl><*> declared in <root>.firstIsInstanceOrNull' type=<unbound IrClassSymbolImpl><*> origin=null
          WHILE label=null origin=FOR_LOOP_INNER_WHILE
            condition: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=FOR_LOOP_HAS_NEXT
              $this: GET_VAR 'val <iterator>: <unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>?> [val] declared in <root>.firstIsInstanceOrNull' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>?> origin=null
            body: BLOCK type=<unbound IrClassSymbolImpl> origin=FOR_LOOP_INNER_WHILE
              VAR FOR_LOOP_VARIABLE name:element type:<unbound IrClassSymbolImpl>? [val]
                CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl>? origin=FOR_LOOP_NEXT
                  $this: GET_VAR 'val <iterator>: <unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>?> [val] declared in <root>.firstIsInstanceOrNull' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>?> origin=null
              WHEN type=<unbound IrClassSymbolImpl> origin=IF
                BRANCH
                  if: TYPE_OP type=<unbound IrClassSymbolImpl> origin=INSTANCEOF typeOperand=T of <root>.firstIsInstanceOrNull
                    GET_VAR 'val element: <unbound IrClassSymbolImpl>? [val] declared in <root>.firstIsInstanceOrNull' type=<unbound IrClassSymbolImpl>? origin=null
                  then: RETURN type=<unbound IrClassSymbolImpl> from='public final fun firstIsInstanceOrNull <T> (): T of <root>.firstIsInstanceOrNull? [inline] declared in <root>'
                    TYPE_OP type=T of <root>.firstIsInstanceOrNull origin=IMPLICIT_CAST typeOperand=T of <root>.firstIsInstanceOrNull
                      GET_VAR 'val element: <unbound IrClassSymbolImpl>? [val] declared in <root>.firstIsInstanceOrNull' type=<unbound IrClassSymbolImpl>? origin=null
        RETURN type=<unbound IrClassSymbolImpl> from='public final fun firstIsInstanceOrNull <T> (): T of <root>.firstIsInstanceOrNull? [inline] declared in <root>'
          CONST Null type=<unbound IrClassSymbolImpl>? value=null
    FUN name:faultyLvt signature:/faultyLvt|faultyLvt(){}[0] visibility:public modality:FINAL <> () returnType:<unbound IrClassSymbolImpl>
      BLOCK_BODY
        TYPE_OP type=<unbound IrClassSymbolImpl> origin=IMPLICIT_COERCION_TO_UNIT typeOperand=<unbound IrClassSymbolImpl>
          CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl><<root>.Foo> origin=null
            <1>: <root>.Foo
            $receiver: BLOCK type=<unbound IrClassSymbolImpl><<root>.Foo>? origin=SAFE_CALL
              VAR IR_TEMPORARY_VARIABLE name:tmp0_safe_receiver type:<root>.Foo? [val]
                CALL 'public final fun firstIsInstanceOrNull <T> (): T of <root>.firstIsInstanceOrNull? [inline] declared in <root>' type=<root>.Foo? origin=null
                  <T>: <root>.Foo
                  $receiver: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl><<root>.Foo> origin=null
                    <1>: <root>.Foo
              WHEN type=<unbound IrClassSymbolImpl><<root>.Foo>? origin=null
                BRANCH
                  if: CALL 'public final fun EQEQ (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EQEQ
                    arg0: GET_VAR 'val tmp0_safe_receiver: <root>.Foo? [val] declared in <root>.faultyLvt' type=<root>.Foo? origin=null
                    arg1: CONST Null type=<unbound IrClassSymbolImpl>? value=null
                  then: CONST Null type=<unbound IrClassSymbolImpl>? value=null
                BRANCH
                  if: CONST Boolean type=<unbound IrClassSymbolImpl> value=true
                  then: CALL 'public abstract fun <get-foos> (): <unbound IrClassSymbolImpl><<root>.Foo> declared in <root>.Foo' type=<unbound IrClassSymbolImpl><<root>.Foo> origin=GET_PROPERTY
                    $this: GET_VAR 'val tmp0_safe_receiver: <root>.Foo? [val] declared in <root>.faultyLvt' type=<root>.Foo? origin=null
        TYPE_OP type=<unbound IrClassSymbolImpl> origin=IMPLICIT_COERCION_TO_UNIT typeOperand=<unbound IrClassSymbolImpl>
          CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl><<root>.Foo> origin=null
            <1>: <root>.Foo
            <2>: <root>.Foo
            $receiver: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl><<root>.Foo> origin=null
              <1>: <root>.Foo
            1: FUN_EXPR type=<unbound IrClassSymbolImpl><<root>.Foo, <root>.Foo> origin=LAMBDA
              FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL <> (it:<root>.Foo) returnType:<root>.Foo
                VALUE_PARAMETER name:it index:0 type:<root>.Foo
                BLOCK_BODY
                  RETURN type=<unbound IrClassSymbolImpl> from='local final fun <anonymous> (it: <root>.Foo): <root>.Foo declared in <root>.faultyLvt'
                    GET_VAR 'it: <root>.Foo declared in <root>.faultyLvt.<anonymous>' type=<root>.Foo origin=null
    FUN name:box signature:/box|box(){}[0] visibility:public modality:FINAL <> () returnType:<unbound IrClassSymbolImpl>
      BLOCK_BODY
        CALL 'public final fun faultyLvt (): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
        RETURN type=<unbound IrClassSymbolImpl> from='public final fun box (): <unbound IrClassSymbolImpl> declared in <root>'
          CONST String type=<unbound IrClassSymbolImpl> value="OK"
