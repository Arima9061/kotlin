MODULE_FRAGMENT name:<main>
  FILE fqName:<root> fileName:/kt3867.kt
    FUN name:fail signature:/fail|fail(){}[0] visibility:public modality:FINAL <> () returnType:<unbound IrClassSymbolImpl>
      BLOCK_BODY
        RETURN type=<unbound IrClassSymbolImpl> from='public final fun fail (): <unbound IrClassSymbolImpl> declared in <root>'
          WHEN type=<unbound IrClassSymbolImpl> origin=IF
            BRANCH
              if: CONST Boolean type=<unbound IrClassSymbolImpl> value=true
              then: THROW type=<unbound IrClassSymbolImpl>
                CONSTRUCTOR_CALL 'UNBOUND IrConstructorSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
            BRANCH
              if: CONST Boolean type=<unbound IrClassSymbolImpl> value=true
              then: CONST Int type=<unbound IrClassSymbolImpl> value=1
    FUN name:test1 signature:/test1|test1(){}[0] visibility:public modality:FINAL <> () returnType:<unbound IrClassSymbolImpl>
      BLOCK_BODY
        VAR name:r type:<unbound IrClassSymbolImpl> [var]
          CONST String type=<unbound IrClassSymbolImpl> value=""
        TRY type=<unbound IrClassSymbolImpl>
          try: BLOCK type=<unbound IrClassSymbolImpl> origin=null
            TRY type=<unbound IrClassSymbolImpl>
              try: BLOCK type=<unbound IrClassSymbolImpl> origin=null
                SET_VAR 'var r: <unbound IrClassSymbolImpl> [var] declared in <root>.test1' type=<unbound IrClassSymbolImpl> origin=PLUSEQ
                  CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=PLUSEQ
                    $this: GET_VAR 'var r: <unbound IrClassSymbolImpl> [var] declared in <root>.test1' type=<unbound IrClassSymbolImpl> origin=PLUSEQ
                    1: CONST String type=<unbound IrClassSymbolImpl> value="Try"
                RETURN type=<unbound IrClassSymbolImpl> from='public final fun test1 (): <unbound IrClassSymbolImpl> declared in <root>'
                  GET_VAR 'var r: <unbound IrClassSymbolImpl> [var] declared in <root>.test1' type=<unbound IrClassSymbolImpl> origin=null
              CATCH parameter=val e: <unbound IrClassSymbolImpl> [val] declared in <root>.test1
                VAR CATCH_PARAMETER name:e type:<unbound IrClassSymbolImpl> [val]
                BLOCK type=<unbound IrClassSymbolImpl> origin=null
                  SET_VAR 'var r: <unbound IrClassSymbolImpl> [var] declared in <root>.test1' type=<unbound IrClassSymbolImpl> origin=PLUSEQ
                    CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=PLUSEQ
                      $this: GET_VAR 'var r: <unbound IrClassSymbolImpl> [var] declared in <root>.test1' type=<unbound IrClassSymbolImpl> origin=PLUSEQ
                      1: CONST String type=<unbound IrClassSymbolImpl> value="Catch"
                  RETURN type=<unbound IrClassSymbolImpl> from='public final fun test1 (): <unbound IrClassSymbolImpl> declared in <root>'
                    GET_VAR 'var r: <unbound IrClassSymbolImpl> [var] declared in <root>.test1' type=<unbound IrClassSymbolImpl> origin=null
              finally: BLOCK type=<unbound IrClassSymbolImpl> origin=null
                SET_VAR 'var r: <unbound IrClassSymbolImpl> [var] declared in <root>.test1' type=<unbound IrClassSymbolImpl> origin=PLUSEQ
                  CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=PLUSEQ
                    $this: GET_VAR 'var r: <unbound IrClassSymbolImpl> [var] declared in <root>.test1' type=<unbound IrClassSymbolImpl> origin=PLUSEQ
                    1: CONST String type=<unbound IrClassSymbolImpl> value="Finally"
                TYPE_OP type=<unbound IrClassSymbolImpl> origin=IMPLICIT_COERCION_TO_UNIT typeOperand=<unbound IrClassSymbolImpl>
                  CALL 'public final fun fail (): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
          CATCH parameter=val e: <unbound IrClassSymbolImpl> [val] declared in <root>.test1
            VAR CATCH_PARAMETER name:e type:<unbound IrClassSymbolImpl> [val]
            BLOCK type=<unbound IrClassSymbolImpl> origin=null
              RETURN type=<unbound IrClassSymbolImpl> from='public final fun test1 (): <unbound IrClassSymbolImpl> declared in <root>'
                GET_VAR 'var r: <unbound IrClassSymbolImpl> [var] declared in <root>.test1' type=<unbound IrClassSymbolImpl> origin=null
    FUN name:test2 signature:/test2|test2(){}[0] visibility:public modality:FINAL <> () returnType:<unbound IrClassSymbolImpl>
      BLOCK_BODY
        VAR name:r type:<unbound IrClassSymbolImpl> [var]
          CONST String type=<unbound IrClassSymbolImpl> value=""
        TRY type=<unbound IrClassSymbolImpl>
          try: BLOCK type=<unbound IrClassSymbolImpl> origin=null
            TRY type=<unbound IrClassSymbolImpl>
              try: BLOCK type=<unbound IrClassSymbolImpl> origin=null
                SET_VAR 'var r: <unbound IrClassSymbolImpl> [var] declared in <root>.test2' type=<unbound IrClassSymbolImpl> origin=PLUSEQ
                  CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=PLUSEQ
                    $this: GET_VAR 'var r: <unbound IrClassSymbolImpl> [var] declared in <root>.test2' type=<unbound IrClassSymbolImpl> origin=PLUSEQ
                    1: CONST String type=<unbound IrClassSymbolImpl> value="Try"
              CATCH parameter=val e: <unbound IrClassSymbolImpl> [val] declared in <root>.test2
                VAR CATCH_PARAMETER name:e type:<unbound IrClassSymbolImpl> [val]
                BLOCK type=<unbound IrClassSymbolImpl> origin=null
                  SET_VAR 'var r: <unbound IrClassSymbolImpl> [var] declared in <root>.test2' type=<unbound IrClassSymbolImpl> origin=PLUSEQ
                    CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=PLUSEQ
                      $this: GET_VAR 'var r: <unbound IrClassSymbolImpl> [var] declared in <root>.test2' type=<unbound IrClassSymbolImpl> origin=PLUSEQ
                      1: CONST String type=<unbound IrClassSymbolImpl> value="Catch"
              finally: BLOCK type=<unbound IrClassSymbolImpl> origin=null
                SET_VAR 'var r: <unbound IrClassSymbolImpl> [var] declared in <root>.test2' type=<unbound IrClassSymbolImpl> origin=PLUSEQ
                  CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=PLUSEQ
                    $this: GET_VAR 'var r: <unbound IrClassSymbolImpl> [var] declared in <root>.test2' type=<unbound IrClassSymbolImpl> origin=PLUSEQ
                    1: CONST String type=<unbound IrClassSymbolImpl> value="Finally"
                TYPE_OP type=<unbound IrClassSymbolImpl> origin=IMPLICIT_COERCION_TO_UNIT typeOperand=<unbound IrClassSymbolImpl>
                  CALL 'public final fun fail (): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
          CATCH parameter=val e: <unbound IrClassSymbolImpl> [val] declared in <root>.test2
            VAR CATCH_PARAMETER name:e type:<unbound IrClassSymbolImpl> [val]
            BLOCK type=<unbound IrClassSymbolImpl> origin=null
              RETURN type=<unbound IrClassSymbolImpl> from='public final fun test2 (): <unbound IrClassSymbolImpl> declared in <root>'
                GET_VAR 'var r: <unbound IrClassSymbolImpl> [var] declared in <root>.test2' type=<unbound IrClassSymbolImpl> origin=null
        RETURN type=<unbound IrClassSymbolImpl> from='public final fun test2 (): <unbound IrClassSymbolImpl> declared in <root>'
          CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=PLUS
            $this: GET_VAR 'var r: <unbound IrClassSymbolImpl> [var] declared in <root>.test2' type=<unbound IrClassSymbolImpl> origin=null
            1: CONST String type=<unbound IrClassSymbolImpl> value="Fail"
    FUN name:box signature:/box|box(){}[0] visibility:public modality:FINAL <> () returnType:<unbound IrClassSymbolImpl>
      BLOCK_BODY
        WHEN type=<unbound IrClassSymbolImpl> origin=IF
          BRANCH
            if: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=EXCLEQ
              $this: CALL 'public final fun EQEQ (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EXCLEQ
                arg0: CALL 'public final fun test1 (): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
                arg1: CONST String type=<unbound IrClassSymbolImpl> value="TryFinally"
            then: RETURN type=<unbound IrClassSymbolImpl> from='public final fun box (): <unbound IrClassSymbolImpl> declared in <root>'
              STRING_CONCATENATION type=<unbound IrClassSymbolImpl>
                CONST String type=<unbound IrClassSymbolImpl> value="fail1: "
                CALL 'public final fun test1 (): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
        WHEN type=<unbound IrClassSymbolImpl> origin=IF
          BRANCH
            if: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=EXCLEQ
              $this: CALL 'public final fun EQEQ (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EXCLEQ
                arg0: CALL 'public final fun test2 (): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
                arg1: CONST String type=<unbound IrClassSymbolImpl> value="TryFinally"
            then: RETURN type=<unbound IrClassSymbolImpl> from='public final fun box (): <unbound IrClassSymbolImpl> declared in <root>'
              STRING_CONCATENATION type=<unbound IrClassSymbolImpl>
                CONST String type=<unbound IrClassSymbolImpl> value="fail2: "
                CALL 'public final fun test2 (): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
        RETURN type=<unbound IrClassSymbolImpl> from='public final fun box (): <unbound IrClassSymbolImpl> declared in <root>'
          CONST String type=<unbound IrClassSymbolImpl> value="OK"
