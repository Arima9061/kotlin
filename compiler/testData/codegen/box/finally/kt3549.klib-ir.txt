MODULE_FRAGMENT name:<main>
  FILE fqName:<root> fileName:/kt3549.kt
    FUN name:test1 signature:/test1|test1(){}[0] visibility:public modality:FINAL <> () returnType:<unbound IrClassSymbolImpl>
      BLOCK_BODY
        VAR name:s type:<unbound IrClassSymbolImpl> [var]
          CONST String type=<unbound IrClassSymbolImpl> value=""
        TRY type=<unbound IrClassSymbolImpl>
          try: BLOCK type=<unbound IrClassSymbolImpl> origin=null
            TRY type=<unbound IrClassSymbolImpl>
              try: BLOCK type=<unbound IrClassSymbolImpl> origin=null
                SET_VAR 'var s: <unbound IrClassSymbolImpl> [var] declared in <root>.test1' type=<unbound IrClassSymbolImpl> origin=PLUSEQ
                  CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=PLUSEQ
                    $this: GET_VAR 'var s: <unbound IrClassSymbolImpl> [var] declared in <root>.test1' type=<unbound IrClassSymbolImpl> origin=PLUSEQ
                    1: CONST String type=<unbound IrClassSymbolImpl> value="Try"
                THROW type=<unbound IrClassSymbolImpl>
                  CONSTRUCTOR_CALL 'UNBOUND IrConstructorSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
              CATCH parameter=val x: <unbound IrClassSymbolImpl> [val] declared in <root>.test1
                VAR CATCH_PARAMETER name:x type:<unbound IrClassSymbolImpl> [val]
                BLOCK type=<unbound IrClassSymbolImpl> origin=null
                  SET_VAR 'var s: <unbound IrClassSymbolImpl> [var] declared in <root>.test1' type=<unbound IrClassSymbolImpl> origin=PLUSEQ
                    CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=PLUSEQ
                      $this: GET_VAR 'var s: <unbound IrClassSymbolImpl> [var] declared in <root>.test1' type=<unbound IrClassSymbolImpl> origin=PLUSEQ
                      1: CONST String type=<unbound IrClassSymbolImpl> value="Catch"
                  THROW type=<unbound IrClassSymbolImpl>
                    GET_VAR 'val x: <unbound IrClassSymbolImpl> [val] declared in <root>.test1' type=<unbound IrClassSymbolImpl> origin=null
              finally: BLOCK type=<unbound IrClassSymbolImpl> origin=null
                SET_VAR 'var s: <unbound IrClassSymbolImpl> [var] declared in <root>.test1' type=<unbound IrClassSymbolImpl> origin=PLUSEQ
                  CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=PLUSEQ
                    $this: GET_VAR 'var s: <unbound IrClassSymbolImpl> [var] declared in <root>.test1' type=<unbound IrClassSymbolImpl> origin=PLUSEQ
                    1: CONST String type=<unbound IrClassSymbolImpl> value="Finally"
          CATCH parameter=val x: <unbound IrClassSymbolImpl> [val] declared in <root>.test1
            VAR CATCH_PARAMETER name:x type:<unbound IrClassSymbolImpl> [val]
            BLOCK type=<unbound IrClassSymbolImpl> origin=null
              RETURN type=<unbound IrClassSymbolImpl> from='public final fun test1 (): <unbound IrClassSymbolImpl> declared in <root>'
                GET_VAR 'var s: <unbound IrClassSymbolImpl> [var] declared in <root>.test1' type=<unbound IrClassSymbolImpl> origin=null
    FUN name:test2 signature:/test2|test2(){}[0] visibility:public modality:FINAL <> () returnType:<unbound IrClassSymbolImpl>
      BLOCK_BODY
        VAR name:s type:<unbound IrClassSymbolImpl> [var]
          CONST String type=<unbound IrClassSymbolImpl> value=""
        TRY type=<unbound IrClassSymbolImpl>
          try: BLOCK type=<unbound IrClassSymbolImpl> origin=null
            SET_VAR 'var s: <unbound IrClassSymbolImpl> [var] declared in <root>.test2' type=<unbound IrClassSymbolImpl> origin=PLUSEQ
              CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=PLUSEQ
                $this: GET_VAR 'var s: <unbound IrClassSymbolImpl> [var] declared in <root>.test2' type=<unbound IrClassSymbolImpl> origin=PLUSEQ
                1: CONST String type=<unbound IrClassSymbolImpl> value="Try"
            THROW type=<unbound IrClassSymbolImpl>
              CONSTRUCTOR_CALL 'UNBOUND IrConstructorSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
          CATCH parameter=val x: <unbound IrClassSymbolImpl> [val] declared in <root>.test2
            VAR CATCH_PARAMETER name:x type:<unbound IrClassSymbolImpl> [val]
            BLOCK type=<unbound IrClassSymbolImpl> origin=null
              SET_VAR 'var s: <unbound IrClassSymbolImpl> [var] declared in <root>.test2' type=<unbound IrClassSymbolImpl> origin=PLUSEQ
                CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=PLUSEQ
                  $this: GET_VAR 'var s: <unbound IrClassSymbolImpl> [var] declared in <root>.test2' type=<unbound IrClassSymbolImpl> origin=PLUSEQ
                  1: CONST String type=<unbound IrClassSymbolImpl> value="Catch"
          finally: BLOCK type=<unbound IrClassSymbolImpl> origin=null
            SET_VAR 'var s: <unbound IrClassSymbolImpl> [var] declared in <root>.test2' type=<unbound IrClassSymbolImpl> origin=PLUSEQ
              CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=PLUSEQ
                $this: GET_VAR 'var s: <unbound IrClassSymbolImpl> [var] declared in <root>.test2' type=<unbound IrClassSymbolImpl> origin=PLUSEQ
                1: CONST String type=<unbound IrClassSymbolImpl> value="Finally"
        RETURN type=<unbound IrClassSymbolImpl> from='public final fun test2 (): <unbound IrClassSymbolImpl> declared in <root>'
          GET_VAR 'var s: <unbound IrClassSymbolImpl> [var] declared in <root>.test2' type=<unbound IrClassSymbolImpl> origin=null
    FUN name:box signature:/box|box(){}[0] visibility:public modality:FINAL <> () returnType:<unbound IrClassSymbolImpl>
      BLOCK_BODY
        WHEN type=<unbound IrClassSymbolImpl> origin=IF
          BRANCH
            if: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=EXCLEQ
              $this: CALL 'public final fun EQEQ (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EXCLEQ
                arg0: CALL 'public final fun test1 (): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
                arg1: CONST String type=<unbound IrClassSymbolImpl> value="TryCatchFinally"
            then: RETURN type=<unbound IrClassSymbolImpl> from='public final fun box (): <unbound IrClassSymbolImpl> declared in <root>'
              STRING_CONCATENATION type=<unbound IrClassSymbolImpl>
                CONST String type=<unbound IrClassSymbolImpl> value="fail1: "
                CALL 'public final fun test1 (): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
        WHEN type=<unbound IrClassSymbolImpl> origin=IF
          BRANCH
            if: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=EXCLEQ
              $this: CALL 'public final fun EQEQ (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EXCLEQ
                arg0: CALL 'public final fun test2 (): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
                arg1: CONST String type=<unbound IrClassSymbolImpl> value="TryCatchFinally"
            then: RETURN type=<unbound IrClassSymbolImpl> from='public final fun box (): <unbound IrClassSymbolImpl> declared in <root>'
              STRING_CONCATENATION type=<unbound IrClassSymbolImpl>
                CONST String type=<unbound IrClassSymbolImpl> value="fail2: "
                CALL 'public final fun test2 (): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
        RETURN type=<unbound IrClassSymbolImpl> from='public final fun box (): <unbound IrClassSymbolImpl> declared in <root>'
          CONST String type=<unbound IrClassSymbolImpl> value="OK"
