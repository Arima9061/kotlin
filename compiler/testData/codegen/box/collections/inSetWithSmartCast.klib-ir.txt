MODULE_FRAGMENT name:<main>
  FILE fqName:<root> fileName:/inSetWithSmartCast.kt
    FUN name:contains signature:/contains|contains(kotlin.collections.Set<kotlin.Any>;kotlin.Int){}[0] visibility:public modality:FINAL <> (set:<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>>, x:<unbound IrClassSymbolImpl>) returnType:<unbound IrClassSymbolImpl>
      VALUE_PARAMETER name:set index:0 type:<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>>
      VALUE_PARAMETER name:x index:1 type:<unbound IrClassSymbolImpl>
      BLOCK_BODY
        RETURN type=<unbound IrClassSymbolImpl> from='public final fun contains (set: <unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>>, x: <unbound IrClassSymbolImpl>): <unbound IrClassSymbolImpl> declared in <root>'
          WHEN type=<unbound IrClassSymbolImpl> origin=WHEN
            BRANCH
              if: CALL 'public final fun EQEQ (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EQEQ
                arg0: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=GET_PROPERTY
                  $this: GET_VAR 'set: <unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> declared in <root>.contains' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> origin=null
                arg1: CONST Int type=<unbound IrClassSymbolImpl> value=0
              then: CONST Boolean type=<unbound IrClassSymbolImpl> value=false
            BRANCH
              if: CONST Boolean type=<unbound IrClassSymbolImpl> value=true
              then: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=IN
                $this: TYPE_OP type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> origin=CAST typeOperand=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>>
                  GET_VAR 'set: <unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> declared in <root>.contains' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> origin=null
                1: GET_VAR 'x: <unbound IrClassSymbolImpl> declared in <root>.contains' type=<unbound IrClassSymbolImpl> origin=null
    FUN name:box signature:/box|box(){}[0] visibility:public modality:FINAL <> () returnType:<unbound IrClassSymbolImpl>
      BLOCK_BODY
        VAR name:set type:<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> [val]
          CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> origin=null
            <1>: <unbound IrClassSymbolImpl>
            1: CONST Int type=<unbound IrClassSymbolImpl> value=1
        WHEN type=<unbound IrClassSymbolImpl> origin=IF
          BRANCH
            if: CALL 'public final fun contains (set: <unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>>, x: <unbound IrClassSymbolImpl>): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
              set: GET_VAR 'val set: <unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> [val] declared in <root>.box' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> origin=null
              x: CONST Int type=<unbound IrClassSymbolImpl> value=1
            then: BLOCK type=<unbound IrClassSymbolImpl> origin=null
              RETURN type=<unbound IrClassSymbolImpl> from='public final fun box (): <unbound IrClassSymbolImpl> declared in <root>'
                CONST String type=<unbound IrClassSymbolImpl> value="OK"
        RETURN type=<unbound IrClassSymbolImpl> from='public final fun box (): <unbound IrClassSymbolImpl> declared in <root>'
          CONST String type=<unbound IrClassSymbolImpl> value="Fail"
