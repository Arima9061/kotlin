library {
  // module name: <main>

  library fragment {
    // package name: <root>

    // class name: Foo
    // class name: Foo2
    // class name: Outer
    // class name: Outer.Inner

    public open class Foo : kotlin/Any {

      public constructor(x: kotlin/Function0<kotlin/String>)

      public final val x: kotlin/Function0<kotlin/String>
        public final get
    }

    public open class Foo2 : kotlin/Any {

      public constructor(foo: Foo)

      public final val foo: Foo
        public final get
    }

    public final class Outer : kotlin/Any {

      public constructor()

      public final val s: kotlin/String /* = ... */
        public final get

      // nested class: Inner
    }

    public final inner class Outer.Inner : Foo2 {

      public constructor()
    }

    package {

      public final fun box(): kotlin/String
    }
  }
}
