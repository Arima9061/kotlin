library {
  // module name: <main>

  library fragment {
    // package name: <root>

    // class name: Base
    // class name: Callback
    // class name: Outer
    // class name: Outer.Inner

    public open class Base : kotlin/Any {

      public constructor(callback: Callback)

      public final val callback: Callback
        public final get
    }

    public abstract interface Callback : kotlin/Any {

      public abstract fun invoke(): kotlin/String
    }

    public final class Outer : kotlin/Any {

      public constructor()

      public final val ok: kotlin/String /* = ... */
        public final get

      // nested class: Inner
    }

    public final inner class Outer.Inner : Base {

      public constructor()
    }

    package {

      public final fun box(): kotlin/String
    }
  }
}
