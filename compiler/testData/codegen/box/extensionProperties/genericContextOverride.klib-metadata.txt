// MODULE: m1
library {
  // module name: <m1>

  library fragment {
    // package name: <root>

    // class name: Base

    public abstract class Base<T#0 /* T */> : kotlin/Any {

      public constructor()

      context(T#0)
      public abstract fun foo(): kotlin/Int?

      context(T#0)
      public abstract val kotlin/String.foo: kotlin/Int?
        public abstract get
    }
  }
}

// MODULE: box
library {
  // module name: <box>

  library fragment {
    // package name: <root>

    // class name: Child

    public final class Child : Base<kotlin/String> {

      public constructor()

      context(kotlin/String)
      public open fun foo(): kotlin/Int?

      context(kotlin/String)
      public open val kotlin/String.foo: kotlin/Int?
        public open /* non-default */ get
    }

    package {

      public final fun box(): kotlin/String
    }
  }
}
