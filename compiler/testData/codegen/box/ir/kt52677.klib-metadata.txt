// MODULE: lib
library {
  // module name: <lib>

  library fragment {
    // package name: <root>

    // class name: LoginSuccessPacket
    // class name: MySerializable
    // class name: MySerializer
    // class name: Uuid1
    // class name: UuidSerializer

    public final data class LoginSuccessPacket : kotlin/Any {

      public constructor(id: @MySerializable(c = UuidSerializer::class) Uuid1 /* = Uuid^ */)

      public final /* synthesized */ operator fun component1(): @MySerializable(c = UuidSerializer::class) Uuid1 /* = Uuid^ */

      public final /* synthesized */ fun copy(id: @MySerializable(c = UuidSerializer::class) Uuid1 /* = Uuid^ */ /* = ... */): LoginSuccessPacket

      public open /* synthesized */ operator fun equals(other: kotlin/Any?): kotlin/Boolean

      public open /* synthesized */ fun hashCode(): kotlin/Int

      public open /* synthesized */ fun toString(): kotlin/String

      public final val id: @MySerializable(c = UuidSerializer::class) Uuid1 /* = Uuid^ */
        public final get
    }

    @kotlin/annotation/Target(allowedTargets = [kotlin/annotation/AnnotationTarget.TYPE])
    public final annotation class MySerializable : kotlin/Annotation {

      public constructor(c: kotlin/reflect/KClass<*>)

      public final val c: kotlin/reflect/KClass<*>
        public final get
    }

    public abstract interface MySerializer<T#0 /* T */> : kotlin/Any {
    }

    public final class Uuid1 : kotlin/Any {

      public constructor()

      public final fun ok(): kotlin/String
    }

    public final object UuidSerializer : MySerializer<@MySerializable(c = UuidSerializer::class) Uuid1 /* = Uuid^ */> {

      private constructor()
    }

    package {

      public typealias Uuid = @MySerializable(c = UuidSerializer::class) Uuid1 /* = @MySerializable(c = UuidSerializer::class) Uuid1 */
    }
  }
}

// MODULE: main
library {
  // module name: <main>

  library fragment {
    // package name: <root>

    package {

      public final fun bar(): @MySerializable(c = kotlin/reflect/KClass::class) Uuid1 /* = Uuid^ */

      public final fun box(): kotlin/String

      public final fun foo(): @MySerializable(c = kotlin/reflect/KClass::class) Uuid1 /* = Uuid^ */
    }
  }
}
