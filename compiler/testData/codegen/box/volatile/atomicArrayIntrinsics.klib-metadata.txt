library {
  // module name: <main>

  library fragment {
    // package name: <root>

    // class name: ArrayIntrinsicsSmokeTest

    private final class ArrayIntrinsicsSmokeTest : kotlin/Any {

      public constructor()

      private final fun arrayArgumentUpdater(arr: kotlin/IntArray): kotlin/Unit

      private final fun kotlin/IntArray.extensionArrayUpdater(): kotlin/Unit

      public final fun testComileTimeUnknownArrayReceiver(): kotlin/Unit

      public final fun testIntArrayIntrinsics(): kotlin/Unit

      public final fun testLongArrayIntrinsics(): kotlin/Unit

      public final fun testReferenceArrayIntrinsics(): kotlin/Unit

      public final val intArr: kotlin/IntArray
        public final get

      public final val longArr: kotlin/LongArray
        public final get

      public final val refArr: kotlin/Array<kotlin/String?>
        public final get
    }

    package {

      public final fun box(): kotlin/String

      public final fun testStaticIntArrayIntrinsics(): kotlin/Unit

      public final fun testStaticLongArrayIntrinsics(): kotlin/Unit

      public final fun testStaticReferenceArrayIntrinsics(): kotlin/Unit

      private final val intArrStatic: kotlin/IntArray
        private final get

      private final val longArrStatic: kotlin/LongArray
        private final get

      private final val refArrStatic: kotlin/Array<kotlin/String?>
        private final get
    }
  }
}
