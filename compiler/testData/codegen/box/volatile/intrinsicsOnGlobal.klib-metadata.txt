library {
  // module name: <main>

  library fragment {
    // package name: <root>

    package {

      public final fun box(): kotlin/String

      @kotlin/native/internal/TypedIntrinsic(kind = "GET_AND_ADD_FIELD")
      internal final external fun kotlin/reflect/KMutableProperty0<kotlin/Byte>.getAndAddFieldLocal(newValue: kotlin/Byte): kotlin/Byte

      @kotlin/native/internal/TypedIntrinsic(kind = "GET_AND_ADD_FIELD")
      internal final external fun kotlin/reflect/KMutableProperty0<kotlin/Int>.getAndAddFieldLocal(newValue: kotlin/Int): kotlin/Int

      @kotlin/native/internal/TypedIntrinsic(kind = "GET_AND_ADD_FIELD")
      internal final external fun kotlin/reflect/KMutableProperty0<kotlin/Long>.getAndAddFieldLocal(newValue: kotlin/Long): kotlin/Long

      @kotlin/native/internal/TypedIntrinsic(kind = "GET_AND_ADD_FIELD")
      internal final external fun kotlin/reflect/KMutableProperty0<kotlin/Short>.getAndAddFieldLocal(delta: kotlin/Short): kotlin/Short

      public final val a: kotlin/String /* = ... */
        public final get

      public final val b: kotlin/String /* = ... */
        public final get

      public final var byte: kotlin/Byte
        public final get
        public final set

      public final val c: kotlin/String /* = ... */
        public final get

      public final var short: kotlin/Short
        public final get
        public final set

      public final var t: kotlin/Boolean
        public final get
        public final set

      public final var x: kotlin/Int
        public final get
        public final set

      public final var y: kotlin/Long
        public final get
        public final set

      public final var z: kotlin/String
        public final get
        public final set
    }
  }
}
