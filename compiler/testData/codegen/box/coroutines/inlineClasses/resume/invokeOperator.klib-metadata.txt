library {
  // module name: <main>

  library fragment {
    // package name: <root>

    // class name: GetResult
    // class name: IC
    // class name: IC1

    public final class GetResult : kotlin/Any {

      public constructor()

      public final operator suspend fun invoke(): IC
    }

    public final value class IC : kotlin/Any {

      public constructor(a: kotlin/Any?)

      public open /* synthesized */ operator fun equals(other: kotlin/Any?): kotlin/Boolean

      public open /* synthesized */ fun hashCode(): kotlin/Int

      public open /* synthesized */ fun toString(): kotlin/String

      public final val a: kotlin/Any?
        public final get

      // underlying property: a

      // underlying type: kotlin/Any?
    }

    public final value class IC1 : kotlin/Any {

      public constructor(a: kotlin/String)

      public open /* synthesized */ operator fun equals(other: kotlin/Any?): kotlin/Boolean

      public open /* synthesized */ fun hashCode(): kotlin/Int

      public final operator suspend fun invoke(): IC

      public open /* synthesized */ fun toString(): kotlin/String

      public final val a: kotlin/String
        public final get

      // underlying property: a

      // underlying type: kotlin/String
    }

    package {

      public final fun box(): kotlin/String

      public final fun builder(c: suspend kotlin/Function1<kotlin/coroutines/Continuation<kotlin/Unit>, kotlin/Any?>): kotlin/Unit

      public final suspend fun <T#0 /* T */> suspendMe(): T#0

      public final var c: kotlin/coroutines/Continuation<kotlin/Any>?
        public final get
        public final set
    }
  }
}
