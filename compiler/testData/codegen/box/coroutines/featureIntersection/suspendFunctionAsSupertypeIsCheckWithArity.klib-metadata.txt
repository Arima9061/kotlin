library {
  // module name: <main>

  library fragment {
    // package name: <root>

    // class name: C
    // class name: FI
    // class name: I
    // class name: I2

    public final class C : suspend kotlin/Function1<kotlin/coroutines/Continuation<kotlin/Unit>, kotlin/Any?> {

      public constructor()

      public open operator suspend fun invoke(): kotlin/Unit
    }

    public abstract fun interface FI : suspend kotlin/Function1<kotlin/coroutines/Continuation<kotlin/Unit>, kotlin/Any?> {
    }

    public abstract interface I : suspend kotlin/Function1<kotlin/coroutines/Continuation<kotlin/Unit>, kotlin/Any?> {
    }

    public abstract interface I2 : suspend kotlin/Function2<kotlin/Int, kotlin/coroutines/Continuation<kotlin/Unit>, kotlin/Any?>, suspend kotlin/Function3<kotlin/Int, kotlin/Int, kotlin/coroutines/Continuation<kotlin/Unit>, kotlin/Any?> {
    }

    package {

      public final fun box(): kotlin/String
    }
  }
}
