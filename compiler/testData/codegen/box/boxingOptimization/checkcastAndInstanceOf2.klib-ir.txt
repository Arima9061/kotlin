MODULE_FRAGMENT name:<main>
  FILE fqName:<root> fileName:/checkcastAndInstanceOf2.kt
    FUN name:foo signature:/foo|foo(0:0;0:0;kotlin.Function1<0:0,0:1>){0§<kotlin.Any?>;1§<kotlin.Any?>}[0] visibility:public modality:FINAL <R, T> (x:R of <root>.foo, y:R of <root>.foo, block:<unbound IrClassSymbolImpl><R of <root>.foo, T of <root>.foo>) returnType:T of <root>.foo [inline]
      TYPE_PARAMETER name:R index:0 variance: signature:[ /foo|foo(0:0;0:0;kotlin.Function1<0:0,0:1>){0§<kotlin.Any?>;1§<kotlin.Any?>}[0] <- Local[<TP>,0|TYPE_PARAMETER name:R index:0 variance: superTypes:[kotlin.Any?] reified:false] ] superTypes:[<unbound IrClassSymbolImpl>?] reified:false
      TYPE_PARAMETER name:T index:1 variance: signature:[ /foo|foo(0:0;0:0;kotlin.Function1<0:0,0:1>){0§<kotlin.Any?>;1§<kotlin.Any?>}[0] <- Local[<TP>,1|TYPE_PARAMETER name:T index:1 variance: superTypes:[kotlin.Any?] reified:false] ] superTypes:[<unbound IrClassSymbolImpl>?] reified:false
      VALUE_PARAMETER name:x index:0 type:R of <root>.foo
      VALUE_PARAMETER name:y index:1 type:R of <root>.foo
      VALUE_PARAMETER name:block index:2 type:<unbound IrClassSymbolImpl><R of <root>.foo, T of <root>.foo>
      BLOCK_BODY
        VAR name:a type:<unbound IrClassSymbolImpl> [val]
          TYPE_OP type=<unbound IrClassSymbolImpl> origin=INSTANCEOF typeOperand=<unbound IrClassSymbolImpl>
            GET_VAR 'x: R of <root>.foo declared in <root>.foo' type=R of <root>.foo origin=null
        VAR name:b type:<unbound IrClassSymbolImpl> [val]
          TYPE_OP type=<unbound IrClassSymbolImpl> origin=INSTANCEOF typeOperand=<unbound IrClassSymbolImpl>
            GET_VAR 'x: R of <root>.foo declared in <root>.foo' type=R of <root>.foo origin=null
        VAR name:b1 type:<unbound IrClassSymbolImpl> [val]
          TYPE_OP type=<unbound IrClassSymbolImpl> origin=CAST typeOperand=<unbound IrClassSymbolImpl>
            GET_VAR 'x: R of <root>.foo declared in <root>.foo' type=R of <root>.foo origin=null
        WHEN type=<unbound IrClassSymbolImpl> origin=IF
          BRANCH
            if: WHEN type=<unbound IrClassSymbolImpl> origin=ANDAND
              BRANCH
                if: GET_VAR 'val a: <unbound IrClassSymbolImpl> [val] declared in <root>.foo' type=<unbound IrClassSymbolImpl> origin=null
                then: GET_VAR 'val b: <unbound IrClassSymbolImpl> [val] declared in <root>.foo' type=<unbound IrClassSymbolImpl> origin=null
              BRANCH
                if: CONST Boolean type=<unbound IrClassSymbolImpl> value=true
                then: CONST Boolean type=<unbound IrClassSymbolImpl> value=false
            then: BLOCK type=<unbound IrClassSymbolImpl> origin=null
              RETURN type=<unbound IrClassSymbolImpl> from='public final fun foo <R, T> (x: R of <root>.foo, y: R of <root>.foo, block: <unbound IrClassSymbolImpl><R of <root>.foo, T of <root>.foo>): T of <root>.foo [inline] declared in <root>'
                CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=T of <root>.foo origin=INVOKE
                  $this: GET_VAR 'block: <unbound IrClassSymbolImpl><R of <root>.foo, T of <root>.foo> declared in <root>.foo' type=<unbound IrClassSymbolImpl><R of <root>.foo, T of <root>.foo> origin=VARIABLE_AS_FUNCTION
                  1: TYPE_OP type={R of <root>.foo & Any} origin=IMPLICIT_CAST typeOperand={R of <root>.foo & Any}
                    GET_VAR 'x: R of <root>.foo declared in <root>.foo' type=R of <root>.foo origin=null
          BRANCH
            if: CONST Boolean type=<unbound IrClassSymbolImpl> value=true
            then: BLOCK type=<unbound IrClassSymbolImpl> origin=null
              RETURN type=<unbound IrClassSymbolImpl> from='public final fun foo <R, T> (x: R of <root>.foo, y: R of <root>.foo, block: <unbound IrClassSymbolImpl><R of <root>.foo, T of <root>.foo>): T of <root>.foo [inline] declared in <root>'
                CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=T of <root>.foo origin=INVOKE
                  $this: GET_VAR 'block: <unbound IrClassSymbolImpl><R of <root>.foo, T of <root>.foo> declared in <root>.foo' type=<unbound IrClassSymbolImpl><R of <root>.foo, T of <root>.foo> origin=VARIABLE_AS_FUNCTION
                  1: GET_VAR 'y: R of <root>.foo declared in <root>.foo' type=R of <root>.foo origin=null
    FUN name:box signature:/box|box(){}[0] visibility:public modality:FINAL <> () returnType:<unbound IrClassSymbolImpl>
      BLOCK_BODY
        CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
          <1>: <unbound IrClassSymbolImpl>
          1: CONST Int type=<unbound IrClassSymbolImpl> value=1
          2: CALL 'public final fun foo <R, T> (x: R of <root>.foo, y: R of <root>.foo, block: <unbound IrClassSymbolImpl><R of <root>.foo, T of <root>.foo>): T of <root>.foo [inline] declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
            <R>: <unbound IrClassSymbolImpl>
            <T>: <unbound IrClassSymbolImpl>
            x: CONST Int type=<unbound IrClassSymbolImpl> value=1
            y: CONST Int type=<unbound IrClassSymbolImpl> value=2
            block: FUN_EXPR type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>, <unbound IrClassSymbolImpl>> origin=LAMBDA
              FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL <> (x:<unbound IrClassSymbolImpl>) returnType:<unbound IrClassSymbolImpl>
                VALUE_PARAMETER name:x index:0 type:<unbound IrClassSymbolImpl>
                BLOCK_BODY
                  RETURN type=<unbound IrClassSymbolImpl> from='local final fun <anonymous> (x: <unbound IrClassSymbolImpl>): <unbound IrClassSymbolImpl> declared in <root>.box'
                    TYPE_OP type=<unbound IrClassSymbolImpl> origin=CAST typeOperand=<unbound IrClassSymbolImpl>
                      GET_VAR 'x: <unbound IrClassSymbolImpl> declared in <root>.box.<anonymous>' type=<unbound IrClassSymbolImpl> origin=null
        CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
          <1>: <unbound IrClassSymbolImpl>
          1: CONST String type=<unbound IrClassSymbolImpl> value="def"
          2: CALL 'public final fun foo <R, T> (x: R of <root>.foo, y: R of <root>.foo, block: <unbound IrClassSymbolImpl><R of <root>.foo, T of <root>.foo>): T of <root>.foo [inline] declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
            <R>: <unbound IrClassSymbolImpl>
            <T>: <unbound IrClassSymbolImpl>
            x: CONST String type=<unbound IrClassSymbolImpl> value="abc"
            y: CONST String type=<unbound IrClassSymbolImpl> value="def"
            block: FUN_EXPR type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>, <unbound IrClassSymbolImpl>> origin=LAMBDA
              FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL <> (x:<unbound IrClassSymbolImpl>) returnType:<unbound IrClassSymbolImpl>
                VALUE_PARAMETER name:x index:0 type:<unbound IrClassSymbolImpl>
                BLOCK_BODY
                  RETURN type=<unbound IrClassSymbolImpl> from='local final fun <anonymous> (x: <unbound IrClassSymbolImpl>): <unbound IrClassSymbolImpl> declared in <root>.box'
                    TYPE_OP type=<unbound IrClassSymbolImpl> origin=CAST typeOperand=<unbound IrClassSymbolImpl>
                      GET_VAR 'x: <unbound IrClassSymbolImpl> declared in <root>.box.<anonymous>' type=<unbound IrClassSymbolImpl> origin=null
        RETURN type=<unbound IrClassSymbolImpl> from='public final fun box (): <unbound IrClassSymbolImpl> declared in <root>'
          CONST String type=<unbound IrClassSymbolImpl> value="OK"
