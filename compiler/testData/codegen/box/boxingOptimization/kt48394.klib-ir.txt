MODULE_FRAGMENT name:<main>
  FILE fqName:<root> fileName:/kt48394.kt
    FUN name:f signature:/f|f(kotlin.Int;kotlin.Function0<0:0>){0ยง<kotlin.Any?>}[0] visibility:public modality:FINAL <R> (size:<unbound IrClassSymbolImpl>, block:<unbound IrClassSymbolImpl><R of <root>.f>) returnType:R of <root>.f [inline]
      TYPE_PARAMETER name:R index:0 variance: signature:[ /f|f(kotlin.Int;kotlin.Function0<0:0>){0ยง<kotlin.Any?>}[0] <- Local[<TP>,0|TYPE_PARAMETER name:R index:0 variance: superTypes:[kotlin.Any?] reified:false] ] superTypes:[<unbound IrClassSymbolImpl>?] reified:false
      VALUE_PARAMETER name:size index:0 type:<unbound IrClassSymbolImpl>
      VALUE_PARAMETER name:block index:1 type:<unbound IrClassSymbolImpl><R of <root>.f>
      BLOCK_BODY
        VAR name:result type:R of <root>.f [var]
        WHILE label=null origin=WHILE_LOOP
          condition: CONST Boolean type=<unbound IrClassSymbolImpl> value=true
          body: BLOCK type=<unbound IrClassSymbolImpl> origin=null
            SET_VAR 'var result: R of <root>.f [var] declared in <root>.f' type=<unbound IrClassSymbolImpl> origin=EQ
              CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=R of <root>.f origin=INVOKE
                $this: GET_VAR 'block: <unbound IrClassSymbolImpl><R of <root>.f> declared in <root>.f' type=<unbound IrClassSymbolImpl><R of <root>.f> origin=VARIABLE_AS_FUNCTION
            WHEN type=<unbound IrClassSymbolImpl> origin=IF
              BRANCH
                if: CALL 'public final fun EQEQ (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EQEQ
                  arg0: GET_VAR 'size: <unbound IrClassSymbolImpl> declared in <root>.f' type=<unbound IrClassSymbolImpl> origin=null
                  arg1: CONST Int type=<unbound IrClassSymbolImpl> value=0
                then: BREAK label=null loop.label=null
        RETURN type=<unbound IrClassSymbolImpl> from='public final fun f <R> (size: <unbound IrClassSymbolImpl>, block: <unbound IrClassSymbolImpl><R of <root>.f>): R of <root>.f [inline] declared in <root>'
          GET_VAR 'var result: R of <root>.f [var] declared in <root>.f' type=R of <root>.f origin=null
    FUN name:computeResult signature:/computeResult|computeResult(kotlin.Int){}[0] visibility:public modality:FINAL <> (size:<unbound IrClassSymbolImpl>) returnType:<unbound IrClassSymbolImpl>
      VALUE_PARAMETER name:size index:0 type:<unbound IrClassSymbolImpl>
      BLOCK_BODY
        RETURN type=<unbound IrClassSymbolImpl> from='public final fun computeResult (size: <unbound IrClassSymbolImpl>): <unbound IrClassSymbolImpl> declared in <root>'
          CALL 'public final fun f <R> (size: <unbound IrClassSymbolImpl>, block: <unbound IrClassSymbolImpl><R of <root>.f>): R of <root>.f [inline] declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
            <R>: <unbound IrClassSymbolImpl>
            size: GET_VAR 'size: <unbound IrClassSymbolImpl> declared in <root>.computeResult' type=<unbound IrClassSymbolImpl> origin=null
            block: FUN_EXPR type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> origin=LAMBDA
              FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL <> () returnType:<unbound IrClassSymbolImpl>
                BLOCK_BODY
                  RETURN type=<unbound IrClassSymbolImpl> from='local final fun <anonymous> (): <unbound IrClassSymbolImpl> declared in <root>.computeResult'
                    CONST Int type=<unbound IrClassSymbolImpl> value=42
    FUN name:box signature:/box|box(){}[0] visibility:public modality:FINAL <> () returnType:<unbound IrClassSymbolImpl>
      BLOCK_BODY
        RETURN type=<unbound IrClassSymbolImpl> from='public final fun box (): <unbound IrClassSymbolImpl> declared in <root>'
          WHEN type=<unbound IrClassSymbolImpl> origin=IF
            BRANCH
              if: CALL 'public final fun EQEQ (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EQEQ
                arg0: CALL 'public final fun computeResult (size: <unbound IrClassSymbolImpl>): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
                  size: CONST Int type=<unbound IrClassSymbolImpl> value=0
                arg1: CONST Int type=<unbound IrClassSymbolImpl> value=42
              then: CONST String type=<unbound IrClassSymbolImpl> value="OK"
            BRANCH
              if: CONST Boolean type=<unbound IrClassSymbolImpl> value=true
              then: CONST String type=<unbound IrClassSymbolImpl> value="FAIL"
