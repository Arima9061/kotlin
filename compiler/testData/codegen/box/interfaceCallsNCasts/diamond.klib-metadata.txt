library {
  // module name: <main>

  library fragment {
    // package name: <root>

    // class name: A
    // class name: B
    // class name: C
    // class name: Z

    public abstract interface A<T#0 /* T */, T#1 /* U */> : kotlin/Any {

      public open fun foo(t: T#0, u: T#1): kotlin/String
    }

    public abstract interface B<T#0 /* U */> : A<kotlin/String, T#0> {
    }

    public abstract interface C<T#0 /* T */> : A<T#0, kotlin/Int> {
    }

    public final class Z : B<kotlin/Int>, C<kotlin/String> {

      public constructor()

      public open fun foo(t: kotlin/String, u: kotlin/Int): kotlin/String
    }

    package {

      public final fun box(): kotlin/String
    }
  }
}
