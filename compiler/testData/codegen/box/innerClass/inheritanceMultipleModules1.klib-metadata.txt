// MODULE: lib
library {
  // module name: <lib>

  library fragment {
    // package name: <root>

    // class name: Foo
    // class name: Foo.FooInner

    public open class Foo : kotlin/Any {

      public constructor(z: kotlin/Int)

      public final val z: kotlin/Int
        public final get

      // nested class: FooInner
    }

    public open inner class Foo.FooInner : kotlin/Any {

      public constructor()

      public final fun foo(): kotlin/Int
    }
  }
}

// MODULE: main
library {
  // module name: <main>

  library fragment {
    // package name: <root>

    // class name: Bar
    // class name: Bar.BarInner

    public final class Bar : Foo {

      public constructor()

      // nested class: BarInner
    }

    public final inner class Bar.BarInner : Foo.FooInner {

      public constructor(x: kotlin/Int)

      public final val x: kotlin/Int
        public final get
    }

    package {

      public final fun box(): kotlin/String
    }
  }
}
