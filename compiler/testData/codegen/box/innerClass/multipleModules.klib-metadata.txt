// MODULE: lib
library {
  // module name: <lib>

  library fragment {
    // package name: <root>

    // class name: A
    // class name: A.Inner

    public open class A : kotlin/Any {

      public constructor()

      // nested class: Inner
    }

    public open inner class A.Inner : kotlin/Any {

      public constructor()

      public final val x: kotlin/String /* = ... */
        public final get
    }
  }
}

// MODULE: main
library {
  // module name: <main>

  library fragment {
    // package name: <root>

    // class name: B
    // class name: B.Inner

    public open class B : A {

      public constructor()

      // nested class: Inner
    }

    public open inner class B.Inner : A.Inner {

      public constructor()
    }

    package {

      public final fun box(): kotlin/String
    }
  }
}
