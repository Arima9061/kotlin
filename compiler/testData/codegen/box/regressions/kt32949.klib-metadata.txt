library {
  // module name: <main>

  library fragment {
    // package name: <root>

    // class name: Bar
    // class name: Binder
    // class name: Container
    // class name: Foo

    public final data class Bar : kotlin/Any {

      public constructor(y: kotlin/Int /* = ... */)

      public final /* synthesized */ operator fun component1(): kotlin/Int

      public final /* synthesized */ fun copy(y: kotlin/Int /* = ... */): Bar

      public open /* synthesized */ operator fun equals(other: kotlin/Any?): kotlin/Boolean

      public open /* synthesized */ fun hashCode(): kotlin/Int

      public open /* synthesized */ fun toString(): kotlin/String

      public final val y: kotlin/Int
        public final get
    }

    public final class Binder : kotlin/Any {

      public constructor()

      private final fun bind(bar: Bar): kotlin/String

      public final fun bind(subject: Container<*>): kotlin/String

      private final fun bind(foo: Foo): kotlin/String

      public final lateinit var bindee: Container<*>
        public final get
        public final set
    }

    public final class Container<out T#0 /* T */> : kotlin/Any {

      public constructor(containee: T#0)

      public final val containee: T#0
        public final get
    }

    public final data class Foo : kotlin/Any {

      public constructor(x: kotlin/Int /* = ... */)

      public final /* synthesized */ operator fun component1(): kotlin/Int

      public final /* synthesized */ fun copy(x: kotlin/Int /* = ... */): Foo

      public open /* synthesized */ operator fun equals(other: kotlin/Any?): kotlin/Boolean

      public open /* synthesized */ fun hashCode(): kotlin/Int

      public open /* synthesized */ fun toString(): kotlin/String

      public final val x: kotlin/Int
        public final get
    }

    package {

      public final fun box(): kotlin/String
    }
  }
}
