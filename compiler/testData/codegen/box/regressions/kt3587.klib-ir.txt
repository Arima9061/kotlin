MODULE_FRAGMENT name:<main>
  FILE fqName:<root> fileName:/kt3587.kt
    CLASS CLASS name:Variable signature:/Variable|null[0] modality:OPEN visibility:public superTypes:[<unbound IrClassSymbolImpl>]
      $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:<root>.Variable
      CONSTRUCTOR signature:/Variable.<init>|<init>(){}[0] visibility:public <> () returnType:<root>.Variable [primary]
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL 'UNBOUND IrConstructorSymbolImpl'
          INSTANCE_INITIALIZER_CALL classDescriptor='CLASS CLASS name:Variable signature:/Variable|null[0] modality:OPEN visibility:public superTypes:[<unbound IrClassSymbolImpl>]'
      PROPERTY name:lightVar signature:/Variable.lightVar|{}lightVar[0] visibility:public modality:FINAL [val]
        FIELD PROPERTY_BACKING_FIELD name:lightVar signature:[ /Variable.lightVar|{}lightVar[0] <- Local[<BF>|FIELD PROPERTY_BACKING_FIELD name:lightVar type:<root>.LightVariable visibility:private [final]] ] type:<root>.LightVariable visibility:private [final]
          EXPRESSION_BODY
            WHEN type=<root>.LightVariable origin=IF
              BRANCH
                if: TYPE_OP type=<unbound IrClassSymbolImpl> origin=INSTANCEOF typeOperand=<root>.LightVariable
                  GET_VAR '<this>: <root>.Variable declared in <root>.Variable' type=<root>.Variable origin=null
                then: TYPE_OP type=<root>.LightVariable origin=IMPLICIT_CAST typeOperand=<root>.LightVariable
                  GET_VAR '<this>: <root>.Variable declared in <root>.Variable' type=<root>.Variable origin=null
              BRANCH
                if: CONST Boolean type=<unbound IrClassSymbolImpl> value=true
                then: CONSTRUCTOR_CALL 'public constructor <init> () [primary] declared in <root>.LightVariable' type=<root>.LightVariable origin=null
        FUN DEFAULT_PROPERTY_ACCESSOR name:<get-lightVar> signature:/Variable.lightVar.<get-lightVar>|<get-lightVar>(){}[0] visibility:public modality:FINAL <> ($this:<root>.Variable) returnType:<root>.LightVariable
          correspondingProperty: PROPERTY name:lightVar signature:/Variable.lightVar|{}lightVar[0] visibility:public modality:FINAL [val]
          $this: VALUE_PARAMETER name:<this> type:<root>.Variable
          BLOCK_BODY
            RETURN type=<unbound IrClassSymbolImpl> from='public final fun <get-lightVar> (): <root>.LightVariable declared in <root>.Variable'
              GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:lightVar signature:[ /Variable.lightVar|{}lightVar[0] <- Local[<BF>|FIELD PROPERTY_BACKING_FIELD name:lightVar type:<root>.LightVariable visibility:private [final]] ] type:<root>.LightVariable visibility:private [final]' type=<root>.LightVariable origin=null
                receiver: GET_VAR '<this>: <root>.Variable declared in <root>.Variable.<get-lightVar>' type=<root>.Variable origin=null
    CLASS CLASS name:LightVariable signature:/LightVariable|null[0] modality:FINAL visibility:public superTypes:[<root>.Variable]
      $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:<root>.LightVariable
      CONSTRUCTOR signature:/LightVariable.<init>|<init>(){}[0] visibility:public <> () returnType:<root>.LightVariable [primary]
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL 'public constructor <init> () [primary] declared in <root>.Variable'
          INSTANCE_INITIALIZER_CALL classDescriptor='CLASS CLASS name:LightVariable signature:/LightVariable|null[0] modality:FINAL visibility:public superTypes:[<root>.Variable]'
    FUN name:box signature:/box|box(){}[0] visibility:public modality:FINAL <> () returnType:<unbound IrClassSymbolImpl>
      BLOCK_BODY
        TYPE_OP type=<unbound IrClassSymbolImpl> origin=IMPLICIT_COERCION_TO_UNIT typeOperand=<unbound IrClassSymbolImpl>
          CONSTRUCTOR_CALL 'public constructor <init> () [primary] declared in <root>.Variable' type=<root>.Variable origin=null
        RETURN type=<unbound IrClassSymbolImpl> from='public final fun box (): <unbound IrClassSymbolImpl> declared in <root>'
          CONST String type=<unbound IrClassSymbolImpl> value="OK"
