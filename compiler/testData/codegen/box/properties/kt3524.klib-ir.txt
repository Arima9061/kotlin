MODULE_FRAGMENT name:<main>
  FILE fqName:<root> fileName:/kt3524.kt
    PROPERTY name:i signature:/i|{}i[0] visibility:public modality:FINAL [val]
      FIELD PROPERTY_BACKING_FIELD name:i signature:[ /i|{}i[0] <- Local[<BF>|FIELD PROPERTY_BACKING_FIELD name:i type:kotlin.Any visibility:private [final,static]] ] type:<unbound IrClassSymbolImpl> visibility:private [final,static]
        EXPRESSION_BODY
          CONST Int type=<unbound IrClassSymbolImpl> value=12
      FUN DEFAULT_PROPERTY_ACCESSOR name:<get-i> signature:/i.<get-i>|<get-i>(){}[0] visibility:public modality:FINAL <> () returnType:<unbound IrClassSymbolImpl>
        correspondingProperty: PROPERTY name:i signature:/i|{}i[0] visibility:public modality:FINAL [val]
        BLOCK_BODY
          RETURN type=<unbound IrClassSymbolImpl> from='public final fun <get-i> (): <unbound IrClassSymbolImpl> declared in <root>'
            GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:i signature:[ /i|{}i[0] <- Local[<BF>|FIELD PROPERTY_BACKING_FIELD name:i type:kotlin.Any visibility:private [final,static]] ] type:<unbound IrClassSymbolImpl> visibility:private [final,static]' type=<unbound IrClassSymbolImpl> origin=null
    FUN name:box signature:/box|box(){}[0] visibility:public modality:FINAL <> () returnType:<unbound IrClassSymbolImpl>
      BLOCK_BODY
        RETURN type=<unbound IrClassSymbolImpl> from='public final fun box (): <unbound IrClassSymbolImpl> declared in <root>'
          WHEN type=<unbound IrClassSymbolImpl> origin=IF
            BRANCH
              if: CALL 'public final fun EQEQ (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EQEQ
                arg0: CALL 'public final fun <get-i> (): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=GET_PROPERTY
                arg1: CONST Int type=<unbound IrClassSymbolImpl> value=12
              then: CONST String type=<unbound IrClassSymbolImpl> value="OK"
            BRANCH
              if: CONST Boolean type=<unbound IrClassSymbolImpl> value=true
              then: CONST String type=<unbound IrClassSymbolImpl> value="fail"
