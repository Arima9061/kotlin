library {
  // module name: <main>

  library fragment {
    // package name: <root>

    // class name: Test
    // class name: Test.Companion

    public final class Test : kotlin/Any {

      public constructor()

      // companion object: Companion

      // nested class: Companion
    }

    public final companion object Test.Companion : kotlin/Any {

      private constructor()

      public final fun incProp4(): kotlin/Unit

      public final val prop1: kotlin/Int /* = ... */
        public final get

      public final var prop2: kotlin/Int
        public final get
        private final /* non-default */ set(value: kotlin/Int)

      public final val prop3: kotlin/Int /* = ... */
        public final /* non-default */ get

      public final var prop4: kotlin/Int
        public final get
        public final set

      public final var prop5: kotlin/Int
        public final get
        public final set

      public final var prop7: kotlin/Int
        public final get
        public final /* non-default */ set(i: kotlin/Int)
    }

    package {

      public final fun box(): kotlin/String
    }
  }
}
