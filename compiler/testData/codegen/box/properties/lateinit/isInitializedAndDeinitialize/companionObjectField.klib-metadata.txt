library {
  // module name: <main>

  library fragment {
    // package name: <root>

    // class name: Class
    // class name: Class.Companion
    // class name: Interface
    // class name: Interface.Companion

    public final class Class : kotlin/Any {

      public constructor()

      // companion object: Companion

      // nested class: Companion
    }

    public final companion object Class.Companion : kotlin/Any {

      private constructor()

      public final fun test(): kotlin/Unit

      private final lateinit var private: kotlin/String
        private final get
        private final set

      public final lateinit var public: kotlin/String
        public final get
        public final set
    }

    public final class Interface : kotlin/Any {

      public constructor()

      // companion object: Companion

      // nested class: Companion
    }

    public final companion object Interface.Companion : kotlin/Any {

      private constructor()

      public final fun test(): kotlin/Unit

      private final lateinit var private: kotlin/String
        private final get
        private final set

      public final lateinit var public: kotlin/String
        public final get
        public final set
    }

    package {

      public final fun box(): kotlin/String
    }
  }
}
