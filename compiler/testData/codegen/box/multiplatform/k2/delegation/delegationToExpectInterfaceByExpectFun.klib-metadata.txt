library {
  // module name: <platform>

  library fragment {
    // package name: <root>

    // class name: Base
    // class name: DelegatedImpl
    // class name: Impl

    public abstract interface Base : kotlin/Any {

      public abstract fun foo(a: kotlin/String): kotlin/String
    }

    public final class DelegatedImpl : Base {

      public constructor(foo: Base /* = ... */)

      public open /* delegation */ fun foo(a: kotlin/String): kotlin/String

      public final val foo: Base
        public final get
    }

    public final class Impl : Base {

      public constructor()

      public open fun foo(a: kotlin/String): kotlin/String
    }

    package {

      public final fun box(): kotlin/String

      public final fun buildBase(): Base
    }
  }
}
