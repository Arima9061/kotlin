library {
  // module name: <main>

  library fragment {
    // package name: <root>

    // class name: C
    // class name: G
    // class name: H
    // class name: I

    public abstract interface C : kotlin/Any {

      public open fun foo(x: kotlin/Int): kotlin/Unit
    }

    public final class G : C, I {

      public constructor(c: C)

      public open /* delegation */ fun foo(x: kotlin/Int): kotlin/Unit
    }

    public final class H : I, C {

      public constructor(c: C)

      public open /* delegation */ fun foo(x: kotlin/Int): kotlin/Unit
    }

    public abstract interface I : kotlin/Any {

      public abstract fun foo(x: kotlin/Int /* = ... */): kotlin/Unit
    }

    package {

      public final fun box(): kotlin/String

      public final fun log(a: kotlin/String): kotlin/Unit

      public final fun test1(): kotlin/Unit

      public final fun test2(): kotlin/Unit

      public final var log: kotlin/String
        public final get
        public final set
    }
  }
}
