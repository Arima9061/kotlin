library {
  // module name: <platform>

  library fragment {
    // package name: <root>

    // class name: A
    // class name: B
    // class name: S1
    // class name: S2

    public open class A : S1, S2 {

      public constructor()
    }

    public final class B : A {

      public constructor()
    }

    public abstract interface S1 : kotlin/Any {

      public open fun o(): kotlin/String /* = S^ */

      public open val p: kotlin/Boolean
        public open /* non-default */ get
    }

    public abstract interface S2 : kotlin/Any {

      public open fun k(): kotlin/String
    }

    package {

      public final fun box(): kotlin/String

      public typealias S = kotlin/String /* = kotlin/String */
    }
  }
}
