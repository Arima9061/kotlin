// MODULE: lib
library {
  // module name: <lib>

  library fragment {
    // package name: <root>

    // class name: C
    // class name: WithActual
    // class name: WithoutActual

    public final class C : kotlin/Any {

      public constructor()

      public final fun o(): kotlin/String
    }

    public final annotation class WithActual : kotlin/Annotation {

      public constructor(x: kotlin/Int)

      public final val x: kotlin/Int
        public final get
    }

    @kotlin/OptionalExpectation
    public final expect annotation class WithoutActual : kotlin/Annotation {

      public constructor(s: kotlin/String)

      public final expect val s: kotlin/String
        public final get
    }

    package {

      public final fun k(): kotlin/String
    }
  }
}

// MODULE: main
library {
  // module name: <main>

  library fragment {
    // package name: <root>

    package {

      @WithActual(x = 42)
      public final fun box(): kotlin/String

      @WithoutActual(s = "OK")
      public final fun ok(): kotlin/String
    }
  }
}
