// MODULE: lib
library {
  // module name: <lib>

  library fragment {
    // package name: <root>

    // class name: Ann
    // class name: C
    // class name: E

    @kotlin/annotation/Target(allowedTargets = [kotlin/annotation/AnnotationTarget.FILE, kotlin/annotation/AnnotationTarget.CLASS, kotlin/annotation/AnnotationTarget.FUNCTION, kotlin/annotation/AnnotationTarget.PROPERTY, kotlin/annotation/AnnotationTarget.FIELD, kotlin/annotation/AnnotationTarget.PROPERTY_GETTER, kotlin/annotation/AnnotationTarget.PROPERTY_SETTER, kotlin/annotation/AnnotationTarget.TYPE_PARAMETER, kotlin/annotation/AnnotationTarget.VALUE_PARAMETER, kotlin/annotation/AnnotationTarget.TYPEALIAS, kotlin/annotation/AnnotationTarget.LOCAL_VARIABLE])
    public final annotation class Ann : kotlin/Annotation {

      public constructor()
    }

    @Ann
    public final class C<@Ann T#0 /* T */> : kotlin/Any {

      public constructor()

      public final fun ok(): kotlin/String
    }

    public final enum class E : kotlin/Enum<E> {

      private constructor()

      @Ann
      OK,

      // has Enum.entries
    }

    package {

      @Ann
      public final fun f(@Ann p: kotlin/String /* = TA^ */): kotlin/String /* = TA^ */

      public final var ok: kotlin/String
        @Ann
        public final /* non-default */ get
        @Ann
        public final /* non-default */ set(value: kotlin/String)

      @Ann
      public final val variable: kotlin/String /* = ... */
        public final get

      @Ann
      public typealias TA = kotlin/String /* = kotlin/String */
    }
  }
}

// MODULE: main
library {
  // module name: <main>

  library fragment {
    // package name: <root>

    package {

      public final fun box(): kotlin/String
    }
  }
}
