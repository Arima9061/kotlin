library {
  // module name: <main>

  library fragment {
    // package name: <root>

    // class name: CommonData
    // class name: PlatformData

    public final data class CommonData : kotlin/Any {

      public constructor(value: kotlin/String)

      public final /* synthesized */ operator fun component1(): kotlin/String

      public final /* synthesized */ fun copy(value: kotlin/String /* = ... */): CommonData

      public open /* synthesized */ operator fun equals(other: kotlin/Any?): kotlin/Boolean

      public open /* synthesized */ fun hashCode(): kotlin/Int

      public open /* synthesized */ fun toString(): kotlin/String

      public final val value: kotlin/String
        public final get
    }

    public final data class PlatformData : kotlin/Any {

      public constructor(commonData: CommonData)

      public final /* synthesized */ operator fun component1(): CommonData

      public final /* synthesized */ fun copy(commonData: CommonData /* = ... */): PlatformData

      public open /* synthesized */ operator fun equals(other: kotlin/Any?): kotlin/Boolean

      public open /* synthesized */ fun hashCode(): kotlin/Int

      public open /* synthesized */ fun toString(): kotlin/String

      public final val commonData: CommonData
        public final get
    }

    package {

      public final fun box(): kotlin/String
    }
  }
}
