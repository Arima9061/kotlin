// MODULE: lib
library {
  // module name: <lib>

  library fragment {
    // package name: a

    // class name: a/Nesting
    // class name: a/Two
    // class name: a/WithKClass

    public final annotation class a/Nesting : kotlin/Annotation {

      public constructor(a2: a/Two<kotlin/String, kotlin/collections/List<kotlin/String>> /* = ... */)

      public final val a2: a/Two<kotlin/String, kotlin/collections/List<kotlin/String>>
        public final get
    }

    public final annotation class a/Two<T#0 /* K */, T#1 /* V */> : kotlin/Annotation {

      public constructor(s: kotlin/String)

      public final val s: kotlin/String
        public final get
    }

    public final annotation class a/WithKClass<T#0 /* K */ : kotlin/Any> : kotlin/Annotation {

      public constructor(k: kotlin/reflect/KClass<T#0>)

      public final val k: kotlin/reflect/KClass<T#0>
        public final get
    }
  }
}

// MODULE: app
library {
  // module name: <app>

  library fragment {
    // package name: test

    package {

      public final fun box(): kotlin/String
    }
  }
}
