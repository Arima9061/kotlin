library {
  // module name: <main>

  library fragment {
    // package name: <root>

    // class name: E
    // class name: EnumA
    // class name: EnumB

    public final enum class E : kotlin/Enum<E> {

      private constructor()

      ONE,

      TWO,

      THREE,

      // has Enum.entries
    }

    public final enum class EnumA : kotlin/Enum<EnumA> {

      private constructor()

      A,

      B,

      C,

      // has Enum.entries
    }

    public final enum class EnumB : kotlin/Enum<EnumB> {

      private constructor()

      A,

      B,

      // has Enum.entries
    }

    package {

      public final fun box(): kotlin/String

      public final fun eA(): EnumA

      public final fun eB(): EnumA

      public final fun nestedWhen(): kotlin/Unit

      public final fun nullable(): kotlin/Unit

      public final fun operatorOverloading(): kotlin/Unit

      public final fun produceEntry(): EnumA

      public final fun smoke1(): kotlin/Unit

      public final fun smoke2(): kotlin/Unit

      public final val sb: kotlin/text/StringBuilder
        public final get
    }
  }
}
