MODULE_FRAGMENT name:<main>
  FILE fqName:<root> fileName:/recursiveCompareTo.kt
    CLASS CLASS name:C signature:/C|null[0] modality:FINAL visibility:public superTypes:[<unbound IrClassSymbolImpl>]
      $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:<root>.C
      CONSTRUCTOR signature:/C.<init>|<init>(){}[0] visibility:public <> () returnType:<root>.C [primary]
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL 'UNBOUND IrConstructorSymbolImpl'
          INSTANCE_INITIALIZER_CALL classDescriptor='CLASS CLASS name:C signature:/C|null[0] modality:FINAL visibility:public superTypes:[<unbound IrClassSymbolImpl>]'
    FUN name:compareTo signature:/compareTo|compareTo@C(C){}[0] visibility:public modality:FINAL <> ($receiver:<root>.C, o:<root>.C) returnType:<unbound IrClassSymbolImpl> [operator]
      $receiver: VALUE_PARAMETER name:<this> type:<root>.C
      VALUE_PARAMETER name:o index:0 type:<root>.C
      BLOCK_BODY
        WHEN type=<unbound IrClassSymbolImpl> origin=IF
          BRANCH
            if: CALL 'public final fun EQEQ (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EQEQ
              arg0: GET_VAR '<this>: <root>.C declared in <root>.compareTo' type=<root>.C origin=null
              arg1: GET_VAR 'o: <root>.C declared in <root>.compareTo' type=<root>.C origin=null
            then: RETURN type=<unbound IrClassSymbolImpl> from='public final fun compareTo (o: <root>.C): <unbound IrClassSymbolImpl> [operator] declared in <root>'
              CONST Int type=<unbound IrClassSymbolImpl> value=0
        WHEN type=<unbound IrClassSymbolImpl> origin=IF
          BRANCH
            if: CALL 'public final fun greaterOrEqual (arg0: <unbound IrClassSymbolImpl>, arg1: <unbound IrClassSymbolImpl>): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=GTEQ
              arg0: CALL 'public final fun compareTo (o: <root>.C): <unbound IrClassSymbolImpl> [operator] declared in <root>' type=<unbound IrClassSymbolImpl> origin=GTEQ
                $receiver: GET_VAR 'o: <root>.C declared in <root>.compareTo' type=<root>.C origin=null
                o: GET_VAR 'o: <root>.C declared in <root>.compareTo' type=<root>.C origin=null
              arg1: CONST Int type=<unbound IrClassSymbolImpl> value=0
            then: BLOCK type=<unbound IrClassSymbolImpl> origin=null
              RETURN type=<unbound IrClassSymbolImpl> from='public final fun compareTo (o: <root>.C): <unbound IrClassSymbolImpl> [operator] declared in <root>'
                CONST Int type=<unbound IrClassSymbolImpl> value=1
        RETURN type=<unbound IrClassSymbolImpl> from='public final fun compareTo (o: <root>.C): <unbound IrClassSymbolImpl> [operator] declared in <root>'
          CONST Int type=<unbound IrClassSymbolImpl> value=-1
    FUN name:box signature:/box|box(){}[0] visibility:public modality:FINAL <> () returnType:<unbound IrClassSymbolImpl>
      BLOCK_BODY
        RETURN type=<unbound IrClassSymbolImpl> from='public final fun box (): <unbound IrClassSymbolImpl> declared in <root>'
          WHEN type=<unbound IrClassSymbolImpl> origin=IF
            BRANCH
              if: CALL 'public final fun greater (arg0: <unbound IrClassSymbolImpl>, arg1: <unbound IrClassSymbolImpl>): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=GT
                arg0: CALL 'public final fun compareTo (o: <root>.C): <unbound IrClassSymbolImpl> [operator] declared in <root>' type=<unbound IrClassSymbolImpl> origin=GT
                  $receiver: CONSTRUCTOR_CALL 'public constructor <init> () [primary] declared in <root>.C' type=<root>.C origin=null
                  o: CONSTRUCTOR_CALL 'public constructor <init> () [primary] declared in <root>.C' type=<root>.C origin=null
                arg1: CONST Int type=<unbound IrClassSymbolImpl> value=0
              then: CONST String type=<unbound IrClassSymbolImpl> value="OK"
            BRANCH
              if: CONST Boolean type=<unbound IrClassSymbolImpl> value=true
              then: CONST String type=<unbound IrClassSymbolImpl> value="FAIL"
