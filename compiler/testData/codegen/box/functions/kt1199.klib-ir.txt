MODULE_FRAGMENT name:<main>
  FILE fqName:<root> fileName:/kt1199.kt
    CLASS INTERFACE name:MyIterator signature:/MyIterator|null[0] modality:ABSTRACT visibility:public superTypes:[<unbound IrClassSymbolImpl>]
      $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:<root>.MyIterator<T of <root>.MyIterator>
      TYPE_PARAMETER name:T index:0 variance: signature:[ /MyIterator|null[0] <- Local[<TP>,0|TYPE_PARAMETER name:T index:0 variance: superTypes:[kotlin.Any?] reified:false] ] superTypes:[<unbound IrClassSymbolImpl>?] reified:false
      FUN name:hasNext signature:/MyIterator.hasNext|hasNext(){}[0] visibility:public modality:ABSTRACT <> ($this:<root>.MyIterator<T of <root>.MyIterator>) returnType:<unbound IrClassSymbolImpl> [operator]
        $this: VALUE_PARAMETER name:<this> type:<root>.MyIterator<T of <root>.MyIterator>
      FUN name:next signature:/MyIterator.next|next(){}[0] visibility:public modality:ABSTRACT <> ($this:<root>.MyIterator<T of <root>.MyIterator>) returnType:T of <root>.MyIterator [operator]
        $this: VALUE_PARAMETER name:<this> type:<root>.MyIterator<T of <root>.MyIterator>
    FUN name:iterator signature:/iterator|iterator@0:0?(){0ยง<kotlin.Any>}[0] visibility:public modality:FINAL <T> ($receiver:T of <root>.iterator?) returnType:<root>.MyIterator<T of <root>.iterator> [operator]
      TYPE_PARAMETER name:T index:0 variance: signature:[ /iterator|iterator@0:0?(){0ยง<kotlin.Any>}[0] <- Local[<TP>,0|TYPE_PARAMETER name:T index:0 variance: superTypes:[kotlin.Any?] reified:false] ] superTypes:[<unbound IrClassSymbolImpl>] reified:false
      $receiver: VALUE_PARAMETER name:<this> type:T of <root>.iterator?
      BLOCK_BODY
        RETURN type=<unbound IrClassSymbolImpl> from='public final fun iterator <T> (): <root>.MyIterator<T of <root>.iterator> [operator] declared in <root>'
          BLOCK type=<root>.iterator.<no name provided><T of <root>.iterator> origin=OBJECT_LITERAL
            CLASS CLASS name:<no name provided> modality:FINAL visibility:local superTypes:[<root>.MyIterator<T of <root>.iterator>]
              $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:<root>.iterator.<no name provided><T of <root>.iterator>
              CONSTRUCTOR visibility:public <> () returnType:<root>.iterator.<no name provided><T of <root>.iterator> [primary]
                BLOCK_BODY
                  DELEGATING_CONSTRUCTOR_CALL 'UNBOUND IrConstructorSymbolImpl'
                  INSTANCE_INITIALIZER_CALL classDescriptor='CLASS CLASS name:<no name provided> modality:FINAL visibility:local superTypes:[<root>.MyIterator<T of <root>.iterator>]'
              PROPERTY name:hasNext visibility:private modality:FINAL [var]
                FIELD PROPERTY_BACKING_FIELD name:hasNext type:<unbound IrClassSymbolImpl> visibility:private
                  EXPRESSION_BODY
                    CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=EXCLEQ
                      $this: CALL 'public final fun EQEQ (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EXCLEQ
                        arg0: GET_VAR '<this>: T of <root>.iterator? declared in <root>.iterator' type=T of <root>.iterator? origin=null
                        arg1: CONST Null type=<unbound IrClassSymbolImpl>? value=null
                FUN DEFAULT_PROPERTY_ACCESSOR name:<get-hasNext> visibility:private modality:FINAL <> ($this:<root>.iterator.<no name provided><T of <root>.iterator>) returnType:<unbound IrClassSymbolImpl>
                  correspondingProperty: PROPERTY name:hasNext visibility:private modality:FINAL [var]
                  $this: VALUE_PARAMETER name:<this> type:<root>.iterator.<no name provided><T of <root>.iterator>
                  BLOCK_BODY
                    RETURN type=<unbound IrClassSymbolImpl> from='private final fun <get-hasNext> (): <unbound IrClassSymbolImpl> declared in <root>.iterator.<no name provided>'
                      GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:hasNext type:<unbound IrClassSymbolImpl> visibility:private' type=<unbound IrClassSymbolImpl> origin=null
                        receiver: GET_VAR '<this>: <root>.iterator.<no name provided><T of <root>.iterator> declared in <root>.iterator.<no name provided>.<get-hasNext>' type=<root>.iterator.<no name provided><T of <root>.iterator> origin=null
                FUN DEFAULT_PROPERTY_ACCESSOR name:<set-hasNext> visibility:private modality:FINAL <> ($this:<root>.iterator.<no name provided><T of <root>.iterator>, <set-?>:<unbound IrClassSymbolImpl>) returnType:<unbound IrClassSymbolImpl>
                  correspondingProperty: PROPERTY name:hasNext visibility:private modality:FINAL [var]
                  $this: VALUE_PARAMETER name:<this> type:<root>.iterator.<no name provided><T of <root>.iterator>
                  VALUE_PARAMETER name:<set-?> index:0 type:<unbound IrClassSymbolImpl>
                  BLOCK_BODY
                    SET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:hasNext type:<unbound IrClassSymbolImpl> visibility:private' type=<unbound IrClassSymbolImpl> origin=null
                      receiver: GET_VAR '<this>: <root>.iterator.<no name provided><T of <root>.iterator> declared in <root>.iterator.<no name provided>.<set-hasNext>' type=<root>.iterator.<no name provided><T of <root>.iterator> origin=null
                      value: GET_VAR '<set-?>: <unbound IrClassSymbolImpl> declared in <root>.iterator.<no name provided>.<set-hasNext>' type=<unbound IrClassSymbolImpl> origin=null
              FUN name:hasNext visibility:public modality:OPEN <> ($this:<root>.iterator.<no name provided><T of <root>.iterator>) returnType:<unbound IrClassSymbolImpl> [operator]
                overridden:
                  public abstract fun hasNext (): <unbound IrClassSymbolImpl> [operator] declared in <root>.MyIterator
                $this: VALUE_PARAMETER name:<this> type:<root>.iterator.<no name provided><T of <root>.iterator>
                BLOCK_BODY
                  RETURN type=<unbound IrClassSymbolImpl> from='public open fun hasNext (): <unbound IrClassSymbolImpl> [operator] declared in <root>.iterator.<no name provided>'
                    CALL 'private final fun <get-hasNext> (): <unbound IrClassSymbolImpl> declared in <root>.iterator.<no name provided>' type=<unbound IrClassSymbolImpl> origin=GET_PROPERTY
                      $this: GET_VAR '<this>: <root>.iterator.<no name provided><T of <root>.iterator> declared in <root>.iterator.<no name provided>.hasNext' type=<root>.iterator.<no name provided><T of <root>.iterator> origin=null
              FUN name:next visibility:public modality:OPEN <> ($this:<root>.iterator.<no name provided><T of <root>.iterator>) returnType:T of <root>.iterator [operator]
                overridden:
                  public abstract fun next (): T of <root>.MyIterator [operator] declared in <root>.MyIterator
                $this: VALUE_PARAMETER name:<this> type:<root>.iterator.<no name provided><T of <root>.iterator>
                BLOCK_BODY
                  WHEN type=<unbound IrClassSymbolImpl> origin=IF
                    BRANCH
                      if: CALL 'private final fun <get-hasNext> (): <unbound IrClassSymbolImpl> declared in <root>.iterator.<no name provided>' type=<unbound IrClassSymbolImpl> origin=GET_PROPERTY
                        $this: GET_VAR '<this>: <root>.iterator.<no name provided><T of <root>.iterator> declared in <root>.iterator.<no name provided>.next' type=<root>.iterator.<no name provided><T of <root>.iterator> origin=null
                      then: BLOCK type=<unbound IrClassSymbolImpl> origin=null
                        CALL 'private final fun <set-hasNext> (<set-?>: <unbound IrClassSymbolImpl>): <unbound IrClassSymbolImpl> declared in <root>.iterator.<no name provided>' type=<unbound IrClassSymbolImpl> origin=EQ
                          $this: GET_VAR '<this>: <root>.iterator.<no name provided><T of <root>.iterator> declared in <root>.iterator.<no name provided>.next' type=<root>.iterator.<no name provided><T of <root>.iterator> origin=null
                          <set-?>: CONST Boolean type=<unbound IrClassSymbolImpl> value=false
                        RETURN type=<unbound IrClassSymbolImpl> from='public open fun next (): T of <root>.iterator [operator] declared in <root>.iterator.<no name provided>'
                          CALL 'public final fun CHECK_NOT_NULL <T0> (arg0: T0 of kotlin.internal.ir.CHECK_NOT_NULL?): {T0 of kotlin.internal.ir.CHECK_NOT_NULL & Any} declared in kotlin.internal.ir' type={T of <root>.iterator & Any} origin=EXCLEXCL
                            <T0>: {T of <root>.iterator & Any}
                            arg0: GET_VAR '<this>: T of <root>.iterator? declared in <root>.iterator' type=T of <root>.iterator? origin=null
                  THROW type=<unbound IrClassSymbolImpl>
                    CONSTRUCTOR_CALL 'UNBOUND IrConstructorSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
            CONSTRUCTOR_CALL 'public constructor <init> () [primary] declared in <root>.iterator.<no name provided>' type=<root>.iterator.<no name provided><T of <root>.iterator> origin=OBJECT_LITERAL
    FUN name:box signature:/box|box(){}[0] visibility:public modality:FINAL <> () returnType:<unbound IrClassSymbolImpl>
      BLOCK_BODY
        VAR name:k type:<unbound IrClassSymbolImpl> [var]
          CONST Int type=<unbound IrClassSymbolImpl> value=0
        BLOCK type=<unbound IrClassSymbolImpl> origin=FOR_LOOP
          VAR FOR_LOOP_ITERATOR name:<iterator> type:<root>.MyIterator<<unbound IrClassSymbolImpl>> [val]
            CALL 'public final fun iterator <T> (): <root>.MyIterator<T of <root>.iterator> [operator] declared in <root>' type=<root>.MyIterator<<unbound IrClassSymbolImpl>> origin=null
              <T>: <unbound IrClassSymbolImpl>
              $receiver: CONST Int type=<unbound IrClassSymbolImpl> value=1
          WHILE label=null origin=FOR_LOOP_INNER_WHILE
            condition: CALL 'public abstract fun hasNext (): <unbound IrClassSymbolImpl> [operator] declared in <root>.MyIterator' type=<unbound IrClassSymbolImpl> origin=null
              $this: GET_VAR 'val <iterator>: <root>.MyIterator<<unbound IrClassSymbolImpl>> [val] declared in <root>.box' type=<root>.MyIterator<<unbound IrClassSymbolImpl>> origin=null
            body: BLOCK type=<unbound IrClassSymbolImpl> origin=FOR_LOOP_INNER_WHILE
              VAR name:i type:<unbound IrClassSymbolImpl> [val]
                CALL 'public abstract fun next (): T of <root>.MyIterator [operator] declared in <root>.MyIterator' type=<unbound IrClassSymbolImpl> origin=null
                  $this: GET_VAR 'val <iterator>: <root>.MyIterator<<unbound IrClassSymbolImpl>> [val] declared in <root>.box' type=<root>.MyIterator<<unbound IrClassSymbolImpl>> origin=null
              TYPE_OP type=<unbound IrClassSymbolImpl> origin=IMPLICIT_COERCION_TO_UNIT typeOperand=<unbound IrClassSymbolImpl>
                BLOCK type=<unbound IrClassSymbolImpl> origin=POSTFIX_INCR
                  VAR IR_TEMPORARY_VARIABLE name:<unary> type:<unbound IrClassSymbolImpl> [val]
                    GET_VAR 'var k: <unbound IrClassSymbolImpl> [var] declared in <root>.box' type=<unbound IrClassSymbolImpl> origin=POSTFIX_INCR
                  SET_VAR 'var k: <unbound IrClassSymbolImpl> [var] declared in <root>.box' type=<unbound IrClassSymbolImpl> origin=POSTFIX_INCR
                    CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=POSTFIX_INCR
                      $this: GET_VAR 'val <unary>: <unbound IrClassSymbolImpl> [val] declared in <root>.box' type=<unbound IrClassSymbolImpl> origin=null
                  GET_VAR 'val <unary>: <unbound IrClassSymbolImpl> [val] declared in <root>.box' type=<unbound IrClassSymbolImpl> origin=null
        RETURN type=<unbound IrClassSymbolImpl> from='public final fun box (): <unbound IrClassSymbolImpl> declared in <root>'
          WHEN type=<unbound IrClassSymbolImpl> origin=IF
            BRANCH
              if: CALL 'public final fun EQEQ (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EQEQ
                arg0: GET_VAR 'var k: <unbound IrClassSymbolImpl> [var] declared in <root>.box' type=<unbound IrClassSymbolImpl> origin=null
                arg1: CONST Int type=<unbound IrClassSymbolImpl> value=1
              then: CONST String type=<unbound IrClassSymbolImpl> value="OK"
            BRANCH
              if: CONST Boolean type=<unbound IrClassSymbolImpl> value=true
              then: CONST String type=<unbound IrClassSymbolImpl> value="fail"
