MODULE_FRAGMENT name:<main>
  FILE fqName:<root> fileName:/expectException.kt
    FUN name:fails signature:/fails|fails(kotlin.Function0<kotlin.Unit>){}[0] visibility:public modality:FINAL <> (block:<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>>) returnType:<unbound IrClassSymbolImpl>? [inline]
      VALUE_PARAMETER name:block index:0 type:<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>>
      BLOCK_BODY
        VAR name:thrown type:<unbound IrClassSymbolImpl>? [var]
          CONST Null type=<unbound IrClassSymbolImpl>? value=null
        TRY type=<unbound IrClassSymbolImpl>
          try: BLOCK type=<unbound IrClassSymbolImpl> origin=null
            CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=INVOKE
              $this: GET_VAR 'block: <unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> declared in <root>.fails' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> origin=VARIABLE_AS_FUNCTION
          CATCH parameter=val e: <unbound IrClassSymbolImpl> [val] declared in <root>.fails
            VAR CATCH_PARAMETER name:e type:<unbound IrClassSymbolImpl> [val]
            BLOCK type=<unbound IrClassSymbolImpl> origin=null
              SET_VAR 'var thrown: <unbound IrClassSymbolImpl>? [var] declared in <root>.fails' type=<unbound IrClassSymbolImpl> origin=EQ
                GET_VAR 'val e: <unbound IrClassSymbolImpl> [val] declared in <root>.fails' type=<unbound IrClassSymbolImpl> origin=null
        WHEN type=<unbound IrClassSymbolImpl> origin=IF
          BRANCH
            if: CALL 'public final fun EQEQ (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EQEQ
              arg0: GET_VAR 'var thrown: <unbound IrClassSymbolImpl>? [var] declared in <root>.fails' type=<unbound IrClassSymbolImpl>? origin=null
              arg1: CONST Null type=<unbound IrClassSymbolImpl>? value=null
            then: THROW type=<unbound IrClassSymbolImpl>
              CONSTRUCTOR_CALL 'UNBOUND IrConstructorSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
                1: CONST String type=<unbound IrClassSymbolImpl> value="Expected an exception to be thrown"
        RETURN type=<unbound IrClassSymbolImpl> from='public final fun fails (block: <unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>>): <unbound IrClassSymbolImpl>? [inline] declared in <root>'
          GET_VAR 'var thrown: <unbound IrClassSymbolImpl>? [var] declared in <root>.fails' type=<unbound IrClassSymbolImpl>? origin=null
    FUN name:throwIt signature:/throwIt|throwIt(kotlin.String){}[0] visibility:public modality:FINAL <> (msg:<unbound IrClassSymbolImpl>) returnType:<unbound IrClassSymbolImpl> [inline]
      VALUE_PARAMETER name:msg index:0 type:<unbound IrClassSymbolImpl>
      BLOCK_BODY
        THROW type=<unbound IrClassSymbolImpl>
          CONSTRUCTOR_CALL 'UNBOUND IrConstructorSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
            1: GET_VAR 'msg: <unbound IrClassSymbolImpl> declared in <root>.throwIt' type=<unbound IrClassSymbolImpl> origin=null
    FUN name:box signature:/box|box(){}[0] visibility:public modality:FINAL <> () returnType:<unbound IrClassSymbolImpl>
      BLOCK_BODY
        TYPE_OP type=<unbound IrClassSymbolImpl> origin=IMPLICIT_COERCION_TO_UNIT typeOperand=<unbound IrClassSymbolImpl>
          CALL 'public final fun fails (block: <unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>>): <unbound IrClassSymbolImpl>? [inline] declared in <root>' type=<unbound IrClassSymbolImpl>? origin=null
            block: FUN_EXPR type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> origin=LAMBDA
              FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL <> () returnType:<unbound IrClassSymbolImpl>
                BLOCK_BODY
                  CALL 'public final fun throwIt (msg: <unbound IrClassSymbolImpl>): <unbound IrClassSymbolImpl> [inline] declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
                    msg: CONST String type=<unbound IrClassSymbolImpl> value="oops!"
        VAR name:x type:<unbound IrClassSymbolImpl> [var]
          CONST Int type=<unbound IrClassSymbolImpl> value=0
        TYPE_OP type=<unbound IrClassSymbolImpl> origin=IMPLICIT_COERCION_TO_UNIT typeOperand=<unbound IrClassSymbolImpl>
          TRY type=<unbound IrClassSymbolImpl>?
            try: BLOCK type=<unbound IrClassSymbolImpl>? origin=null
              CALL 'public final fun fails (block: <unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>>): <unbound IrClassSymbolImpl>? [inline] declared in <root>' type=<unbound IrClassSymbolImpl>? origin=null
                block: FUN_EXPR type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> origin=LAMBDA
                  FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL <> () returnType:<unbound IrClassSymbolImpl>
                    BLOCK_BODY
                      SET_VAR 'var x: <unbound IrClassSymbolImpl> [var] declared in <root>.box' type=<unbound IrClassSymbolImpl> origin=EQ
                        CONST Int type=<unbound IrClassSymbolImpl> value=1
            CATCH parameter=val e: <unbound IrClassSymbolImpl> [val] declared in <root>.box
              VAR CATCH_PARAMETER name:e type:<unbound IrClassSymbolImpl> [val]
              BLOCK type=<unbound IrClassSymbolImpl> origin=null
                SET_VAR 'var x: <unbound IrClassSymbolImpl> [var] declared in <root>.box' type=<unbound IrClassSymbolImpl> origin=EQ
                  CONST Int type=<unbound IrClassSymbolImpl> value=2
        WHEN type=<unbound IrClassSymbolImpl> origin=IF
          BRANCH
            if: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=EXCLEQ
              $this: CALL 'public final fun EQEQ (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EXCLEQ
                arg0: GET_VAR 'var x: <unbound IrClassSymbolImpl> [var] declared in <root>.box' type=<unbound IrClassSymbolImpl> origin=null
                arg1: CONST Int type=<unbound IrClassSymbolImpl> value=2
            then: RETURN type=<unbound IrClassSymbolImpl> from='public final fun box (): <unbound IrClassSymbolImpl> declared in <root>'
              STRING_CONCATENATION type=<unbound IrClassSymbolImpl>
                CONST String type=<unbound IrClassSymbolImpl> value="Failed: x=="
                GET_VAR 'var x: <unbound IrClassSymbolImpl> [var] declared in <root>.box' type=<unbound IrClassSymbolImpl> origin=null
        RETURN type=<unbound IrClassSymbolImpl> from='public final fun box (): <unbound IrClassSymbolImpl> declared in <root>'
          CONST String type=<unbound IrClassSymbolImpl> value="OK"
