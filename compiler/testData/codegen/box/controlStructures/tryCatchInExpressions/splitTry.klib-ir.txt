MODULE_FRAGMENT name:<main>
  FILE fqName:<root> fileName:/splitTry.kt
    FUN name:test signature:/test|test(kotlin.Function0<kotlin.Int>){}[0] visibility:public modality:FINAL <> (s:<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>>) returnType:<unbound IrClassSymbolImpl> [inline]
      VALUE_PARAMETER name:s index:0 type:<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>>
      BLOCK_BODY
        RETURN type=<unbound IrClassSymbolImpl> from='public final fun test (s: <unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>>): <unbound IrClassSymbolImpl> [inline] declared in <root>'
          TRY type=<unbound IrClassSymbolImpl>
            try: BLOCK type=<unbound IrClassSymbolImpl> origin=null
              VAR name:i type:<unbound IrClassSymbolImpl> [val]
                CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=INVOKE
                  $this: GET_VAR 's: <unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> declared in <root>.test' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> origin=VARIABLE_AS_FUNCTION
              CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=PLUS
                $this: GET_VAR 'val i: <unbound IrClassSymbolImpl> [val] declared in <root>.test' type=<unbound IrClassSymbolImpl> origin=null
                1: CONST Int type=<unbound IrClassSymbolImpl> value=10
            finally: BLOCK type=<unbound IrClassSymbolImpl> origin=null
              TYPE_OP type=<unbound IrClassSymbolImpl> origin=IMPLICIT_COERCION_TO_UNIT typeOperand=<unbound IrClassSymbolImpl>
                CONST Int type=<unbound IrClassSymbolImpl> value=0
    FUN name:box signature:/box|box(){}[0] visibility:public modality:FINAL <> () returnType:<unbound IrClassSymbolImpl>
      BLOCK_BODY
        TYPE_OP type=<unbound IrClassSymbolImpl> origin=IMPLICIT_COERCION_TO_UNIT typeOperand=<unbound IrClassSymbolImpl>
          CALL 'public final fun test (s: <unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>>): <unbound IrClassSymbolImpl> [inline] declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
            s: FUN_EXPR type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> origin=LAMBDA
              FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL <> () returnType:<unbound IrClassSymbolImpl>
                BLOCK_BODY
                  RETURN type=<unbound IrClassSymbolImpl> from='local final fun <anonymous> (): <unbound IrClassSymbolImpl> declared in <root>.box'
                    TRY type=<unbound IrClassSymbolImpl>
                      try: BLOCK type=<unbound IrClassSymbolImpl> origin=null
                        VAR name:p type:<unbound IrClassSymbolImpl> [val]
                          CONST Int type=<unbound IrClassSymbolImpl> value=1
                        RETURN type=<unbound IrClassSymbolImpl> from='public final fun box (): <unbound IrClassSymbolImpl> declared in <root>'
                          CONST String type=<unbound IrClassSymbolImpl> value="OK"
                      CATCH parameter=val e: <unbound IrClassSymbolImpl> [val] declared in <root>.box.<anonymous>
                        VAR CATCH_PARAMETER name:e type:<unbound IrClassSymbolImpl> [val]
                        BLOCK type=<unbound IrClassSymbolImpl> origin=null
                          CONST Int type=<unbound IrClassSymbolImpl> value=-2
                      finally: BLOCK type=<unbound IrClassSymbolImpl> origin=null
                        TYPE_OP type=<unbound IrClassSymbolImpl> origin=IMPLICIT_COERCION_TO_UNIT typeOperand=<unbound IrClassSymbolImpl>
                          CONST Int type=<unbound IrClassSymbolImpl> value=-3
        RETURN type=<unbound IrClassSymbolImpl> from='public final fun box (): <unbound IrClassSymbolImpl> declared in <root>'
          CONST String type=<unbound IrClassSymbolImpl> value="Failed"
