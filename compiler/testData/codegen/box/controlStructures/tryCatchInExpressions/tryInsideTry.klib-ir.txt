MODULE_FRAGMENT name:<main>
  FILE fqName:<root> fileName:/tryInsideTry.kt
    CLASS CLASS name:MyException signature:/MyException|null[0] modality:FINAL visibility:public superTypes:[<unbound IrClassSymbolImpl>]
      $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:<root>.MyException
      CONSTRUCTOR signature:/MyException.<init>|<init>(kotlin.String){}[0] visibility:public <> (message:<unbound IrClassSymbolImpl>) returnType:<root>.MyException [primary]
        VALUE_PARAMETER name:message index:0 type:<unbound IrClassSymbolImpl>
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL 'UNBOUND IrConstructorSymbolImpl'
            1: GET_VAR 'message: <unbound IrClassSymbolImpl> declared in <root>.MyException.<init>' type=<unbound IrClassSymbolImpl> origin=null
          INSTANCE_INITIALIZER_CALL classDescriptor='CLASS CLASS name:MyException signature:/MyException|null[0] modality:FINAL visibility:public superTypes:[<unbound IrClassSymbolImpl>]'
    FUN name:box signature:/box|box(){}[0] visibility:public modality:FINAL <> () returnType:<unbound IrClassSymbolImpl>
      BLOCK_BODY
        RETURN type=<unbound IrClassSymbolImpl> from='public final fun box (): <unbound IrClassSymbolImpl> declared in <root>'
          CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=PLUS
            $this: CONST String type=<unbound IrClassSymbolImpl> value="O"
            1: TRY type=<unbound IrClassSymbolImpl>
              try: BLOCK type=<unbound IrClassSymbolImpl> origin=null
                TRY type=<unbound IrClassSymbolImpl>
                  try: BLOCK type=<unbound IrClassSymbolImpl> origin=null
                    THROW type=<unbound IrClassSymbolImpl>
                      CONSTRUCTOR_CALL 'UNBOUND IrConstructorSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
                        1: CONST String type=<unbound IrClassSymbolImpl> value="oops!"
                  CATCH parameter=val mye: <root>.MyException [val] declared in <root>.box
                    VAR CATCH_PARAMETER name:mye type:<root>.MyException [val]
                    BLOCK type=<unbound IrClassSymbolImpl> origin=null
                      CONST String type=<unbound IrClassSymbolImpl> value="1"
              CATCH parameter=val e: <unbound IrClassSymbolImpl> [val] declared in <root>.box
                VAR CATCH_PARAMETER name:e type:<unbound IrClassSymbolImpl> [val]
                BLOCK type=<unbound IrClassSymbolImpl> origin=null
                  CONST String type=<unbound IrClassSymbolImpl> value="K"
