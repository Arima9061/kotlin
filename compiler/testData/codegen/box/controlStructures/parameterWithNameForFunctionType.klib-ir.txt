MODULE_FRAGMENT name:<main>
  FILE fqName:<root> fileName:/parameterWithNameForFunctionType.kt
    FUN name:test signature:/test|test(0:0;0:0;kotlin.Function1<0:0,0:0>){0ยง<kotlin.Any?>}[0] visibility:public modality:FINAL <T> (a:T of <root>.test, b:T of <root>.test, operation:<unbound IrClassSymbolImpl><@[<unbound>(1 = "x")] T of <root>.test, T of <root>.test>) returnType:<unbound IrClassSymbolImpl>
      TYPE_PARAMETER name:T index:0 variance: signature:[ /test|test(0:0;0:0;kotlin.Function1<0:0,0:0>){0ยง<kotlin.Any?>}[0] <- Local[<TP>,0|TYPE_PARAMETER name:T index:0 variance: superTypes:[kotlin.Any?] reified:false] ] superTypes:[<unbound IrClassSymbolImpl>?] reified:false
      VALUE_PARAMETER name:a index:0 type:T of <root>.test
      VALUE_PARAMETER name:b index:1 type:T of <root>.test
      VALUE_PARAMETER name:operation index:2 type:<unbound IrClassSymbolImpl><@[<unbound>(1 = "x")] T of <root>.test, T of <root>.test>
      BLOCK_BODY
        TYPE_OP type=<unbound IrClassSymbolImpl> origin=IMPLICIT_COERCION_TO_UNIT typeOperand=<unbound IrClassSymbolImpl>
          CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=T of <root>.test origin=INVOKE
            $this: GET_VAR 'operation: <unbound IrClassSymbolImpl><@[<unbound>(1 = "x")] T of <root>.test, T of <root>.test> declared in <root>.test' type=<unbound IrClassSymbolImpl><@[<unbound>(1 = "x")] T of <root>.test, T of <root>.test> origin=VARIABLE_AS_FUNCTION
            1: WHEN type=T of <root>.test origin=IF
              BRANCH
                if: CALL 'public final fun greater (arg0: <unbound IrClassSymbolImpl>, arg1: <unbound IrClassSymbolImpl>): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=GT
                  arg0: CONST Int type=<unbound IrClassSymbolImpl> value=3
                  arg1: CONST Int type=<unbound IrClassSymbolImpl> value=2
                then: GET_VAR 'a: T of <root>.test declared in <root>.test' type=T of <root>.test origin=null
              BRANCH
                if: CONST Boolean type=<unbound IrClassSymbolImpl> value=true
                then: GET_VAR 'b: T of <root>.test declared in <root>.test' type=T of <root>.test origin=null
    FUN name:box signature:/box|box(){}[0] visibility:public modality:FINAL <> () returnType:<unbound IrClassSymbolImpl>
      BLOCK_BODY
        CALL 'public final fun test <T> (a: T of <root>.test, b: T of <root>.test, operation: <unbound IrClassSymbolImpl><@[<unbound>(1 = "x")] T of <root>.test, T of <root>.test>): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
          <T>: <unbound IrClassSymbolImpl>
          a: CONST Int type=<unbound IrClassSymbolImpl> value=1
          b: CONST Int type=<unbound IrClassSymbolImpl> value=1
          operation: FUN_EXPR type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>, <unbound IrClassSymbolImpl>> origin=LAMBDA
            FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL <> (it:<unbound IrClassSymbolImpl>) returnType:<unbound IrClassSymbolImpl>
              VALUE_PARAMETER name:it index:0 type:<unbound IrClassSymbolImpl>
              BLOCK_BODY
                RETURN type=<unbound IrClassSymbolImpl> from='local final fun <anonymous> (it: <unbound IrClassSymbolImpl>): <unbound IrClassSymbolImpl> declared in <root>.box'
                  GET_VAR 'it: <unbound IrClassSymbolImpl> declared in <root>.box.<anonymous>' type=<unbound IrClassSymbolImpl> origin=null
        RETURN type=<unbound IrClassSymbolImpl> from='public final fun box (): <unbound IrClassSymbolImpl> declared in <root>'
          CONST String type=<unbound IrClassSymbolImpl> value="OK"
