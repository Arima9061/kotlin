MODULE_FRAGMENT name:<main>
  FILE fqName:<root> fileName:/lambdaPassedToInlineFunction.kt
    CLASS ANNOTATION_CLASS name:SomeAnnotation signature:/SomeAnnotation|null[0] modality:OPEN visibility:public superTypes:[<unbound IrClassSymbolImpl>]
      annotations:
        <unbound>(1 = [GET_ENUM 'UNBOUND IrEnumEntrySymbolImpl' type=<unbound IrClassSymbolImpl>] type=<unbound IrClassSymbolImpl><out <unbound IrClassSymbolImpl>> varargElementType=<unbound IrClassSymbolImpl>)
        <unbound>(1 = GET_ENUM 'UNBOUND IrEnumEntrySymbolImpl' type=<unbound IrClassSymbolImpl>)
      $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:<root>.SomeAnnotation
      CONSTRUCTOR signature:/SomeAnnotation.<init>|<init>(){}[0] visibility:public <> () returnType:<root>.SomeAnnotation [primary]
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL 'UNBOUND IrConstructorSymbolImpl'
          INSTANCE_INITIALIZER_CALL classDescriptor='CLASS ANNOTATION_CLASS name:SomeAnnotation signature:/SomeAnnotation|null[0] modality:OPEN visibility:public superTypes:[<unbound IrClassSymbolImpl>]'
    FUN name:foo signature:/foo|foo(kotlin.Function0<kotlin.Unit>){}[0] visibility:public modality:FINAL <> (block:<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>>) returnType:<unbound IrClassSymbolImpl> [inline]
      VALUE_PARAMETER name:block index:0 type:<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>>
      BLOCK_BODY
        RETURN type=<unbound IrClassSymbolImpl> from='public final fun foo (block: <unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>>): <unbound IrClassSymbolImpl> [inline] declared in <root>'
          CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=INVOKE
            $this: GET_VAR 'block: <unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> declared in <root>.foo' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> origin=VARIABLE_AS_FUNCTION
    FUN name:box signature:/box|box(){}[0] visibility:public modality:FINAL <> () returnType:<unbound IrClassSymbolImpl>
      BLOCK_BODY
        VAR name:visited type:<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>, <unbound IrClassSymbolImpl>>> [val]
          CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>, <unbound IrClassSymbolImpl>>> origin=null
            <1>: <unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>, <unbound IrClassSymbolImpl>>
        VAR name:i type:<unbound IrClassSymbolImpl> [var]
          CONST Int type=<unbound IrClassSymbolImpl> value=0
        WHILE label=outer origin=WHILE_LOOP
          condition: CONST Boolean type=<unbound IrClassSymbolImpl> value=true
          body: BLOCK type=<unbound IrClassSymbolImpl> origin=null
            SET_VAR 'var i: <unbound IrClassSymbolImpl> [var] declared in <root>.box' type=<unbound IrClassSymbolImpl> origin=PLUSEQ
              CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=PLUSEQ
                $this: GET_VAR 'var i: <unbound IrClassSymbolImpl> [var] declared in <root>.box' type=<unbound IrClassSymbolImpl> origin=PLUSEQ
                1: CONST Int type=<unbound IrClassSymbolImpl> value=1
            BLOCK type=<unbound IrClassSymbolImpl> origin=FOR_LOOP
              VAR FOR_LOOP_ITERATOR name:<iterator> type:<unbound IrClassSymbolImpl> [val]
                CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=FOR_LOOP_ITERATOR
                  $this: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=RANGE
                    $this: CONST Int type=<unbound IrClassSymbolImpl> value=1
                    1: CONST Int type=<unbound IrClassSymbolImpl> value=10
              WHILE label=inner origin=FOR_LOOP_INNER_WHILE
                condition: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=FOR_LOOP_HAS_NEXT
                  $this: GET_VAR 'val <iterator>: <unbound IrClassSymbolImpl> [val] declared in <root>.box' type=<unbound IrClassSymbolImpl> origin=null
                body: BLOCK type=<unbound IrClassSymbolImpl> origin=FOR_LOOP_INNER_WHILE
                  VAR FOR_LOOP_VARIABLE name:j type:<unbound IrClassSymbolImpl> [val]
                    CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=FOR_LOOP_NEXT
                      $this: GET_VAR 'val <iterator>: <unbound IrClassSymbolImpl> [val] declared in <root>.box' type=<unbound IrClassSymbolImpl> origin=null
                  BLOCK type=<unbound IrClassSymbolImpl> origin=null
                    CALL 'public final fun foo (block: <unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>>): <unbound IrClassSymbolImpl> [inline] declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
                      block: FUN_EXPR type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> origin=ANONYMOUS_FUNCTION
                        FUN LOCAL_FUNCTION name:<no name provided> visibility:local modality:FINAL <> () returnType:<unbound IrClassSymbolImpl>
                          annotations:
                            SomeAnnotation
                          BLOCK_BODY
                            CALL 'public final fun foo (block: <unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>>): <unbound IrClassSymbolImpl> [inline] declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
                              block: FUN_EXPR type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> origin=ANONYMOUS_FUNCTION
                                FUN LOCAL_FUNCTION name:<no name provided> visibility:local modality:FINAL <> () returnType:<unbound IrClassSymbolImpl>
                                  BLOCK_BODY
                                    CALL 'public final fun foo (block: <unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>>): <unbound IrClassSymbolImpl> [inline] declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
                                      block: FUN_EXPR type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> origin=LAMBDA
                                        FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL <> () returnType:<unbound IrClassSymbolImpl>
                                          annotations:
                                            SomeAnnotation
                                          BLOCK_BODY
                                            CALL 'public final fun foo (block: <unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>>): <unbound IrClassSymbolImpl> [inline] declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
                                              block: FUN_EXPR type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> origin=LAMBDA
                                                FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL <> () returnType:<unbound IrClassSymbolImpl>
                                                  BLOCK_BODY
                                                    WHEN type=<unbound IrClassSymbolImpl> origin=IF
                                                      BRANCH
                                                        if: CALL 'public final fun EQEQ (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EQEQ
                                                          arg0: GET_VAR 'var i: <unbound IrClassSymbolImpl> [var] declared in <root>.box' type=<unbound IrClassSymbolImpl> origin=null
                                                          arg1: CONST Int type=<unbound IrClassSymbolImpl> value=2
                                                        then: BLOCK type=<unbound IrClassSymbolImpl> origin=null
                                                          CONTINUE label=outer loop.label=outer
                                                    WHEN type=<unbound IrClassSymbolImpl> origin=IF
                                                      BRANCH
                                                        if: CALL 'public final fun EQEQ (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EQEQ
                                                          arg0: GET_VAR 'var i: <unbound IrClassSymbolImpl> [var] declared in <root>.box' type=<unbound IrClassSymbolImpl> origin=null
                                                          arg1: CONST Int type=<unbound IrClassSymbolImpl> value=4
                                                        then: BLOCK type=<unbound IrClassSymbolImpl> origin=null
                                                          BREAK label=outer loop.label=outer
                                                    WHEN type=<unbound IrClassSymbolImpl> origin=IF
                                                      BRANCH
                                                        if: CALL 'public final fun EQEQ (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EQEQ
                                                          arg0: GET_VAR 'val j: <unbound IrClassSymbolImpl> [val] declared in <root>.box' type=<unbound IrClassSymbolImpl> origin=null
                                                          arg1: CONST Int type=<unbound IrClassSymbolImpl> value=2
                                                        then: BLOCK type=<unbound IrClassSymbolImpl> origin=null
                                                          CONTINUE label=inner loop.label=inner
                                                    WHEN type=<unbound IrClassSymbolImpl> origin=IF
                                                      BRANCH
                                                        if: CALL 'public final fun EQEQ (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EQEQ
                                                          arg0: GET_VAR 'val j: <unbound IrClassSymbolImpl> [val] declared in <root>.box' type=<unbound IrClassSymbolImpl> origin=null
                                                          arg1: CONST Int type=<unbound IrClassSymbolImpl> value=4
                                                        then: BLOCK type=<unbound IrClassSymbolImpl> origin=null
                                                          CONTINUE label=inner loop.label=inner
                                                    WHEN type=<unbound IrClassSymbolImpl> origin=IF
                                                      BRANCH
                                                        if: WHEN type=<unbound IrClassSymbolImpl> origin=ANDAND
                                                          BRANCH
                                                            if: CALL 'public final fun EQEQ (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EQEQ
                                                              arg0: GET_VAR 'val j: <unbound IrClassSymbolImpl> [val] declared in <root>.box' type=<unbound IrClassSymbolImpl> origin=null
                                                              arg1: CONST Int type=<unbound IrClassSymbolImpl> value=6
                                                            then: CALL 'public final fun EQEQ (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EQEQ
                                                              arg0: GET_VAR 'var i: <unbound IrClassSymbolImpl> [var] declared in <root>.box' type=<unbound IrClassSymbolImpl> origin=null
                                                              arg1: CONST Int type=<unbound IrClassSymbolImpl> value=1
                                                          BRANCH
                                                            if: CONST Boolean type=<unbound IrClassSymbolImpl> value=true
                                                            then: CONST Boolean type=<unbound IrClassSymbolImpl> value=false
                                                        then: BLOCK type=<unbound IrClassSymbolImpl> origin=null
                                                          BREAK label=inner loop.label=inner
                                                    WHEN type=<unbound IrClassSymbolImpl> origin=IF
                                                      BRANCH
                                                        if: WHEN type=<unbound IrClassSymbolImpl> origin=ANDAND
                                                          BRANCH
                                                            if: CALL 'public final fun EQEQ (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EQEQ
                                                              arg0: GET_VAR 'val j: <unbound IrClassSymbolImpl> [val] declared in <root>.box' type=<unbound IrClassSymbolImpl> origin=null
                                                              arg1: CONST Int type=<unbound IrClassSymbolImpl> value=6
                                                            then: CALL 'public final fun EQEQ (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EQEQ
                                                              arg0: GET_VAR 'var i: <unbound IrClassSymbolImpl> [var] declared in <root>.box' type=<unbound IrClassSymbolImpl> origin=null
                                                              arg1: CONST Int type=<unbound IrClassSymbolImpl> value=3
                                                          BRANCH
                                                            if: CONST Boolean type=<unbound IrClassSymbolImpl> value=true
                                                            then: CONST Boolean type=<unbound IrClassSymbolImpl> value=false
                                                        then: BLOCK type=<unbound IrClassSymbolImpl> origin=null
                                                          BREAK label=inner loop.label=inner
                    CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=PLUSEQ
                      <1>: <unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>, <unbound IrClassSymbolImpl>>
                      $receiver: GET_VAR 'val visited: <unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>, <unbound IrClassSymbolImpl>>> [val] declared in <root>.box' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>, <unbound IrClassSymbolImpl>>> origin=PLUSEQ
                      1: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>, <unbound IrClassSymbolImpl>> origin=null
                        <1>: <unbound IrClassSymbolImpl>
                        <2>: <unbound IrClassSymbolImpl>
                        $receiver: GET_VAR 'var i: <unbound IrClassSymbolImpl> [var] declared in <root>.box' type=<unbound IrClassSymbolImpl> origin=null
                        1: GET_VAR 'val j: <unbound IrClassSymbolImpl> [val] declared in <root>.box' type=<unbound IrClassSymbolImpl> origin=null
        CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
          <1>: <unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>, <unbound IrClassSymbolImpl>>>
          1: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>, <unbound IrClassSymbolImpl>>> origin=null
            <1>: <unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>, <unbound IrClassSymbolImpl>>
            1: VARARG type=<unbound IrClassSymbolImpl><out <unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>, <unbound IrClassSymbolImpl>>> varargElementType=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>, <unbound IrClassSymbolImpl>>
              CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>, <unbound IrClassSymbolImpl>> origin=null
                <1>: <unbound IrClassSymbolImpl>
                <2>: <unbound IrClassSymbolImpl>
                $receiver: CONST Int type=<unbound IrClassSymbolImpl> value=1
                1: CONST Int type=<unbound IrClassSymbolImpl> value=1
              CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>, <unbound IrClassSymbolImpl>> origin=null
                <1>: <unbound IrClassSymbolImpl>
                <2>: <unbound IrClassSymbolImpl>
                $receiver: CONST Int type=<unbound IrClassSymbolImpl> value=1
                1: CONST Int type=<unbound IrClassSymbolImpl> value=3
              CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>, <unbound IrClassSymbolImpl>> origin=null
                <1>: <unbound IrClassSymbolImpl>
                <2>: <unbound IrClassSymbolImpl>
                $receiver: CONST Int type=<unbound IrClassSymbolImpl> value=1
                1: CONST Int type=<unbound IrClassSymbolImpl> value=5
              CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>, <unbound IrClassSymbolImpl>> origin=null
                <1>: <unbound IrClassSymbolImpl>
                <2>: <unbound IrClassSymbolImpl>
                $receiver: CONST Int type=<unbound IrClassSymbolImpl> value=3
                1: CONST Int type=<unbound IrClassSymbolImpl> value=1
              CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>, <unbound IrClassSymbolImpl>> origin=null
                <1>: <unbound IrClassSymbolImpl>
                <2>: <unbound IrClassSymbolImpl>
                $receiver: CONST Int type=<unbound IrClassSymbolImpl> value=3
                1: CONST Int type=<unbound IrClassSymbolImpl> value=3
              CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>, <unbound IrClassSymbolImpl>> origin=null
                <1>: <unbound IrClassSymbolImpl>
                <2>: <unbound IrClassSymbolImpl>
                $receiver: CONST Int type=<unbound IrClassSymbolImpl> value=3
                1: CONST Int type=<unbound IrClassSymbolImpl> value=5
          2: GET_VAR 'val visited: <unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>, <unbound IrClassSymbolImpl>>> [val] declared in <root>.box' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>, <unbound IrClassSymbolImpl>>> origin=null
        RETURN type=<unbound IrClassSymbolImpl> from='public final fun box (): <unbound IrClassSymbolImpl> declared in <root>'
          CONST String type=<unbound IrClassSymbolImpl> value="OK"
