MODULE_FRAGMENT name:<main>
  FILE fqName:<root> fileName:/kt12908.kt
    PROPERTY name:field signature:/field|{}field[0] visibility:public modality:FINAL [var]
      FIELD PROPERTY_BACKING_FIELD name:field signature:[ /field|{}field[0] <- Local[<BF>|FIELD PROPERTY_BACKING_FIELD name:field type:kotlin.Int visibility:private [static]] ] type:<unbound IrClassSymbolImpl> visibility:private [static]
        EXPRESSION_BODY
          CONST Int type=<unbound IrClassSymbolImpl> value=0
      FUN DEFAULT_PROPERTY_ACCESSOR name:<get-field> signature:/field.<get-field>|<get-field>(){}[0] visibility:public modality:FINAL <> () returnType:<unbound IrClassSymbolImpl>
        correspondingProperty: PROPERTY name:field signature:/field|{}field[0] visibility:public modality:FINAL [var]
        BLOCK_BODY
          RETURN type=<unbound IrClassSymbolImpl> from='public final fun <get-field> (): <unbound IrClassSymbolImpl> declared in <root>'
            GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:field signature:[ /field|{}field[0] <- Local[<BF>|FIELD PROPERTY_BACKING_FIELD name:field type:kotlin.Int visibility:private [static]] ] type:<unbound IrClassSymbolImpl> visibility:private [static]' type=<unbound IrClassSymbolImpl> origin=null
      FUN DEFAULT_PROPERTY_ACCESSOR name:<set-field> signature:/field.<set-field>|<set-field>(kotlin.Int){}[0] visibility:public modality:FINAL <> (<set-?>:<unbound IrClassSymbolImpl>) returnType:<unbound IrClassSymbolImpl>
        correspondingProperty: PROPERTY name:field signature:/field|{}field[0] visibility:public modality:FINAL [var]
        VALUE_PARAMETER name:<set-?> index:0 type:<unbound IrClassSymbolImpl>
        BLOCK_BODY
          SET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:field signature:[ /field|{}field[0] <- Local[<BF>|FIELD PROPERTY_BACKING_FIELD name:field type:kotlin.Int visibility:private [static]] ] type:<unbound IrClassSymbolImpl> visibility:private [static]' type=<unbound IrClassSymbolImpl> origin=null
            value: GET_VAR '<set-?>: <unbound IrClassSymbolImpl> declared in <root>.<set-field>' type=<unbound IrClassSymbolImpl> origin=null
    FUN name:next signature:/next|next(){}[0] visibility:public modality:FINAL <> () returnType:<unbound IrClassSymbolImpl>
      BLOCK_BODY
        RETURN type=<unbound IrClassSymbolImpl> from='public final fun next (): <unbound IrClassSymbolImpl> declared in <root>'
          BLOCK type=<unbound IrClassSymbolImpl> origin=PREFIX_INCR
            CALL 'public final fun <set-field> (<set-?>: <unbound IrClassSymbolImpl>): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=PREFIX_INCR
              <set-?>: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=PREFIX_INCR
                $this: CALL 'public final fun <get-field> (): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=PREFIX_INCR
            CALL 'public final fun <get-field> (): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=PREFIX_INCR
    FUN name:box signature:/box|box(){}[0] visibility:public modality:FINAL <> () returnType:<unbound IrClassSymbolImpl>
      BLOCK_BODY
        VAR name:task type:<unbound IrClassSymbolImpl> [val]
        BLOCK type=<unbound IrClassSymbolImpl> origin=null
          DO_WHILE label=null origin=DO_WHILE_LOOP
            body: COMPOSITE type=<unbound IrClassSymbolImpl> origin=null
              WHEN type=<unbound IrClassSymbolImpl> origin=IF
                BRANCH
                  if: CALL 'public final fun EQEQ (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EQEQ
                    arg0: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=PERC
                      $this: CALL 'public final fun next (): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
                      1: CONST Int type=<unbound IrClassSymbolImpl> value=2
                    arg1: CONST Int type=<unbound IrClassSymbolImpl> value=0
                  then: BLOCK type=<unbound IrClassSymbolImpl> origin=null
                    SET_VAR 'val task: <unbound IrClassSymbolImpl> [val] declared in <root>.box' type=<unbound IrClassSymbolImpl> origin=EQ
                      CONST String type=<unbound IrClassSymbolImpl> value="OK"
                    BREAK label=null loop.label=null
            condition: CONST Boolean type=<unbound IrClassSymbolImpl> value=true
        RETURN type=<unbound IrClassSymbolImpl> from='public final fun box (): <unbound IrClassSymbolImpl> declared in <root>'
          GET_VAR 'val task: <unbound IrClassSymbolImpl> [val] declared in <root>.box' type=<unbound IrClassSymbolImpl> origin=null
