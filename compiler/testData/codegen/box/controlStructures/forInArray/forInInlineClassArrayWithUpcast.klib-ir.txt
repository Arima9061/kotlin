MODULE_FRAGMENT name:<main>
  FILE fqName:<root> fileName:/forInInlineClassArrayWithUpcast.kt
    FUN name:box signature:/box|box(){}[0] visibility:public modality:FINAL <> () returnType:<unbound IrClassSymbolImpl>
      BLOCK_BODY
        CALL 'public final fun testForInUIntArrayWithUpcactToAny (): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
        CALL 'public final fun testForInUIntArrayWithUpcactToComparable (): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
        RETURN type=<unbound IrClassSymbolImpl> from='public final fun box (): <unbound IrClassSymbolImpl> declared in <root>'
          CONST String type=<unbound IrClassSymbolImpl> value="OK"
    FUN name:testForInUIntArrayWithUpcactToAny signature:/testForInUIntArrayWithUpcactToAny|testForInUIntArrayWithUpcactToAny(){}[0] visibility:public modality:FINAL <> () returnType:<unbound IrClassSymbolImpl>
      BLOCK_BODY
        VAR name:test type:<unbound IrClassSymbolImpl> [var]
          CONST String type=<unbound IrClassSymbolImpl> value=""
        BLOCK type=<unbound IrClassSymbolImpl> origin=FOR_LOOP
          VAR FOR_LOOP_ITERATOR name:<iterator> type:<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> [val]
            CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> origin=FOR_LOOP_ITERATOR
              $this: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
                1: VARARG type=<unbound IrClassSymbolImpl> varargElementType=<unbound IrClassSymbolImpl>
                  CONST Int type=<unbound IrClassSymbolImpl> value=1
                  CONST Int type=<unbound IrClassSymbolImpl> value=2
                  CONST Int type=<unbound IrClassSymbolImpl> value=3
          WHILE label=null origin=FOR_LOOP_INNER_WHILE
            condition: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=FOR_LOOP_HAS_NEXT
              $this: GET_VAR 'val <iterator>: <unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> [val] declared in <root>.testForInUIntArrayWithUpcactToAny' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> origin=null
            body: BLOCK type=<unbound IrClassSymbolImpl> origin=FOR_LOOP_INNER_WHILE
              VAR FOR_LOOP_VARIABLE name:x type:<unbound IrClassSymbolImpl> [val]
                CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=FOR_LOOP_NEXT
                  $this: GET_VAR 'val <iterator>: <unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> [val] declared in <root>.testForInUIntArrayWithUpcactToAny' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> origin=null
              BLOCK type=<unbound IrClassSymbolImpl> origin=null
                SET_VAR 'var test: <unbound IrClassSymbolImpl> [var] declared in <root>.testForInUIntArrayWithUpcactToAny' type=<unbound IrClassSymbolImpl> origin=EQ
                  STRING_CONCATENATION type=<unbound IrClassSymbolImpl>
                    GET_VAR 'var test: <unbound IrClassSymbolImpl> [var] declared in <root>.testForInUIntArrayWithUpcactToAny' type=<unbound IrClassSymbolImpl> origin=null
                    GET_VAR 'val x: <unbound IrClassSymbolImpl> [val] declared in <root>.testForInUIntArrayWithUpcactToAny' type=<unbound IrClassSymbolImpl> origin=null
                    CONST String type=<unbound IrClassSymbolImpl> value=";"
                CALL 'public final fun useUIntAsAny (a: <unbound IrClassSymbolImpl>): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
                  a: GET_VAR 'val x: <unbound IrClassSymbolImpl> [val] declared in <root>.testForInUIntArrayWithUpcactToAny' type=<unbound IrClassSymbolImpl> origin=null
        WHEN type=<unbound IrClassSymbolImpl> origin=IF
          BRANCH
            if: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=EXCLEQ
              $this: CALL 'public final fun EQEQ (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EXCLEQ
                arg0: GET_VAR 'var test: <unbound IrClassSymbolImpl> [var] declared in <root>.testForInUIntArrayWithUpcactToAny' type=<unbound IrClassSymbolImpl> origin=null
                arg1: CONST String type=<unbound IrClassSymbolImpl> value="1;2;3;"
            then: THROW type=<unbound IrClassSymbolImpl>
              CONSTRUCTOR_CALL 'UNBOUND IrConstructorSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
                1: GET_VAR 'var test: <unbound IrClassSymbolImpl> [var] declared in <root>.testForInUIntArrayWithUpcactToAny' type=<unbound IrClassSymbolImpl> origin=null
    FUN name:testForInUIntArrayWithUpcactToComparable signature:/testForInUIntArrayWithUpcactToComparable|testForInUIntArrayWithUpcactToComparable(){}[0] visibility:public modality:FINAL <> () returnType:<unbound IrClassSymbolImpl>
      BLOCK_BODY
        VAR name:test type:<unbound IrClassSymbolImpl> [var]
          CONST String type=<unbound IrClassSymbolImpl> value=""
        BLOCK type=<unbound IrClassSymbolImpl> origin=FOR_LOOP
          VAR FOR_LOOP_ITERATOR name:<iterator> type:<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> [val]
            CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> origin=FOR_LOOP_ITERATOR
              $this: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
                1: VARARG type=<unbound IrClassSymbolImpl> varargElementType=<unbound IrClassSymbolImpl>
                  CONST Int type=<unbound IrClassSymbolImpl> value=1
                  CONST Int type=<unbound IrClassSymbolImpl> value=2
                  CONST Int type=<unbound IrClassSymbolImpl> value=3
          WHILE label=null origin=FOR_LOOP_INNER_WHILE
            condition: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=FOR_LOOP_HAS_NEXT
              $this: GET_VAR 'val <iterator>: <unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> [val] declared in <root>.testForInUIntArrayWithUpcactToComparable' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> origin=null
            body: BLOCK type=<unbound IrClassSymbolImpl> origin=FOR_LOOP_INNER_WHILE
              VAR FOR_LOOP_VARIABLE name:x type:<unbound IrClassSymbolImpl><*> [val]
                CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=FOR_LOOP_NEXT
                  $this: GET_VAR 'val <iterator>: <unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> [val] declared in <root>.testForInUIntArrayWithUpcactToComparable' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> origin=null
              BLOCK type=<unbound IrClassSymbolImpl> origin=null
                SET_VAR 'var test: <unbound IrClassSymbolImpl> [var] declared in <root>.testForInUIntArrayWithUpcactToComparable' type=<unbound IrClassSymbolImpl> origin=EQ
                  STRING_CONCATENATION type=<unbound IrClassSymbolImpl>
                    GET_VAR 'var test: <unbound IrClassSymbolImpl> [var] declared in <root>.testForInUIntArrayWithUpcactToComparable' type=<unbound IrClassSymbolImpl> origin=null
                    GET_VAR 'val x: <unbound IrClassSymbolImpl><*> [val] declared in <root>.testForInUIntArrayWithUpcactToComparable' type=<unbound IrClassSymbolImpl><*> origin=null
                    CONST String type=<unbound IrClassSymbolImpl> value=";"
                CALL 'public final fun useUIntAsComparable (a: <unbound IrClassSymbolImpl><*>): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
                  a: GET_VAR 'val x: <unbound IrClassSymbolImpl><*> [val] declared in <root>.testForInUIntArrayWithUpcactToComparable' type=<unbound IrClassSymbolImpl><*> origin=null
        WHEN type=<unbound IrClassSymbolImpl> origin=IF
          BRANCH
            if: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=EXCLEQ
              $this: CALL 'public final fun EQEQ (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EXCLEQ
                arg0: GET_VAR 'var test: <unbound IrClassSymbolImpl> [var] declared in <root>.testForInUIntArrayWithUpcactToComparable' type=<unbound IrClassSymbolImpl> origin=null
                arg1: CONST String type=<unbound IrClassSymbolImpl> value="1;2;3;"
            then: THROW type=<unbound IrClassSymbolImpl>
              CONSTRUCTOR_CALL 'UNBOUND IrConstructorSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
                1: GET_VAR 'var test: <unbound IrClassSymbolImpl> [var] declared in <root>.testForInUIntArrayWithUpcactToComparable' type=<unbound IrClassSymbolImpl> origin=null
    FUN name:useUIntAsAny signature:/useUIntAsAny|useUIntAsAny(kotlin.Any){}[0] visibility:public modality:FINAL <> (a:<unbound IrClassSymbolImpl>) returnType:<unbound IrClassSymbolImpl>
      VALUE_PARAMETER name:a index:0 type:<unbound IrClassSymbolImpl>
      BLOCK_BODY
        TYPE_OP type=<unbound IrClassSymbolImpl> origin=IMPLICIT_COERCION_TO_UNIT typeOperand=<unbound IrClassSymbolImpl>
          TYPE_OP type=<unbound IrClassSymbolImpl> origin=CAST typeOperand=<unbound IrClassSymbolImpl>
            GET_VAR 'a: <unbound IrClassSymbolImpl> declared in <root>.useUIntAsAny' type=<unbound IrClassSymbolImpl> origin=null
    FUN name:useUIntAsComparable signature:/useUIntAsComparable|useUIntAsComparable(kotlin.Comparable<*>){}[0] visibility:public modality:FINAL <> (a:<unbound IrClassSymbolImpl><*>) returnType:<unbound IrClassSymbolImpl>
      VALUE_PARAMETER name:a index:0 type:<unbound IrClassSymbolImpl><*>
      BLOCK_BODY
        TYPE_OP type=<unbound IrClassSymbolImpl> origin=IMPLICIT_COERCION_TO_UNIT typeOperand=<unbound IrClassSymbolImpl>
          TYPE_OP type=<unbound IrClassSymbolImpl><*> origin=CAST typeOperand=<unbound IrClassSymbolImpl><*>
            GET_VAR 'a: <unbound IrClassSymbolImpl><*> declared in <root>.useUIntAsComparable' type=<unbound IrClassSymbolImpl><*> origin=null
