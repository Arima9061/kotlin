MODULE_FRAGMENT name:<main>
  FILE fqName:<root> fileName:/tcbInEliminatedCondition.kt
    FUN name:foo signature:/foo|foo(){}[0] visibility:public modality:FINAL <> () returnType:<unbound IrClassSymbolImpl>
      BLOCK_BODY
    FUN name:test1 signature:/test1|test1(kotlin.Int){}[0] visibility:public modality:FINAL <> (v:<unbound IrClassSymbolImpl>) returnType:<unbound IrClassSymbolImpl> [inline]
      VALUE_PARAMETER name:v index:0 type:<unbound IrClassSymbolImpl>
      BLOCK_BODY
        WHEN type=<unbound IrClassSymbolImpl> origin=IF
          BRANCH
            if: CALL 'public final fun EQEQ (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EQEQ
              arg0: GET_VAR 'v: <unbound IrClassSymbolImpl> declared in <root>.test1' type=<unbound IrClassSymbolImpl> origin=null
              arg1: CONST Int type=<unbound IrClassSymbolImpl> value=0
            then: BLOCK type=<unbound IrClassSymbolImpl> origin=null
              TRY type=<unbound IrClassSymbolImpl>
                try: BLOCK type=<unbound IrClassSymbolImpl> origin=null
                  CALL 'public final fun foo (): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
                CATCH parameter=val e: <unbound IrClassSymbolImpl> [val] declared in <root>.test1
                  VAR CATCH_PARAMETER name:e type:<unbound IrClassSymbolImpl> [val]
                  BLOCK type=<unbound IrClassSymbolImpl> origin=null
    FUN name:test2 signature:/test2|test2(kotlin.Int){}[0] visibility:public modality:FINAL <> (v:<unbound IrClassSymbolImpl>) returnType:<unbound IrClassSymbolImpl> [inline]
      VALUE_PARAMETER name:v index:0 type:<unbound IrClassSymbolImpl>
      BLOCK_BODY
        TRY type=<unbound IrClassSymbolImpl>
          try: BLOCK type=<unbound IrClassSymbolImpl> origin=null
            WHEN type=<unbound IrClassSymbolImpl> origin=IF
              BRANCH
                if: CALL 'public final fun EQEQ (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EQEQ
                  arg0: GET_VAR 'v: <unbound IrClassSymbolImpl> declared in <root>.test2' type=<unbound IrClassSymbolImpl> origin=null
                  arg1: CONST Int type=<unbound IrClassSymbolImpl> value=0
                then: BLOCK type=<unbound IrClassSymbolImpl> origin=null
                  CALL 'public final fun foo (): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
          CATCH parameter=val e: <unbound IrClassSymbolImpl> [val] declared in <root>.test2
            VAR CATCH_PARAMETER name:e type:<unbound IrClassSymbolImpl> [val]
            BLOCK type=<unbound IrClassSymbolImpl> origin=null
    FUN name:test3 signature:/test3|test3(kotlin.Boolean){}[0] visibility:public modality:FINAL <> (v:<unbound IrClassSymbolImpl>) returnType:<unbound IrClassSymbolImpl> [inline]
      VALUE_PARAMETER name:v index:0 type:<unbound IrClassSymbolImpl>
      BLOCK_BODY
        WHEN type=<unbound IrClassSymbolImpl> origin=IF
          BRANCH
            if: GET_VAR 'v: <unbound IrClassSymbolImpl> declared in <root>.test3' type=<unbound IrClassSymbolImpl> origin=null
            then: BLOCK type=<unbound IrClassSymbolImpl> origin=null
              TRY type=<unbound IrClassSymbolImpl>
                try: BLOCK type=<unbound IrClassSymbolImpl> origin=null
                  CALL 'public final fun foo (): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
                CATCH parameter=val e: <unbound IrClassSymbolImpl> [val] declared in <root>.test3
                  VAR CATCH_PARAMETER name:e type:<unbound IrClassSymbolImpl> [val]
                  BLOCK type=<unbound IrClassSymbolImpl> origin=null
    FUN name:test4 signature:/test4|test4(kotlin.Boolean){}[0] visibility:public modality:FINAL <> (v:<unbound IrClassSymbolImpl>) returnType:<unbound IrClassSymbolImpl> [inline]
      VALUE_PARAMETER name:v index:0 type:<unbound IrClassSymbolImpl>
      BLOCK_BODY
        TRY type=<unbound IrClassSymbolImpl>
          try: BLOCK type=<unbound IrClassSymbolImpl> origin=null
            WHEN type=<unbound IrClassSymbolImpl> origin=IF
              BRANCH
                if: GET_VAR 'v: <unbound IrClassSymbolImpl> declared in <root>.test4' type=<unbound IrClassSymbolImpl> origin=null
                then: BLOCK type=<unbound IrClassSymbolImpl> origin=null
                  CALL 'public final fun foo (): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
          CATCH parameter=val e: <unbound IrClassSymbolImpl> [val] declared in <root>.test4
            VAR CATCH_PARAMETER name:e type:<unbound IrClassSymbolImpl> [val]
            BLOCK type=<unbound IrClassSymbolImpl> origin=null
    FUN name:box signature:/box|box(){}[0] visibility:public modality:FINAL <> () returnType:<unbound IrClassSymbolImpl>
      BLOCK_BODY
        CALL 'public final fun test1 (v: <unbound IrClassSymbolImpl>): <unbound IrClassSymbolImpl> [inline] declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
          v: CONST Int type=<unbound IrClassSymbolImpl> value=1
        CALL 'public final fun test2 (v: <unbound IrClassSymbolImpl>): <unbound IrClassSymbolImpl> [inline] declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
          v: CONST Int type=<unbound IrClassSymbolImpl> value=1
        CALL 'public final fun test3 (v: <unbound IrClassSymbolImpl>): <unbound IrClassSymbolImpl> [inline] declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
          v: CONST Boolean type=<unbound IrClassSymbolImpl> value=false
        CALL 'public final fun test4 (v: <unbound IrClassSymbolImpl>): <unbound IrClassSymbolImpl> [inline] declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
          v: CONST Boolean type=<unbound IrClassSymbolImpl> value=false
        RETURN type=<unbound IrClassSymbolImpl> from='public final fun box (): <unbound IrClassSymbolImpl> declared in <root>'
          CONST String type=<unbound IrClassSymbolImpl> value="OK"
