MODULE_FRAGMENT name:<main>
  FILE fqName:<root> fileName:/kt9022Return.kt
    FUN name:testOr signature:/testOr|testOr(kotlin.Boolean){}[0] visibility:public modality:FINAL <> (b:<unbound IrClassSymbolImpl>) returnType:<unbound IrClassSymbolImpl>
      VALUE_PARAMETER name:b index:0 type:<unbound IrClassSymbolImpl>
      BLOCK_BODY
        RETURN type=<unbound IrClassSymbolImpl> from='public final fun testOr (b: <unbound IrClassSymbolImpl>): <unbound IrClassSymbolImpl> declared in <root>'
          WHEN type=<unbound IrClassSymbolImpl> origin=OROR
            BRANCH
              if: GET_VAR 'b: <unbound IrClassSymbolImpl> declared in <root>.testOr' type=<unbound IrClassSymbolImpl> origin=null
              then: CONST Boolean type=<unbound IrClassSymbolImpl> value=true
            BRANCH
              if: CONST Boolean type=<unbound IrClassSymbolImpl> value=true
              then: RETURN type=<unbound IrClassSymbolImpl> from='public final fun testOr (b: <unbound IrClassSymbolImpl>): <unbound IrClassSymbolImpl> declared in <root>'
                CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
                  $this: GET_VAR 'b: <unbound IrClassSymbolImpl> declared in <root>.testOr' type=<unbound IrClassSymbolImpl> origin=null
    FUN name:testOr signature:/testOr|testOr(){}[0] visibility:public modality:FINAL <> () returnType:<unbound IrClassSymbolImpl>
      BLOCK_BODY
        RETURN type=<unbound IrClassSymbolImpl> from='public final fun testOr (): <unbound IrClassSymbolImpl> declared in <root>'
          WHEN type=<unbound IrClassSymbolImpl> origin=OROR
            BRANCH
              if: CONST Boolean type=<unbound IrClassSymbolImpl> value=true
              then: CONST Boolean type=<unbound IrClassSymbolImpl> value=true
            BRANCH
              if: CONST Boolean type=<unbound IrClassSymbolImpl> value=true
              then: RETURN type=<unbound IrClassSymbolImpl> from='public final fun testOr (): <unbound IrClassSymbolImpl> declared in <root>'
                CONST Boolean type=<unbound IrClassSymbolImpl> value=false
    FUN name:testAnd signature:/testAnd|testAnd(kotlin.Boolean){}[0] visibility:public modality:FINAL <> (b:<unbound IrClassSymbolImpl>) returnType:<unbound IrClassSymbolImpl>
      VALUE_PARAMETER name:b index:0 type:<unbound IrClassSymbolImpl>
      BLOCK_BODY
        RETURN type=<unbound IrClassSymbolImpl> from='public final fun testAnd (b: <unbound IrClassSymbolImpl>): <unbound IrClassSymbolImpl> declared in <root>'
          WHEN type=<unbound IrClassSymbolImpl> origin=ANDAND
            BRANCH
              if: GET_VAR 'b: <unbound IrClassSymbolImpl> declared in <root>.testAnd' type=<unbound IrClassSymbolImpl> origin=null
              then: RETURN type=<unbound IrClassSymbolImpl> from='public final fun testAnd (b: <unbound IrClassSymbolImpl>): <unbound IrClassSymbolImpl> declared in <root>'
                CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
                  $this: GET_VAR 'b: <unbound IrClassSymbolImpl> declared in <root>.testAnd' type=<unbound IrClassSymbolImpl> origin=null
            BRANCH
              if: CONST Boolean type=<unbound IrClassSymbolImpl> value=true
              then: CONST Boolean type=<unbound IrClassSymbolImpl> value=false
    FUN name:testAnd signature:/testAnd|testAnd(){}[0] visibility:public modality:FINAL <> () returnType:<unbound IrClassSymbolImpl>
      BLOCK_BODY
        RETURN type=<unbound IrClassSymbolImpl> from='public final fun testAnd (): <unbound IrClassSymbolImpl> declared in <root>'
          WHEN type=<unbound IrClassSymbolImpl> origin=ANDAND
            BRANCH
              if: CONST Boolean type=<unbound IrClassSymbolImpl> value=true
              then: RETURN type=<unbound IrClassSymbolImpl> from='public final fun testAnd (): <unbound IrClassSymbolImpl> declared in <root>'
                CONST Boolean type=<unbound IrClassSymbolImpl> value=false
            BRANCH
              if: CONST Boolean type=<unbound IrClassSymbolImpl> value=true
              then: CONST Boolean type=<unbound IrClassSymbolImpl> value=false
    FUN name:box signature:/box|box(){}[0] visibility:public modality:FINAL <> () returnType:<unbound IrClassSymbolImpl>
      BLOCK_BODY
        WHEN type=<unbound IrClassSymbolImpl> origin=IF
          BRANCH
            if: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=EXCLEQ
              $this: CALL 'public final fun EQEQ (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EXCLEQ
                arg0: CALL 'public final fun testOr (b: <unbound IrClassSymbolImpl>): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
                  b: CONST Boolean type=<unbound IrClassSymbolImpl> value=false
                arg1: CONST Boolean type=<unbound IrClassSymbolImpl> value=true
            then: RETURN type=<unbound IrClassSymbolImpl> from='public final fun box (): <unbound IrClassSymbolImpl> declared in <root>'
              CONST String type=<unbound IrClassSymbolImpl> value="fail 1"
        WHEN type=<unbound IrClassSymbolImpl> origin=IF
          BRANCH
            if: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=EXCLEQ
              $this: CALL 'public final fun EQEQ (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EXCLEQ
                arg0: CALL 'public final fun testOr (b: <unbound IrClassSymbolImpl>): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
                  b: CONST Boolean type=<unbound IrClassSymbolImpl> value=true
                arg1: CONST Boolean type=<unbound IrClassSymbolImpl> value=true
            then: RETURN type=<unbound IrClassSymbolImpl> from='public final fun box (): <unbound IrClassSymbolImpl> declared in <root>'
              CONST String type=<unbound IrClassSymbolImpl> value="fail 2"
        WHEN type=<unbound IrClassSymbolImpl> origin=IF
          BRANCH
            if: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=EXCLEQ
              $this: CALL 'public final fun EQEQ (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EXCLEQ
                arg0: CALL 'public final fun testAnd (b: <unbound IrClassSymbolImpl>): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
                  b: CONST Boolean type=<unbound IrClassSymbolImpl> value=false
                arg1: CONST Boolean type=<unbound IrClassSymbolImpl> value=false
            then: RETURN type=<unbound IrClassSymbolImpl> from='public final fun box (): <unbound IrClassSymbolImpl> declared in <root>'
              CONST String type=<unbound IrClassSymbolImpl> value="fail 3"
        WHEN type=<unbound IrClassSymbolImpl> origin=IF
          BRANCH
            if: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=EXCLEQ
              $this: CALL 'public final fun EQEQ (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EXCLEQ
                arg0: CALL 'public final fun testAnd (b: <unbound IrClassSymbolImpl>): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
                  b: CONST Boolean type=<unbound IrClassSymbolImpl> value=true
                arg1: CONST Boolean type=<unbound IrClassSymbolImpl> value=false
            then: RETURN type=<unbound IrClassSymbolImpl> from='public final fun box (): <unbound IrClassSymbolImpl> declared in <root>'
              CONST String type=<unbound IrClassSymbolImpl> value="fail 4"
        WHEN type=<unbound IrClassSymbolImpl> origin=IF
          BRANCH
            if: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=EXCLEQ
              $this: CALL 'public final fun EQEQ (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EXCLEQ
                arg0: CALL 'public final fun testOr (): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
                arg1: CONST Boolean type=<unbound IrClassSymbolImpl> value=true
            then: RETURN type=<unbound IrClassSymbolImpl> from='public final fun box (): <unbound IrClassSymbolImpl> declared in <root>'
              CONST String type=<unbound IrClassSymbolImpl> value="fail 5"
        WHEN type=<unbound IrClassSymbolImpl> origin=IF
          BRANCH
            if: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=EXCLEQ
              $this: CALL 'public final fun EQEQ (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EXCLEQ
                arg0: CALL 'public final fun testAnd (): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
                arg1: CONST Boolean type=<unbound IrClassSymbolImpl> value=false
            then: RETURN type=<unbound IrClassSymbolImpl> from='public final fun box (): <unbound IrClassSymbolImpl> declared in <root>'
              CONST String type=<unbound IrClassSymbolImpl> value="fail 6"
        RETURN type=<unbound IrClassSymbolImpl> from='public final fun box (): <unbound IrClassSymbolImpl> declared in <root>'
          CONST String type=<unbound IrClassSymbolImpl> value="OK"
