MODULE_FRAGMENT name:<main>
  FILE fqName:<root> fileName:/forInSequenceWithIndexCheckSideEffects.kt
    PROPERTY name:xs signature:/xs|{}xs[0] visibility:public modality:FINAL [val]
      FIELD PROPERTY_BACKING_FIELD name:xs signature:[ /xs|{}xs[0] <- Local[<BF>|FIELD PROPERTY_BACKING_FIELD name:s type:kotlin.sequences.Sequence<T of <root>.CountingSequence> visibility:private [final]] ] type:<root>.CountingSequence<<unbound IrClassSymbolImpl>> visibility:private [final,static]
        EXPRESSION_BODY
          CONSTRUCTOR_CALL 'public constructor <init> (s: <unbound IrClassSymbolImpl><T of <root>.CountingSequence>) [primary] declared in <root>.CountingSequence' type=<root>.CountingSequence<<unbound IrClassSymbolImpl>> origin=null
            <class: T>: <unbound IrClassSymbolImpl>
            s: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> origin=null
              <1>: <unbound IrClassSymbolImpl>
              $receiver: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> origin=null
                <1>: <unbound IrClassSymbolImpl>
                1: VARARG type=<unbound IrClassSymbolImpl><out <unbound IrClassSymbolImpl>> varargElementType=<unbound IrClassSymbolImpl>
                  CONST String type=<unbound IrClassSymbolImpl> value="a"
                  CONST String type=<unbound IrClassSymbolImpl> value="b"
                  CONST String type=<unbound IrClassSymbolImpl> value="c"
                  CONST String type=<unbound IrClassSymbolImpl> value="d"
      FUN DEFAULT_PROPERTY_ACCESSOR name:<get-xs> signature:/xs.<get-xs>|<get-xs>(){}[0] visibility:public modality:FINAL <> () returnType:<root>.CountingSequence<<unbound IrClassSymbolImpl>>
        correspondingProperty: PROPERTY name:xs signature:/xs|{}xs[0] visibility:public modality:FINAL [val]
        BLOCK_BODY
          RETURN type=<unbound IrClassSymbolImpl> from='public final fun <get-xs> (): <root>.CountingSequence<<unbound IrClassSymbolImpl>> declared in <root>'
            GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:xs signature:[ /xs|{}xs[0] <- Local[<BF>|FIELD PROPERTY_BACKING_FIELD name:s type:kotlin.sequences.Sequence<T of <root>.CountingSequence> visibility:private [final]] ] type:<root>.CountingSequence<<unbound IrClassSymbolImpl>> visibility:private [final,static]' type=<root>.CountingSequence<<unbound IrClassSymbolImpl>> origin=null
    CLASS CLASS name:CountingSequence signature:/CountingSequence|null[0] modality:FINAL visibility:public superTypes:[<unbound IrClassSymbolImpl><T of <root>.CountingSequence>]
      $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:<root>.CountingSequence<T of <root>.CountingSequence>
      TYPE_PARAMETER name:T index:0 variance:out signature:[ /CountingSequence|null[0] <- Local[<TP>,0|TYPE_PARAMETER name:T index:0 variance:out superTypes:[kotlin.Any?] reified:false] ] superTypes:[<unbound IrClassSymbolImpl>?] reified:false
      CONSTRUCTOR signature:/CountingSequence.<init>|<init>(kotlin.sequences.Sequence<1:0>){}[0] visibility:public <> (s:<unbound IrClassSymbolImpl><T of <root>.CountingSequence>) returnType:<root>.CountingSequence<T of <root>.CountingSequence> [primary]
        VALUE_PARAMETER name:s index:0 type:<unbound IrClassSymbolImpl><T of <root>.CountingSequence>
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL 'UNBOUND IrConstructorSymbolImpl'
          INSTANCE_INITIALIZER_CALL classDescriptor='CLASS CLASS name:CountingSequence signature:/CountingSequence|null[0] modality:FINAL visibility:public superTypes:[<unbound IrClassSymbolImpl><T of <root>.CountingSequence>]'
      PROPERTY name:s signature:/CountingSequence.s|{}s[0] visibility:private modality:FINAL [val]
        FIELD PROPERTY_BACKING_FIELD name:s signature:[ /CountingSequence.s|{}s[0] <- Local[<BF>|FIELD PROPERTY_BACKING_FIELD name:s type:kotlin.sequences.Sequence<T of <root>.CountingSequence> visibility:private [final]] ] type:<unbound IrClassSymbolImpl><T of <root>.CountingSequence> visibility:private [final]
          EXPRESSION_BODY
            GET_VAR 's: <unbound IrClassSymbolImpl><T of <root>.CountingSequence> declared in <root>.CountingSequence.<init>' type=<unbound IrClassSymbolImpl><T of <root>.CountingSequence> origin=INITIALIZE_PROPERTY_FROM_PARAMETER
        FUN DEFAULT_PROPERTY_ACCESSOR name:<get-s> signature:/CountingSequence.s.<get-s>|<get-s>(){}[0] visibility:private modality:FINAL <> ($this:<root>.CountingSequence<T of <root>.CountingSequence>) returnType:<unbound IrClassSymbolImpl><T of <root>.CountingSequence>
          correspondingProperty: PROPERTY name:s signature:/CountingSequence.s|{}s[0] visibility:private modality:FINAL [val]
          $this: VALUE_PARAMETER name:<this> type:<root>.CountingSequence<T of <root>.CountingSequence>
          BLOCK_BODY
            RETURN type=<unbound IrClassSymbolImpl> from='private final fun <get-s> (): <unbound IrClassSymbolImpl><T of <root>.CountingSequence> declared in <root>.CountingSequence'
              GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:s signature:[ /CountingSequence.s|{}s[0] <- Local[<BF>|FIELD PROPERTY_BACKING_FIELD name:s type:kotlin.sequences.Sequence<T of <root>.CountingSequence> visibility:private [final]] ] type:<unbound IrClassSymbolImpl><T of <root>.CountingSequence> visibility:private [final]' type=<unbound IrClassSymbolImpl><T of <root>.CountingSequence> origin=null
                receiver: GET_VAR '<this>: <root>.CountingSequence<T of <root>.CountingSequence> declared in <root>.CountingSequence.<get-s>' type=<root>.CountingSequence<T of <root>.CountingSequence> origin=null
      PROPERTY name:hasNextCtr signature:/CountingSequence.hasNextCtr|{}hasNextCtr[0] visibility:public modality:FINAL [var]
        FIELD PROPERTY_BACKING_FIELD name:hasNextCtr signature:[ /CountingSequence.hasNextCtr|{}hasNextCtr[0] <- Local[<BF>|FIELD PROPERTY_BACKING_FIELD name:s type:kotlin.sequences.Sequence<T of <root>.CountingSequence> visibility:private [final]] ] type:<unbound IrClassSymbolImpl> visibility:private
          EXPRESSION_BODY
            CONST Int type=<unbound IrClassSymbolImpl> value=0
        FUN DEFAULT_PROPERTY_ACCESSOR name:<get-hasNextCtr> signature:/CountingSequence.hasNextCtr.<get-hasNextCtr>|<get-hasNextCtr>(){}[0] visibility:public modality:FINAL <> ($this:<root>.CountingSequence<T of <root>.CountingSequence>) returnType:<unbound IrClassSymbolImpl>
          correspondingProperty: PROPERTY name:hasNextCtr signature:/CountingSequence.hasNextCtr|{}hasNextCtr[0] visibility:public modality:FINAL [var]
          $this: VALUE_PARAMETER name:<this> type:<root>.CountingSequence<T of <root>.CountingSequence>
          BLOCK_BODY
            RETURN type=<unbound IrClassSymbolImpl> from='public final fun <get-hasNextCtr> (): <unbound IrClassSymbolImpl> declared in <root>.CountingSequence'
              GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:hasNextCtr signature:[ /CountingSequence.hasNextCtr|{}hasNextCtr[0] <- Local[<BF>|FIELD PROPERTY_BACKING_FIELD name:s type:kotlin.sequences.Sequence<T of <root>.CountingSequence> visibility:private [final]] ] type:<unbound IrClassSymbolImpl> visibility:private' type=<unbound IrClassSymbolImpl> origin=null
                receiver: GET_VAR '<this>: <root>.CountingSequence<T of <root>.CountingSequence> declared in <root>.CountingSequence.<get-hasNextCtr>' type=<root>.CountingSequence<T of <root>.CountingSequence> origin=null
        FUN DEFAULT_PROPERTY_ACCESSOR name:<set-hasNextCtr> signature:/CountingSequence.hasNextCtr.<set-hasNextCtr>|<set-hasNextCtr>(kotlin.Int){}[0] visibility:public modality:FINAL <> ($this:<root>.CountingSequence<T of <root>.CountingSequence>, <set-?>:<unbound IrClassSymbolImpl>) returnType:<unbound IrClassSymbolImpl>
          correspondingProperty: PROPERTY name:hasNextCtr signature:/CountingSequence.hasNextCtr|{}hasNextCtr[0] visibility:public modality:FINAL [var]
          $this: VALUE_PARAMETER name:<this> type:<root>.CountingSequence<T of <root>.CountingSequence>
          VALUE_PARAMETER name:<set-?> index:0 type:<unbound IrClassSymbolImpl>
          BLOCK_BODY
            SET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:hasNextCtr signature:[ /CountingSequence.hasNextCtr|{}hasNextCtr[0] <- Local[<BF>|FIELD PROPERTY_BACKING_FIELD name:s type:kotlin.sequences.Sequence<T of <root>.CountingSequence> visibility:private [final]] ] type:<unbound IrClassSymbolImpl> visibility:private' type=<unbound IrClassSymbolImpl> origin=null
              receiver: GET_VAR '<this>: <root>.CountingSequence<T of <root>.CountingSequence> declared in <root>.CountingSequence.<set-hasNextCtr>' type=<root>.CountingSequence<T of <root>.CountingSequence> origin=null
              value: GET_VAR '<set-?>: <unbound IrClassSymbolImpl> declared in <root>.CountingSequence.<set-hasNextCtr>' type=<unbound IrClassSymbolImpl> origin=null
      PROPERTY name:nextCtr signature:/CountingSequence.nextCtr|{}nextCtr[0] visibility:public modality:FINAL [var]
        FIELD PROPERTY_BACKING_FIELD name:nextCtr signature:[ /CountingSequence.nextCtr|{}nextCtr[0] <- Local[<BF>|FIELD PROPERTY_BACKING_FIELD name:s type:kotlin.sequences.Sequence<T of <root>.CountingSequence> visibility:private [final]] ] type:<unbound IrClassSymbolImpl> visibility:private
          EXPRESSION_BODY
            CONST Int type=<unbound IrClassSymbolImpl> value=0
        FUN DEFAULT_PROPERTY_ACCESSOR name:<get-nextCtr> signature:/CountingSequence.nextCtr.<get-nextCtr>|<get-nextCtr>(){}[0] visibility:public modality:FINAL <> ($this:<root>.CountingSequence<T of <root>.CountingSequence>) returnType:<unbound IrClassSymbolImpl>
          correspondingProperty: PROPERTY name:nextCtr signature:/CountingSequence.nextCtr|{}nextCtr[0] visibility:public modality:FINAL [var]
          $this: VALUE_PARAMETER name:<this> type:<root>.CountingSequence<T of <root>.CountingSequence>
          BLOCK_BODY
            RETURN type=<unbound IrClassSymbolImpl> from='public final fun <get-nextCtr> (): <unbound IrClassSymbolImpl> declared in <root>.CountingSequence'
              GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:nextCtr signature:[ /CountingSequence.nextCtr|{}nextCtr[0] <- Local[<BF>|FIELD PROPERTY_BACKING_FIELD name:s type:kotlin.sequences.Sequence<T of <root>.CountingSequence> visibility:private [final]] ] type:<unbound IrClassSymbolImpl> visibility:private' type=<unbound IrClassSymbolImpl> origin=null
                receiver: GET_VAR '<this>: <root>.CountingSequence<T of <root>.CountingSequence> declared in <root>.CountingSequence.<get-nextCtr>' type=<root>.CountingSequence<T of <root>.CountingSequence> origin=null
        FUN DEFAULT_PROPERTY_ACCESSOR name:<set-nextCtr> signature:/CountingSequence.nextCtr.<set-nextCtr>|<set-nextCtr>(kotlin.Int){}[0] visibility:public modality:FINAL <> ($this:<root>.CountingSequence<T of <root>.CountingSequence>, <set-?>:<unbound IrClassSymbolImpl>) returnType:<unbound IrClassSymbolImpl>
          correspondingProperty: PROPERTY name:nextCtr signature:/CountingSequence.nextCtr|{}nextCtr[0] visibility:public modality:FINAL [var]
          $this: VALUE_PARAMETER name:<this> type:<root>.CountingSequence<T of <root>.CountingSequence>
          VALUE_PARAMETER name:<set-?> index:0 type:<unbound IrClassSymbolImpl>
          BLOCK_BODY
            SET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:nextCtr signature:[ /CountingSequence.nextCtr|{}nextCtr[0] <- Local[<BF>|FIELD PROPERTY_BACKING_FIELD name:s type:kotlin.sequences.Sequence<T of <root>.CountingSequence> visibility:private [final]] ] type:<unbound IrClassSymbolImpl> visibility:private' type=<unbound IrClassSymbolImpl> origin=null
              receiver: GET_VAR '<this>: <root>.CountingSequence<T of <root>.CountingSequence> declared in <root>.CountingSequence.<set-nextCtr>' type=<root>.CountingSequence<T of <root>.CountingSequence> origin=null
              value: GET_VAR '<set-?>: <unbound IrClassSymbolImpl> declared in <root>.CountingSequence.<set-nextCtr>' type=<unbound IrClassSymbolImpl> origin=null
      CLASS CLASS name:CountingSequenceIterator signature:/CountingSequence.CountingSequenceIterator|null[0] modality:FINAL visibility:public [inner] superTypes:[<unbound IrClassSymbolImpl><T of <root>.CountingSequence>]
        $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:<root>.CountingSequence.CountingSequenceIterator<T of <root>.CountingSequence>
        CONSTRUCTOR signature:/CountingSequence.CountingSequenceIterator.<init>|<init>(kotlin.collections.Iterator<2:0>){}[0] visibility:public <> ($this:<root>.CountingSequence<T of <root>.CountingSequence>, it:<unbound IrClassSymbolImpl><T of <root>.CountingSequence>) returnType:<root>.CountingSequence.CountingSequenceIterator<T of <root>.CountingSequence> [primary]
          $outer: VALUE_PARAMETER name:<this> type:<root>.CountingSequence<T of <root>.CountingSequence>
          VALUE_PARAMETER name:it index:0 type:<unbound IrClassSymbolImpl><T of <root>.CountingSequence>
          BLOCK_BODY
            DELEGATING_CONSTRUCTOR_CALL 'UNBOUND IrConstructorSymbolImpl'
            INSTANCE_INITIALIZER_CALL classDescriptor='CLASS CLASS name:CountingSequenceIterator signature:/CountingSequence.CountingSequenceIterator|null[0] modality:FINAL visibility:public [inner] superTypes:[<unbound IrClassSymbolImpl><T of <root>.CountingSequence>]'
        PROPERTY name:it signature:/CountingSequence.CountingSequenceIterator.it|{}it[0] visibility:private modality:FINAL [val]
          FIELD PROPERTY_BACKING_FIELD name:it signature:[ /CountingSequence.CountingSequenceIterator.it|{}it[0] <- Local[<BF>|FIELD PROPERTY_BACKING_FIELD name:s type:kotlin.sequences.Sequence<T of <root>.CountingSequence> visibility:private [final]] ] type:<unbound IrClassSymbolImpl><T of <root>.CountingSequence> visibility:private [final]
            EXPRESSION_BODY
              GET_VAR 'it: <unbound IrClassSymbolImpl><T of <root>.CountingSequence> declared in <root>.CountingSequence.CountingSequenceIterator.<init>' type=<unbound IrClassSymbolImpl><T of <root>.CountingSequence> origin=INITIALIZE_PROPERTY_FROM_PARAMETER
          FUN DEFAULT_PROPERTY_ACCESSOR name:<get-it> signature:/CountingSequence.CountingSequenceIterator.it.<get-it>|<get-it>(){}[0] visibility:private modality:FINAL <> ($this:<root>.CountingSequence.CountingSequenceIterator<T of <root>.CountingSequence>) returnType:<unbound IrClassSymbolImpl><T of <root>.CountingSequence>
            correspondingProperty: PROPERTY name:it signature:/CountingSequence.CountingSequenceIterator.it|{}it[0] visibility:private modality:FINAL [val]
            $this: VALUE_PARAMETER name:<this> type:<root>.CountingSequence.CountingSequenceIterator<T of <root>.CountingSequence>
            BLOCK_BODY
              RETURN type=<unbound IrClassSymbolImpl> from='private final fun <get-it> (): <unbound IrClassSymbolImpl><T of <root>.CountingSequence> declared in <root>.CountingSequence.CountingSequenceIterator'
                GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:it signature:[ /CountingSequence.CountingSequenceIterator.it|{}it[0] <- Local[<BF>|FIELD PROPERTY_BACKING_FIELD name:s type:kotlin.sequences.Sequence<T of <root>.CountingSequence> visibility:private [final]] ] type:<unbound IrClassSymbolImpl><T of <root>.CountingSequence> visibility:private [final]' type=<unbound IrClassSymbolImpl><T of <root>.CountingSequence> origin=null
                  receiver: GET_VAR '<this>: <root>.CountingSequence.CountingSequenceIterator<T of <root>.CountingSequence> declared in <root>.CountingSequence.CountingSequenceIterator.<get-it>' type=<root>.CountingSequence.CountingSequenceIterator<T of <root>.CountingSequence> origin=null
        FUN name:hasNext signature:/CountingSequence.CountingSequenceIterator.hasNext|hasNext(){}[0] visibility:public modality:OPEN <> ($this:<root>.CountingSequence.CountingSequenceIterator<T of <root>.CountingSequence>) returnType:<unbound IrClassSymbolImpl> [operator]
          overridden:
            UNBOUND IrSimpleFunctionSymbolImpl
          $this: VALUE_PARAMETER name:<this> type:<root>.CountingSequence.CountingSequenceIterator<T of <root>.CountingSequence>
          BLOCK_BODY
            RETURN type=<unbound IrClassSymbolImpl> from='public open fun hasNext (): <unbound IrClassSymbolImpl> [operator] declared in <root>.CountingSequence.CountingSequenceIterator'
              CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
                <1>: <unbound IrClassSymbolImpl>
                $receiver: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
                  $this: CALL 'private final fun <get-it> (): <unbound IrClassSymbolImpl><T of <root>.CountingSequence> declared in <root>.CountingSequence.CountingSequenceIterator' type=<unbound IrClassSymbolImpl><T of <root>.CountingSequence> origin=GET_PROPERTY
                    $this: GET_VAR '<this>: <root>.CountingSequence.CountingSequenceIterator<T of <root>.CountingSequence> declared in <root>.CountingSequence.CountingSequenceIterator.hasNext' type=<root>.CountingSequence.CountingSequenceIterator<T of <root>.CountingSequence> origin=null
                1: FUN_EXPR type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>, <unbound IrClassSymbolImpl>> origin=LAMBDA
                  FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL <> (it:<unbound IrClassSymbolImpl>) returnType:<unbound IrClassSymbolImpl>
                    VALUE_PARAMETER name:it index:0 type:<unbound IrClassSymbolImpl>
                    BLOCK_BODY
                      TYPE_OP type=<unbound IrClassSymbolImpl> origin=IMPLICIT_COERCION_TO_UNIT typeOperand=<unbound IrClassSymbolImpl>
                        BLOCK type=<unbound IrClassSymbolImpl> origin=POSTFIX_INCR
                          VAR IR_TEMPORARY_VARIABLE name:<unary> type:<unbound IrClassSymbolImpl> [val]
                            CALL 'public final fun <get-hasNextCtr> (): <unbound IrClassSymbolImpl> declared in <root>.CountingSequence' type=<unbound IrClassSymbolImpl> origin=POSTFIX_INCR
                              $this: GET_VAR '<this>: <root>.CountingSequence<T of <root>.CountingSequence> declared in <root>.CountingSequence' type=<root>.CountingSequence<T of <root>.CountingSequence> origin=null
                          CALL 'public final fun <set-hasNextCtr> (<set-?>: <unbound IrClassSymbolImpl>): <unbound IrClassSymbolImpl> declared in <root>.CountingSequence' type=<unbound IrClassSymbolImpl> origin=POSTFIX_INCR
                            $this: GET_VAR '<this>: <root>.CountingSequence<T of <root>.CountingSequence> declared in <root>.CountingSequence' type=<root>.CountingSequence<T of <root>.CountingSequence> origin=null
                            <set-?>: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=POSTFIX_INCR
                              $this: GET_VAR 'val <unary>: <unbound IrClassSymbolImpl> [val] declared in <root>.CountingSequence.CountingSequenceIterator.hasNext.<anonymous>' type=<unbound IrClassSymbolImpl> origin=null
                          GET_VAR 'val <unary>: <unbound IrClassSymbolImpl> [val] declared in <root>.CountingSequence.CountingSequenceIterator.hasNext.<anonymous>' type=<unbound IrClassSymbolImpl> origin=null
        FUN name:next signature:/CountingSequence.CountingSequenceIterator.next|next(){}[0] visibility:public modality:OPEN <> ($this:<root>.CountingSequence.CountingSequenceIterator<T of <root>.CountingSequence>) returnType:T of <root>.CountingSequence [operator]
          overridden:
            UNBOUND IrSimpleFunctionSymbolImpl
          $this: VALUE_PARAMETER name:<this> type:<root>.CountingSequence.CountingSequenceIterator<T of <root>.CountingSequence>
          BLOCK_BODY
            RETURN type=<unbound IrClassSymbolImpl> from='public open fun next (): T of <root>.CountingSequence [operator] declared in <root>.CountingSequence.CountingSequenceIterator'
              CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=T of <root>.CountingSequence origin=null
                <1>: T of <root>.CountingSequence
                $receiver: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=T of <root>.CountingSequence origin=null
                  $this: CALL 'private final fun <get-it> (): <unbound IrClassSymbolImpl><T of <root>.CountingSequence> declared in <root>.CountingSequence.CountingSequenceIterator' type=<unbound IrClassSymbolImpl><T of <root>.CountingSequence> origin=GET_PROPERTY
                    $this: GET_VAR '<this>: <root>.CountingSequence.CountingSequenceIterator<T of <root>.CountingSequence> declared in <root>.CountingSequence.CountingSequenceIterator.next' type=<root>.CountingSequence.CountingSequenceIterator<T of <root>.CountingSequence> origin=null
                1: FUN_EXPR type=<unbound IrClassSymbolImpl><T of <root>.CountingSequence, <unbound IrClassSymbolImpl>> origin=LAMBDA
                  FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL <> (it:T of <root>.CountingSequence) returnType:<unbound IrClassSymbolImpl>
                    VALUE_PARAMETER name:it index:0 type:T of <root>.CountingSequence
                    BLOCK_BODY
                      TYPE_OP type=<unbound IrClassSymbolImpl> origin=IMPLICIT_COERCION_TO_UNIT typeOperand=<unbound IrClassSymbolImpl>
                        BLOCK type=<unbound IrClassSymbolImpl> origin=POSTFIX_INCR
                          VAR IR_TEMPORARY_VARIABLE name:<unary> type:<unbound IrClassSymbolImpl> [val]
                            CALL 'public final fun <get-nextCtr> (): <unbound IrClassSymbolImpl> declared in <root>.CountingSequence' type=<unbound IrClassSymbolImpl> origin=POSTFIX_INCR
                              $this: GET_VAR '<this>: <root>.CountingSequence<T of <root>.CountingSequence> declared in <root>.CountingSequence' type=<root>.CountingSequence<T of <root>.CountingSequence> origin=null
                          CALL 'public final fun <set-nextCtr> (<set-?>: <unbound IrClassSymbolImpl>): <unbound IrClassSymbolImpl> declared in <root>.CountingSequence' type=<unbound IrClassSymbolImpl> origin=POSTFIX_INCR
                            $this: GET_VAR '<this>: <root>.CountingSequence<T of <root>.CountingSequence> declared in <root>.CountingSequence' type=<root>.CountingSequence<T of <root>.CountingSequence> origin=null
                            <set-?>: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=POSTFIX_INCR
                              $this: GET_VAR 'val <unary>: <unbound IrClassSymbolImpl> [val] declared in <root>.CountingSequence.CountingSequenceIterator.next.<anonymous>' type=<unbound IrClassSymbolImpl> origin=null
                          GET_VAR 'val <unary>: <unbound IrClassSymbolImpl> [val] declared in <root>.CountingSequence.CountingSequenceIterator.next.<anonymous>' type=<unbound IrClassSymbolImpl> origin=null
      FUN name:iterator signature:/CountingSequence.iterator|iterator(){}[0] visibility:public modality:OPEN <> ($this:<root>.CountingSequence<T of <root>.CountingSequence>) returnType:<root>.CountingSequence.CountingSequenceIterator<T of <root>.CountingSequence> [operator]
        overridden:
          UNBOUND IrSimpleFunctionSymbolImpl
        $this: VALUE_PARAMETER name:<this> type:<root>.CountingSequence<T of <root>.CountingSequence>
        BLOCK_BODY
          RETURN type=<unbound IrClassSymbolImpl> from='public open fun iterator (): <root>.CountingSequence.CountingSequenceIterator<T of <root>.CountingSequence> [operator] declared in <root>.CountingSequence'
            CONSTRUCTOR_CALL 'public constructor <init> (it: <unbound IrClassSymbolImpl><T of <root>.CountingSequence>) [primary] declared in <root>.CountingSequence.CountingSequenceIterator' type=<root>.CountingSequence.CountingSequenceIterator<T of <root>.CountingSequence> origin=null
              $outer: GET_VAR '<this>: <root>.CountingSequence<T of <root>.CountingSequence> declared in <root>.CountingSequence.iterator' type=<root>.CountingSequence<T of <root>.CountingSequence> origin=null
              it: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl><T of <root>.CountingSequence> origin=null
                $this: CALL 'private final fun <get-s> (): <unbound IrClassSymbolImpl><T of <root>.CountingSequence> declared in <root>.CountingSequence' type=<unbound IrClassSymbolImpl><T of <root>.CountingSequence> origin=GET_PROPERTY
                  $this: GET_VAR '<this>: <root>.CountingSequence<T of <root>.CountingSequence> declared in <root>.CountingSequence.iterator' type=<root>.CountingSequence<T of <root>.CountingSequence> origin=null
    FUN name:box signature:/box|box(){}[0] visibility:public modality:FINAL <> () returnType:<unbound IrClassSymbolImpl>
      BLOCK_BODY
        VAR name:s type:<unbound IrClassSymbolImpl> [val]
          CONSTRUCTOR_CALL 'UNBOUND IrConstructorSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
        BLOCK type=<unbound IrClassSymbolImpl> origin=FOR_LOOP
          VAR FOR_LOOP_ITERATOR name:<iterator> type:<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>>> [val]
            CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>>> origin=null
              $this: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>>> origin=null
                <1>: <unbound IrClassSymbolImpl>
                $receiver: CALL 'public final fun <get-xs> (): <root>.CountingSequence<<unbound IrClassSymbolImpl>> declared in <root>' type=<root>.CountingSequence<<unbound IrClassSymbolImpl>> origin=GET_PROPERTY
          WHILE label=null origin=FOR_LOOP_INNER_WHILE
            condition: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=FOR_LOOP_HAS_NEXT
              $this: GET_VAR 'val <iterator>: <unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>>> [val] declared in <root>.box' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>>> origin=null
            body: BLOCK type=<unbound IrClassSymbolImpl> origin=FOR_LOOP_INNER_WHILE
              VAR IR_TEMPORARY_VARIABLE name:<destruct> type:<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> [val]
                CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> origin=FOR_LOOP_NEXT
                  $this: GET_VAR 'val <iterator>: <unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>>> [val] declared in <root>.box' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>>> origin=null
              VAR name:index type:<unbound IrClassSymbolImpl> [val]
                CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=COMPONENT_N(index=1)
                  $this: GET_VAR 'val <destruct>: <unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> [val] declared in <root>.box' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> origin=null
              VAR name:x type:<unbound IrClassSymbolImpl> [val]
                CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=COMPONENT_N(index=2)
                  $this: GET_VAR 'val <destruct>: <unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> [val] declared in <root>.box' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> origin=null
              TYPE_OP type=<unbound IrClassSymbolImpl> origin=IMPLICIT_COERCION_TO_UNIT typeOperand=<unbound IrClassSymbolImpl>
                BLOCK type=<unbound IrClassSymbolImpl> origin=null
                  CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
                    $this: GET_VAR 'val s: <unbound IrClassSymbolImpl> [val] declared in <root>.box' type=<unbound IrClassSymbolImpl> origin=null
                    1: STRING_CONCATENATION type=<unbound IrClassSymbolImpl>
                      GET_VAR 'val index: <unbound IrClassSymbolImpl> [val] declared in <root>.box' type=<unbound IrClassSymbolImpl> origin=null
                      CONST String type=<unbound IrClassSymbolImpl> value=":"
                      GET_VAR 'val x: <unbound IrClassSymbolImpl> [val] declared in <root>.box' type=<unbound IrClassSymbolImpl> origin=null
                      CONST String type=<unbound IrClassSymbolImpl> value=";"
        VAR name:ss type:<unbound IrClassSymbolImpl> [val]
          CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
            $this: GET_VAR 'val s: <unbound IrClassSymbolImpl> [val] declared in <root>.box' type=<unbound IrClassSymbolImpl> origin=null
        WHEN type=<unbound IrClassSymbolImpl> origin=IF
          BRANCH
            if: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=EXCLEQ
              $this: CALL 'public final fun EQEQ (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EXCLEQ
                arg0: GET_VAR 'val ss: <unbound IrClassSymbolImpl> [val] declared in <root>.box' type=<unbound IrClassSymbolImpl> origin=null
                arg1: CONST String type=<unbound IrClassSymbolImpl> value="0:a;1:b;2:c;3:d;"
            then: RETURN type=<unbound IrClassSymbolImpl> from='public final fun box (): <unbound IrClassSymbolImpl> declared in <root>'
              STRING_CONCATENATION type=<unbound IrClassSymbolImpl>
                CONST String type=<unbound IrClassSymbolImpl> value="fail: '"
                GET_VAR 'val ss: <unbound IrClassSymbolImpl> [val] declared in <root>.box' type=<unbound IrClassSymbolImpl> origin=null
                CONST String type=<unbound IrClassSymbolImpl> value="'"
        WHEN type=<unbound IrClassSymbolImpl> origin=IF
          BRANCH
            if: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=EXCLEQ
              $this: CALL 'public final fun EQEQ (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EXCLEQ
                arg0: CALL 'public final fun <get-hasNextCtr> (): <unbound IrClassSymbolImpl> declared in <root>.CountingSequence' type=<unbound IrClassSymbolImpl> origin=GET_PROPERTY
                  $this: CALL 'public final fun <get-xs> (): <root>.CountingSequence<<unbound IrClassSymbolImpl>> declared in <root>' type=<root>.CountingSequence<<unbound IrClassSymbolImpl>> origin=GET_PROPERTY
                arg1: CONST Int type=<unbound IrClassSymbolImpl> value=5
            then: RETURN type=<unbound IrClassSymbolImpl> from='public final fun box (): <unbound IrClassSymbolImpl> declared in <root>'
              STRING_CONCATENATION type=<unbound IrClassSymbolImpl>
                CONST String type=<unbound IrClassSymbolImpl> value="hasNextCtr != 5, was: '"
                CALL 'public final fun <get-hasNextCtr> (): <unbound IrClassSymbolImpl> declared in <root>.CountingSequence' type=<unbound IrClassSymbolImpl> origin=GET_PROPERTY
                  $this: CALL 'public final fun <get-xs> (): <root>.CountingSequence<<unbound IrClassSymbolImpl>> declared in <root>' type=<root>.CountingSequence<<unbound IrClassSymbolImpl>> origin=GET_PROPERTY
                CONST String type=<unbound IrClassSymbolImpl> value="'"
        WHEN type=<unbound IrClassSymbolImpl> origin=IF
          BRANCH
            if: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=EXCLEQ
              $this: CALL 'public final fun EQEQ (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EXCLEQ
                arg0: CALL 'public final fun <get-nextCtr> (): <unbound IrClassSymbolImpl> declared in <root>.CountingSequence' type=<unbound IrClassSymbolImpl> origin=GET_PROPERTY
                  $this: CALL 'public final fun <get-xs> (): <root>.CountingSequence<<unbound IrClassSymbolImpl>> declared in <root>' type=<root>.CountingSequence<<unbound IrClassSymbolImpl>> origin=GET_PROPERTY
                arg1: CONST Int type=<unbound IrClassSymbolImpl> value=4
            then: RETURN type=<unbound IrClassSymbolImpl> from='public final fun box (): <unbound IrClassSymbolImpl> declared in <root>'
              STRING_CONCATENATION type=<unbound IrClassSymbolImpl>
                CONST String type=<unbound IrClassSymbolImpl> value="nextCtr != 4, was: '"
                CALL 'public final fun <get-nextCtr> (): <unbound IrClassSymbolImpl> declared in <root>.CountingSequence' type=<unbound IrClassSymbolImpl> origin=GET_PROPERTY
                  $this: CALL 'public final fun <get-xs> (): <root>.CountingSequence<<unbound IrClassSymbolImpl>> declared in <root>' type=<root>.CountingSequence<<unbound IrClassSymbolImpl>> origin=GET_PROPERTY
                CONST String type=<unbound IrClassSymbolImpl> value="'"
        RETURN type=<unbound IrClassSymbolImpl> from='public final fun box (): <unbound IrClassSymbolImpl> declared in <root>'
          CONST String type=<unbound IrClassSymbolImpl> value="OK"
