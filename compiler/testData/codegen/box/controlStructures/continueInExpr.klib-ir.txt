MODULE_FRAGMENT name:<main>
  FILE fqName:<root> fileName:/continueInExpr.kt
    FUN name:concatNonNulls signature:/concatNonNulls|concatNonNulls(kotlin.collections.List<kotlin.String?>){}[0] visibility:public modality:FINAL <> (strings:<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>?>) returnType:<unbound IrClassSymbolImpl>
      VALUE_PARAMETER name:strings index:0 type:<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>?>
      BLOCK_BODY
        VAR name:result type:<unbound IrClassSymbolImpl> [var]
          CONST String type=<unbound IrClassSymbolImpl> value=""
        BLOCK type=<unbound IrClassSymbolImpl> origin=FOR_LOOP
          VAR FOR_LOOP_ITERATOR name:<iterator> type:<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>?> [val]
            CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>?> origin=FOR_LOOP_ITERATOR
              $this: GET_VAR 'strings: <unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>?> declared in <root>.concatNonNulls' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>?> origin=null
          WHILE label=null origin=FOR_LOOP_INNER_WHILE
            condition: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=FOR_LOOP_HAS_NEXT
              $this: GET_VAR 'val <iterator>: <unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>?> [val] declared in <root>.concatNonNulls' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>?> origin=null
            body: BLOCK type=<unbound IrClassSymbolImpl> origin=FOR_LOOP_INNER_WHILE
              VAR FOR_LOOP_VARIABLE name:str type:<unbound IrClassSymbolImpl>? [val]
                CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl>? origin=FOR_LOOP_NEXT
                  $this: GET_VAR 'val <iterator>: <unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>?> [val] declared in <root>.concatNonNulls' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>?> origin=null
              BLOCK type=<unbound IrClassSymbolImpl> origin=null
                SET_VAR 'var result: <unbound IrClassSymbolImpl> [var] declared in <root>.concatNonNulls' type=<unbound IrClassSymbolImpl> origin=PLUSEQ
                  CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=PLUSEQ
                    $this: GET_VAR 'var result: <unbound IrClassSymbolImpl> [var] declared in <root>.concatNonNulls' type=<unbound IrClassSymbolImpl> origin=PLUSEQ
                    1: BLOCK type=<unbound IrClassSymbolImpl> origin=ELVIS
                      VAR IR_TEMPORARY_VARIABLE name:tmp0_elvis_lhs type:<unbound IrClassSymbolImpl>? [val]
                        GET_VAR 'val str: <unbound IrClassSymbolImpl>? [val] declared in <root>.concatNonNulls' type=<unbound IrClassSymbolImpl>? origin=null
                      WHEN type=<unbound IrClassSymbolImpl> origin=null
                        BRANCH
                          if: CALL 'public final fun EQEQ (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EQEQ
                            arg0: GET_VAR 'val tmp0_elvis_lhs: <unbound IrClassSymbolImpl>? [val] declared in <root>.concatNonNulls' type=<unbound IrClassSymbolImpl>? origin=null
                            arg1: CONST Null type=<unbound IrClassSymbolImpl>? value=null
                          then: CONTINUE label=null loop.label=null
                        BRANCH
                          if: CONST Boolean type=<unbound IrClassSymbolImpl> value=true
                          then: GET_VAR 'val tmp0_elvis_lhs: <unbound IrClassSymbolImpl>? [val] declared in <root>.concatNonNulls' type=<unbound IrClassSymbolImpl>? origin=null
        RETURN type=<unbound IrClassSymbolImpl> from='public final fun concatNonNulls (strings: <unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>?>): <unbound IrClassSymbolImpl> declared in <root>'
          GET_VAR 'var result: <unbound IrClassSymbolImpl> [var] declared in <root>.concatNonNulls' type=<unbound IrClassSymbolImpl> origin=null
    FUN name:box signature:/box|box(){}[0] visibility:public modality:FINAL <> () returnType:<unbound IrClassSymbolImpl>
      BLOCK_BODY
        VAR name:test type:<unbound IrClassSymbolImpl> [val]
          CALL 'public final fun concatNonNulls (strings: <unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>?>): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
            strings: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>?> origin=null
              <1>: <unbound IrClassSymbolImpl>?
              1: VARARG type=<unbound IrClassSymbolImpl><out <unbound IrClassSymbolImpl>?> varargElementType=<unbound IrClassSymbolImpl>?
                CONST String type=<unbound IrClassSymbolImpl> value="abc"
                CONST Null type=<unbound IrClassSymbolImpl>? value=null
                CONST Null type=<unbound IrClassSymbolImpl>? value=null
                CONST String type=<unbound IrClassSymbolImpl> value=""
                CONST Null type=<unbound IrClassSymbolImpl>? value=null
                CONST String type=<unbound IrClassSymbolImpl> value="def"
        WHEN type=<unbound IrClassSymbolImpl> origin=IF
          BRANCH
            if: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=EXCLEQ
              $this: CALL 'public final fun EQEQ (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EXCLEQ
                arg0: GET_VAR 'val test: <unbound IrClassSymbolImpl> [val] declared in <root>.box' type=<unbound IrClassSymbolImpl> origin=null
                arg1: CONST String type=<unbound IrClassSymbolImpl> value="abcdef"
            then: RETURN type=<unbound IrClassSymbolImpl> from='public final fun box (): <unbound IrClassSymbolImpl> declared in <root>'
              STRING_CONCATENATION type=<unbound IrClassSymbolImpl>
                CONST String type=<unbound IrClassSymbolImpl> value="Failed: test="
                GET_VAR 'val test: <unbound IrClassSymbolImpl> [val] declared in <root>.box' type=<unbound IrClassSymbolImpl> origin=null
        RETURN type=<unbound IrClassSymbolImpl> from='public final fun box (): <unbound IrClassSymbolImpl> declared in <root>'
          CONST String type=<unbound IrClassSymbolImpl> value="OK"
