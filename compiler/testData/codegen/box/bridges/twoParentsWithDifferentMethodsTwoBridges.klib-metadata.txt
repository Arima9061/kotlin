library {
  // module name: <main>

  library fragment {
    // package name: <root>

    // class name: A
    // class name: B
    // class name: Z1
    // class name: Z2

    public abstract interface A<T#0 /* T */> : kotlin/Any {

      public open fun foo(t: T#0, u: kotlin/Int): kotlin/String
    }

    public abstract interface B<T#0 /* T */, T#1 /* U */> : kotlin/Any {

      public open fun foo(t: T#0, u: T#1): kotlin/String
    }

    public final class Z1 : A<kotlin/String>, B<kotlin/String, kotlin/Int> {

      public constructor()

      public open fun foo(t: kotlin/String, u: kotlin/Int): kotlin/String
    }

    public final class Z2 : B<kotlin/String, kotlin/Int>, A<kotlin/String> {

      public constructor()

      public open fun foo(t: kotlin/String, u: kotlin/Int): kotlin/String
    }

    package {

      public final fun box(): kotlin/String
    }
  }
}
