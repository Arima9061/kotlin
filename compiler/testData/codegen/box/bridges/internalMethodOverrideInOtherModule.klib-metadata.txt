// MODULE: lib1
library {
  // module name: <lib1>

  library fragment {
    // package name: <root>

    // class name: Demo
    // class name: LibDemo

    public abstract class Demo : kotlin/Any {

      public constructor()

      internal final fun demoFun(): kotlin/Int

      internal open fun demoOpenFun(): kotlin/Int

      internal open val demoOpenVal: kotlin/Int /* = ... */
        internal open get

      internal open val demoOpenValGet: kotlin/Int
        internal open /* non-default */ get

      internal open var demoOpenVarSetGet: kotlin/Int
        internal open /* non-default */ get
        internal open /* non-default */ set(value: kotlin/Int)

      internal final val demoVal: kotlin/Int /* = ... */
        internal final get

      internal final val demoValGet: kotlin/Int
        internal final /* non-default */ get

      internal final var demoVarSetGet: kotlin/Int
        internal final /* non-default */ get
        internal final /* non-default */ set(value: kotlin/Int)
    }

    public open class LibDemo : Demo {

      public constructor()

      public open fun demoOpenFun(): kotlin/Int

      public open val demoOpenVal: kotlin/Int /* = ... */
        public open get

      public open val demoOpenValGet: kotlin/Int
        public open /* non-default */ get

      public open var demoOpenVarSetGet: kotlin/Int
        public open /* non-default */ get
        public open /* non-default */ set(value: kotlin/Int)
    }

    package {

      public final fun testFun(d: Demo): kotlin/Int

      public final fun testOpenFun(d: Demo): kotlin/Int

      public final fun testOpenVal(d: Demo): kotlin/Int

      public final fun testOpenValGet(d: Demo): kotlin/Int

      public final fun testOpenVarGet(d: Demo): kotlin/Int

      public final fun testOpenVarSet(d: Demo, v: kotlin/Int): kotlin/Unit

      public final fun testVal(d: Demo): kotlin/Int

      public final fun testValGet(d: Demo): kotlin/Int

      public final fun testVarGet(d: Demo): kotlin/Int

      public final fun testVarSet(d: Demo, v: kotlin/Int): kotlin/Unit

      public final var DemoGetterCalls: kotlin/Int
        public final get
        public final set

      public final var DemoOpenGetterCalls: kotlin/Int
        public final get
        public final set

      public final var DemoOpenSetterCalls: kotlin/Int
        public final get
        public final set

      public final var DemoSetterCalls: kotlin/Int
        public final get
        public final set

      public final var LibDemoOpenGetterCalls: kotlin/Int
        public final get
        public final set

      public final var LibDemoOpenSetterCalls: kotlin/Int
        public final get
        public final set
    }
  }
}

// MODULE: main
library {
  // module name: <main>

  library fragment {
    // package name: <root>

    // class name: MyDemo
    // class name: MyDemo2

    public final class MyDemo : Demo {

      public constructor()

      public final fun demoFun(): kotlin/Int

      public final fun demoOpenFun(): kotlin/Int

      public final val demoOpenVal: kotlin/Int /* = ... */
        public final get

      public final val demoOpenValGet: kotlin/Int
        public final /* non-default */ get

      public final var demoOpenVarSetGet: kotlin/Int
        public final /* non-default */ get
        public final /* non-default */ set(value: kotlin/Int)

      public final val demoVal: kotlin/Int /* = ... */
        public final get

      public final val demoValGet: kotlin/Int
        public final /* non-default */ get

      public final var demoVarSetGet: kotlin/Int
        public final /* non-default */ get
        public final /* non-default */ set(value: kotlin/Int)
    }

    public final class MyDemo2 : LibDemo {

      public constructor()

      public final fun demoFun(): kotlin/Int

      public open fun demoOpenFun(): kotlin/Int

      public open val demoOpenVal: kotlin/Int /* = ... */
        public open get

      public open val demoOpenValGet: kotlin/Int
        public open /* non-default */ get

      public open var demoOpenVarSetGet: kotlin/Int
        public open /* non-default */ get
        public open /* non-default */ set(value: kotlin/Int)

      public final val demoVal: kotlin/Int /* = ... */
        public final get

      public final val demoValGet: kotlin/Int
        public final /* non-default */ get

      public final var demoVarSetGet: kotlin/Int
        public final /* non-default */ get
        public final /* non-default */ set(value: kotlin/Int)
    }

    package {

      public final fun box(): kotlin/String

      public final fun resetCounters(): kotlin/Unit

      public final fun testLibDemo(): kotlin/Unit

      public final fun testMyDemo(): kotlin/Unit

      public final fun testMyDemo2(): kotlin/Unit

      public final var MyDemo2GetterCalls: kotlin/Int
        public final get
        public final set

      public final var MyDemo2OpenGetterCalls: kotlin/Int
        public final get
        public final set

      public final var MyDemo2OpenSetterCalls: kotlin/Int
        public final get
        public final set

      public final var MyDemo2SetterCalls: kotlin/Int
        public final get
        public final set

      public final var MyDemoGetterCalls: kotlin/Int
        public final get
        public final set

      public final var MyDemoOpenGetterCalls: kotlin/Int
        public final get
        public final set

      public final var MyDemoOpenSetterCalls: kotlin/Int
        public final get
        public final set

      public final var MyDemoSetterCalls: kotlin/Int
        public final get
        public final set
    }
  }
}
