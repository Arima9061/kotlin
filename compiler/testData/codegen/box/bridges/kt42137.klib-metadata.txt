library {
  // module name: <main>

  library fragment {
    // package name: <root>

    // class name: A
    // class name: B
    // class name: C
    // class name: X
    // class name: Y

    public abstract interface A<out T#0 /* T */> : kotlin/Any {

      public abstract val value: T#0
        public abstract get
    }

    public abstract interface B<out T#0 /* T */ : kotlin/CharSequence> : A<T#0> {
    }

    public open class C : B<kotlin/CharSequence> {

      public constructor(value: kotlin/String)

      public open val value: kotlin/String
        public open get
    }

    public abstract interface X : kotlin/Any {

      public abstract val value: kotlin/CharSequence
        public abstract get
    }

    public final class Y : C, X {

      public constructor(value: kotlin/String)
    }

    package {

      public final fun box(): kotlin/String
    }
  }
}
