library {
  // module name: <main>

  library fragment {
    // package name: <root>

    // class name: A
    // class name: B
    // class name: C
    // class name: D

    public open class A<T#0 /* T */> : kotlin/Any {

      public constructor()

      public final fun foo(x: T#0): kotlin/String

      public final fun foo(x: A<T#0>): kotlin/String
    }

    public final class B : A<A<kotlin/String>>, C<A<kotlin/String>>, D {

      public constructor()
    }

    public abstract interface C<T#0 /* E */> : kotlin/Any {

      public abstract fun foo(x: T#0): kotlin/String

      public abstract fun foo(x: A<T#0>): kotlin/String
    }

    public abstract interface D : kotlin/Any {

      public abstract fun foo(x: A<A<kotlin/String>>): kotlin/String
    }

    package {

      public final fun box(): kotlin/String
    }
  }
}
