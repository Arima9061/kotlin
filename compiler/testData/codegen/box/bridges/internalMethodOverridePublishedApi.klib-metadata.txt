// MODULE: lib1
library {
  // module name: <lib1>

  library fragment {
    // package name: <root>

    // class name: DemoClassInternal

    public abstract class DemoClassInternal : kotlin/Any {

      public constructor()

      @kotlin/PublishedApi
      internal open fun demo(): kotlin/Int
    }

    package {

      public final fun testDemo(d: DemoClassInternal): kotlin/Int

      public final inline fun testDemoInline(d: DemoClassInternal): kotlin/Int
    }
  }
}

// MODULE: main
library {
  // module name: <main>

  library fragment {
    // package name: <root>

    // class name: MyDemo1
    // class name: MyDemo2
    // class name: MyDemo3
    // class name: MyDemo4
    // class name: MyDemo5
    // class name: MyDemo6
    // class name: MyDemo7

    public open class MyDemo1 : DemoClassInternal {

      public constructor()
    }

    public final class MyDemo2 : DemoClassInternal {

      public constructor()

      public final fun demo(): kotlin/Int
    }

    public open class MyDemo3 : DemoClassInternal {

      public constructor()

      public open fun demo(): kotlin/Int
    }

    public final class MyDemo4 : MyDemo1 {

      public constructor()
    }

    public final class MyDemo5 : MyDemo1 {

      public constructor()

      public final fun demo(): kotlin/Int
    }

    public final class MyDemo6 : MyDemo3 {

      public constructor()
    }

    public final class MyDemo7 : MyDemo3 {

      public constructor()

      public open fun demo(): kotlin/Int
    }

    package {

      public final fun box(): kotlin/String

      public final fun testMyDemo1(): kotlin/Unit

      public final fun testMyDemo2(): kotlin/Unit

      public final fun testMyDemo3(): kotlin/Unit

      public final fun testMyDemo4(): kotlin/Unit

      public final fun testMyDemo5(): kotlin/Unit

      public final fun testMyDemo6(): kotlin/Unit

      public final fun testMyDemo7(): kotlin/Unit
    }
  }
}
