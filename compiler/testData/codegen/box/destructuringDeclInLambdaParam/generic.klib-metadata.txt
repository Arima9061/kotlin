library {
  // module name: <main>

  library fragment {
    // package name: <root>

    // class name: A

    public final data class A<T#0 /* T */, T#1 /* F */> : kotlin/Any {

      public constructor(x: T#0, y: T#1)

      public final /* synthesized */ operator fun component1(): T#0

      public final /* synthesized */ operator fun component2(): T#1

      public final /* synthesized */ fun copy(x: T#0 /* = ... */, y: T#1 /* = ... */): A<T#0, T#1>

      public open /* synthesized */ operator fun equals(other: kotlin/Any?): kotlin/Boolean

      public open /* synthesized */ fun hashCode(): kotlin/Int

      public open /* synthesized */ fun toString(): kotlin/String

      public final val x: T#0
        public final get

      public final val y: T#1
        public final get
    }

    package {

      public final fun box(): kotlin/String

      public final fun <T#0 /* X */, T#1 /* Y */> foo(a: A<T#0, T#1>, block: kotlin/Function1<A<T#0, T#1>, kotlin/String>): kotlin/String
    }
  }
}
