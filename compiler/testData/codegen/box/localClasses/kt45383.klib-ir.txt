MODULE_FRAGMENT name:<main>
  FILE fqName:<root> fileName:/kt45383.kt
    FUN name:box signature:/box|box(){}[0] visibility:public modality:FINAL <> () returnType:<unbound IrClassSymbolImpl>
      BLOCK_BODY
        VAR name:cur type:<unbound IrClassSymbolImpl> [var]
          CONST Int type=<unbound IrClassSymbolImpl> value=0
        CLASS CLASS name:Node modality:FINAL visibility:local superTypes:[<unbound IrClassSymbolImpl>]
          $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:<root>.box.Node
          CONSTRUCTOR visibility:public <> (l:<unbound IrClassSymbolImpl>) returnType:<root>.box.Node [primary]
            VALUE_PARAMETER name:l index:0 type:<unbound IrClassSymbolImpl>
            BLOCK_BODY
              DELEGATING_CONSTRUCTOR_CALL 'UNBOUND IrConstructorSymbolImpl'
              INSTANCE_INITIALIZER_CALL classDescriptor='CLASS CLASS name:Node modality:FINAL visibility:local superTypes:[<unbound IrClassSymbolImpl>]'
          PROPERTY name:left visibility:public modality:FINAL [val]
            FIELD PROPERTY_BACKING_FIELD name:left type:<root>.box.Node? visibility:private [final]
              EXPRESSION_BODY
                WHEN type=<root>.box.Node? origin=IF
                  BRANCH
                    if: CALL 'public final fun greater (arg0: <unbound IrClassSymbolImpl>, arg1: <unbound IrClassSymbolImpl>): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=GT
                      arg0: GET_VAR 'l: <unbound IrClassSymbolImpl> declared in <root>.box.Node.<init>' type=<unbound IrClassSymbolImpl> origin=null
                      arg1: CONST Int type=<unbound IrClassSymbolImpl> value=0
                    then: CONSTRUCTOR_CALL 'public constructor <init> (l: <unbound IrClassSymbolImpl>) [primary] declared in <root>.box.Node' type=<root>.box.Node origin=null
                      l: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=MINUS
                        $this: GET_VAR 'l: <unbound IrClassSymbolImpl> declared in <root>.box.Node.<init>' type=<unbound IrClassSymbolImpl> origin=null
                        1: CONST Int type=<unbound IrClassSymbolImpl> value=1
                  BRANCH
                    if: CONST Boolean type=<unbound IrClassSymbolImpl> value=true
                    then: CONST Null type=<unbound IrClassSymbolImpl>? value=null
            FUN DEFAULT_PROPERTY_ACCESSOR name:<get-left> visibility:public modality:FINAL <> ($this:<root>.box.Node) returnType:<root>.box.Node?
              correspondingProperty: PROPERTY name:left visibility:public modality:FINAL [val]
              $this: VALUE_PARAMETER name:<this> type:<root>.box.Node
              BLOCK_BODY
                RETURN type=<unbound IrClassSymbolImpl> from='public final fun <get-left> (): <root>.box.Node? declared in <root>.box.Node'
                  GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:left type:<root>.box.Node? visibility:private [final]' type=<root>.box.Node? origin=null
                    receiver: GET_VAR '<this>: <root>.box.Node declared in <root>.box.Node.<get-left>' type=<root>.box.Node origin=null
          PROPERTY name:ind visibility:public modality:FINAL [val]
            FIELD PROPERTY_BACKING_FIELD name:ind type:<unbound IrClassSymbolImpl> visibility:private [final]
              EXPRESSION_BODY
                CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=PLUS
                  $this: BLOCK type=<unbound IrClassSymbolImpl> origin=ELVIS
                    VAR IR_TEMPORARY_VARIABLE name:tmp1_elvis_lhs type:<unbound IrClassSymbolImpl>? [val]
                      BLOCK type=<unbound IrClassSymbolImpl>? origin=SAFE_CALL
                        VAR IR_TEMPORARY_VARIABLE name:tmp0_safe_receiver type:<root>.box.Node? [val]
                          CALL 'public final fun <get-left> (): <root>.box.Node? declared in <root>.box.Node' type=<root>.box.Node? origin=GET_PROPERTY
                            $this: GET_VAR '<this>: <root>.box.Node declared in <root>.box.Node' type=<root>.box.Node origin=null
                        WHEN type=<unbound IrClassSymbolImpl>? origin=null
                          BRANCH
                            if: CALL 'public final fun EQEQ (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EQEQ
                              arg0: GET_VAR 'val tmp0_safe_receiver: <root>.box.Node? [val] declared in <root>.box.Node.ind' type=<root>.box.Node? origin=null
                              arg1: CONST Null type=<unbound IrClassSymbolImpl>? value=null
                            then: CONST Null type=<unbound IrClassSymbolImpl>? value=null
                          BRANCH
                            if: CONST Boolean type=<unbound IrClassSymbolImpl> value=true
                            then: CALL 'public final fun <get-ind> (): <unbound IrClassSymbolImpl> declared in <root>.box.Node' type=<unbound IrClassSymbolImpl> origin=GET_PROPERTY
                              $this: GET_VAR 'val tmp0_safe_receiver: <root>.box.Node? [val] declared in <root>.box.Node.ind' type=<root>.box.Node? origin=null
                    WHEN type=<unbound IrClassSymbolImpl> origin=null
                      BRANCH
                        if: CALL 'public final fun EQEQ (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EQEQ
                          arg0: GET_VAR 'val tmp1_elvis_lhs: <unbound IrClassSymbolImpl>? [val] declared in <root>.box.Node.ind' type=<unbound IrClassSymbolImpl>? origin=null
                          arg1: CONST Null type=<unbound IrClassSymbolImpl>? value=null
                        then: GET_VAR 'var cur: <unbound IrClassSymbolImpl> [var] declared in <root>.box' type=<unbound IrClassSymbolImpl> origin=null
                      BRANCH
                        if: CONST Boolean type=<unbound IrClassSymbolImpl> value=true
                        then: GET_VAR 'val tmp1_elvis_lhs: <unbound IrClassSymbolImpl>? [val] declared in <root>.box.Node.ind' type=<unbound IrClassSymbolImpl>? origin=null
                  1: CONST Int type=<unbound IrClassSymbolImpl> value=1
            FUN DEFAULT_PROPERTY_ACCESSOR name:<get-ind> visibility:public modality:FINAL <> ($this:<root>.box.Node) returnType:<unbound IrClassSymbolImpl>
              correspondingProperty: PROPERTY name:ind visibility:public modality:FINAL [val]
              $this: VALUE_PARAMETER name:<this> type:<root>.box.Node
              BLOCK_BODY
                RETURN type=<unbound IrClassSymbolImpl> from='public final fun <get-ind> (): <unbound IrClassSymbolImpl> declared in <root>.box.Node'
                  GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:ind type:<unbound IrClassSymbolImpl> visibility:private [final]' type=<unbound IrClassSymbolImpl> origin=null
                    receiver: GET_VAR '<this>: <root>.box.Node declared in <root>.box.Node.<get-ind>' type=<root>.box.Node origin=null
        RETURN type=<unbound IrClassSymbolImpl> from='public final fun box (): <unbound IrClassSymbolImpl> declared in <root>'
          WHEN type=<unbound IrClassSymbolImpl> origin=IF
            BRANCH
              if: CALL 'public final fun EQEQ (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EQEQ
                arg0: CALL 'public final fun <get-ind> (): <unbound IrClassSymbolImpl> declared in <root>.box.Node' type=<unbound IrClassSymbolImpl> origin=GET_PROPERTY
                  $this: CONSTRUCTOR_CALL 'public constructor <init> (l: <unbound IrClassSymbolImpl>) [primary] declared in <root>.box.Node' type=<root>.box.Node origin=null
                    l: CONST Int type=<unbound IrClassSymbolImpl> value=5
                arg1: CONST Int type=<unbound IrClassSymbolImpl> value=6
              then: CONST String type=<unbound IrClassSymbolImpl> value="OK"
            BRANCH
              if: CONST Boolean type=<unbound IrClassSymbolImpl> value=true
              then: CONST String type=<unbound IrClassSymbolImpl> value="Fail"
