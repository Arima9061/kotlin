library {
  // module name: <main>

  library fragment {
    // package name: <root>

    // class name: Wrapper

    public final class Wrapper<T#0 /* T */> : kotlin/Any {

      public constructor(value: T#0)

      public final var value: T#0
        public final get
        public final set
    }

    package {

      public final fun box(): kotlin/String

      public final fun <T#0 /* T */> T#0.noInlineApply(body: @kotlin/ExtensionFunctionType kotlin/Function1<T#0, kotlin/Unit>): T#0

      public final fun <T#0 /* T */, T#1 /* R */> T#0.noInlineRun(body: @kotlin/ExtensionFunctionType kotlin/Function1<T#0, T#1>): T#1

      public final fun <T#0 /* T */ : kotlin/UInt> testUInt1(arg: T#0): kotlin/Int

      public final fun <T#0 /* T */ : kotlin/UInt> testUInt2_1(old: T#0, value: T#0): Wrapper<T#0>

      public final fun <T#0 /* T */ : kotlin/UInt> testUInt2_2(old: T#0, value: T#0): Wrapper<T#0>

      public final fun <T#0 /* T */ : kotlin/UInt> testUInt3_1(old: T#0, value: T#0): kotlin/Int

      public final fun <T#0 /* T */ : kotlin/UInt> testUInt3_2(old: T#0, value: T#0): kotlin/Int
    }
  }
}
