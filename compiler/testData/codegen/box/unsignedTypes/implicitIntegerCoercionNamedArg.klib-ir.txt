MODULE_FRAGMENT name:<main>
  FILE fqName:kotlin.internal fileName:/annotation.kt
    CLASS ANNOTATION_CLASS name:ImplicitIntegerCoercion signature:kotlin.internal/ImplicitIntegerCoercion|null[0] modality:OPEN visibility:public superTypes:[<unbound IrClassSymbolImpl>]
      $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:kotlin.internal.ImplicitIntegerCoercion
      CONSTRUCTOR signature:kotlin.internal/ImplicitIntegerCoercion.<init>|<init>(){}[0] visibility:public <> () returnType:kotlin.internal.ImplicitIntegerCoercion [primary]
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL 'UNBOUND IrConstructorSymbolImpl'
          INSTANCE_INITIALIZER_CALL classDescriptor='CLASS ANNOTATION_CLASS name:ImplicitIntegerCoercion signature:kotlin.internal/ImplicitIntegerCoercion|null[0] modality:OPEN visibility:public superTypes:[<unbound IrClassSymbolImpl>]'
  FILE fqName:<root> fileName:/test.kt
    FUN name:testInt signature:/testInt|testInt(kotlin.UInt){}[0] visibility:public modality:FINAL <> (x:<unbound IrClassSymbolImpl>) returnType:<unbound IrClassSymbolImpl>
      VALUE_PARAMETER name:x index:0 type:<unbound IrClassSymbolImpl>
        annotations:
          ImplicitIntegerCoercion
      BLOCK_BODY
        RETURN type=<unbound IrClassSymbolImpl> from='public final fun testInt (x: <unbound IrClassSymbolImpl>): <unbound IrClassSymbolImpl> declared in <root>'
          TYPE_OP type=<unbound IrClassSymbolImpl> origin=CAST typeOperand=<unbound IrClassSymbolImpl>
            GET_VAR 'x: <unbound IrClassSymbolImpl> declared in <root>.testInt' type=<unbound IrClassSymbolImpl> origin=null
    FUN name:testLong signature:/testLong|testLong(kotlin.ULong){}[0] visibility:public modality:FINAL <> (x:<unbound IrClassSymbolImpl>) returnType:<unbound IrClassSymbolImpl>
      VALUE_PARAMETER name:x index:0 type:<unbound IrClassSymbolImpl>
        annotations:
          ImplicitIntegerCoercion
      BLOCK_BODY
        RETURN type=<unbound IrClassSymbolImpl> from='public final fun testLong (x: <unbound IrClassSymbolImpl>): <unbound IrClassSymbolImpl> declared in <root>'
          TYPE_OP type=<unbound IrClassSymbolImpl> origin=CAST typeOperand=<unbound IrClassSymbolImpl>
            GET_VAR 'x: <unbound IrClassSymbolImpl> declared in <root>.testLong' type=<unbound IrClassSymbolImpl> origin=null
    FUN name:box signature:/box|box(){}[0] visibility:public modality:FINAL <> () returnType:<unbound IrClassSymbolImpl>
      BLOCK_BODY
        RETURN type=<unbound IrClassSymbolImpl> from='public final fun box (): <unbound IrClassSymbolImpl> declared in <root>'
          WHEN type=<unbound IrClassSymbolImpl> origin=WHEN
            BRANCH
              if: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=EXCLEQ
                $this: CALL 'public final fun EQEQ (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EXCLEQ
                  arg0: CALL 'public final fun testInt (x: <unbound IrClassSymbolImpl>): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
                    x: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
                      $receiver: CONST Int type=<unbound IrClassSymbolImpl> value=5
                  arg1: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
                    $receiver: CONST Int type=<unbound IrClassSymbolImpl> value=5
              then: CONST String type=<unbound IrClassSymbolImpl> value="Fail: testInt(5)"
            BRANCH
              if: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=EXCLEQ
                $this: CALL 'public final fun EQEQ (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EXCLEQ
                  arg0: CALL 'public final fun testInt (x: <unbound IrClassSymbolImpl>): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
                    x: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
                      $receiver: CONST Int type=<unbound IrClassSymbolImpl> value=5
                  arg1: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
                    $receiver: CONST Int type=<unbound IrClassSymbolImpl> value=5
              then: CONST String type=<unbound IrClassSymbolImpl> value="Fail: testInt(x = 5)"
            BRANCH
              if: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=EXCLEQ
                $this: CALL 'public final fun EQEQ (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EXCLEQ
                  arg0: CALL 'public final fun testLong (x: <unbound IrClassSymbolImpl>): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
                    x: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
                      $receiver: CONST Int type=<unbound IrClassSymbolImpl> value=5
                  arg1: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
                    $receiver: CONST Long type=<unbound IrClassSymbolImpl> value=5
              then: CONST String type=<unbound IrClassSymbolImpl> value="Fail: testLong(5L)"
            BRANCH
              if: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=EXCLEQ
                $this: CALL 'public final fun EQEQ (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EXCLEQ
                  arg0: CALL 'public final fun testLong (x: <unbound IrClassSymbolImpl>): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
                    x: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
                      $receiver: CONST Int type=<unbound IrClassSymbolImpl> value=5
                  arg1: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
                    $receiver: CONST Long type=<unbound IrClassSymbolImpl> value=5
              then: CONST String type=<unbound IrClassSymbolImpl> value="Fail: testLong(x = 5L)"
            BRANCH
              if: CONST Boolean type=<unbound IrClassSymbolImpl> value=true
              then: CONST String type=<unbound IrClassSymbolImpl> value="OK"
