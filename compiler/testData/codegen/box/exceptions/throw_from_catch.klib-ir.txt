MODULE_FRAGMENT name:<main>
  FILE fqName:<root> fileName:/throw_from_catch.kt
    FUN name:box signature:/box|box(){}[0] visibility:public modality:FINAL <> () returnType:<unbound IrClassSymbolImpl>
      BLOCK_BODY
        TYPE_OP type=<unbound IrClassSymbolImpl> origin=IMPLICIT_COERCION_TO_UNIT typeOperand=<unbound IrClassSymbolImpl>
          CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
            <1>: <unbound IrClassSymbolImpl>
            1: CONST String type=<unbound IrClassSymbolImpl> value="My another error"
            2: FUN_EXPR type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> origin=LAMBDA
              FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL <> () returnType:<unbound IrClassSymbolImpl>
                BLOCK_BODY
                  TRY type=<unbound IrClassSymbolImpl>
                    try: BLOCK type=<unbound IrClassSymbolImpl> origin=null
                      CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
                        1: CONST String type=<unbound IrClassSymbolImpl> value="My error"
                    CATCH parameter=val e: <unbound IrClassSymbolImpl> [val] declared in <root>.box.<anonymous>
                      VAR CATCH_PARAMETER name:e type:<unbound IrClassSymbolImpl> [val]
                      BLOCK type=<unbound IrClassSymbolImpl> origin=null
                        CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
                          1: CONST String type=<unbound IrClassSymbolImpl> value="My another error"
        RETURN type=<unbound IrClassSymbolImpl> from='public final fun box (): <unbound IrClassSymbolImpl> declared in <root>'
          CONST String type=<unbound IrClassSymbolImpl> value="OK"
