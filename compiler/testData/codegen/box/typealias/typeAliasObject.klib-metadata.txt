library {
  // module name: <main>

  library fragment {
    // package name: <root>

    // class name: KHolder
    // class name: KHolder.Companion
    // class name: OHolder

    public final class KHolder : kotlin/Any {

      public constructor()

      // companion object: Companion

      // nested class: Companion
    }

    public final companion object KHolder.Companion : kotlin/Any {

      private constructor()

      public final val K: kotlin/String /* = ... */
        public final get
    }

    public final object OHolder : kotlin/Any {

      private constructor()

      public final val O: kotlin/String /* = ... */
        public final get
    }

    package {

      public final fun box(): kotlin/String

      public typealias KHolderAlias = KHolder /* = KHolder */

      public typealias OHolderAlias = OHolder /* = OHolder */
    }
  }
}
