library {
  // module name: <main>

  library fragment {
    // package name: <root>

    // class name: B

    public final class B : a/A {

      public constructor()

      public final fun f(): kotlin/String
    }

    package {

      public final fun box(): kotlin/String
    }
  }

  library fragment {
    // package name: a

    // class name: a/A
    // class name: a/A.Companion

    public abstract class a/A : kotlin/Any {

      public constructor()

      // companion object: Companion

      // nested class: Companion
    }

    public final companion object a/A.Companion : kotlin/Any {

      private constructor()

      protected final const val constVal: kotlin/String /* = "OK" */
        protected final get
    }
  }
}
