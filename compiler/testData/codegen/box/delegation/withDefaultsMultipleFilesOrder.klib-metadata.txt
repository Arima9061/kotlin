library {
  // module name: <main>

  library fragment {
    // package name: <root>

    // class name: DeprecatedLexicalScope
    // class name: Impl
    // class name: LexicalScope
    // class name: ResolutionScope
    // class name: ScopeImpl

    public abstract class DeprecatedLexicalScope : LexicalScope {

      public constructor(a: LexicalScope)

      public open /* delegation */ fun getContributedDescriptors(s: kotlin/String): kotlin/String
    }

    public final class Impl : DeprecatedLexicalScope {

      public constructor()
    }

    public abstract interface LexicalScope : ResolutionScope {
    }

    public abstract interface ResolutionScope : kotlin/Any {

      public abstract fun getContributedDescriptors(s: kotlin/String /* = ... */): kotlin/String
    }

    public final class ScopeImpl : LexicalScope {

      public constructor()

      public open fun getContributedDescriptors(s: kotlin/String): kotlin/String
    }

    package {

      public final fun box(): kotlin/String
    }
  }
}
