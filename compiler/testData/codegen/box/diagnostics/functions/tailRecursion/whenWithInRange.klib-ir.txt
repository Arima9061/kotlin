MODULE_FRAGMENT name:<main>
  FILE fqName:<root> fileName:/whenWithInRange.kt
    FUN name:withWhen signature:/withWhen|withWhen(kotlin.Int;kotlin.Any){}[0] visibility:public modality:FINAL <> (counter:<unbound IrClassSymbolImpl>, d:<unbound IrClassSymbolImpl>) returnType:<unbound IrClassSymbolImpl> [tailrec]
      VALUE_PARAMETER name:counter index:0 type:<unbound IrClassSymbolImpl>
      VALUE_PARAMETER name:d index:1 type:<unbound IrClassSymbolImpl>
      BLOCK_BODY
        RETURN type=<unbound IrClassSymbolImpl> from='public final fun withWhen (counter: <unbound IrClassSymbolImpl>, d: <unbound IrClassSymbolImpl>): <unbound IrClassSymbolImpl> [tailrec] declared in <root>'
          BLOCK type=<unbound IrClassSymbolImpl> origin=WHEN
            VAR IR_TEMPORARY_VARIABLE name:tmp0_subject type:<unbound IrClassSymbolImpl> [val]
              GET_VAR 'counter: <unbound IrClassSymbolImpl> declared in <root>.withWhen' type=<unbound IrClassSymbolImpl> origin=null
            WHEN type=<unbound IrClassSymbolImpl> origin=WHEN
              BRANCH
                if: CALL 'public final fun EQEQ (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EQEQ
                  arg0: GET_VAR 'val tmp0_subject: <unbound IrClassSymbolImpl> [val] declared in <root>.withWhen' type=<unbound IrClassSymbolImpl> origin=null
                  arg1: CONST Int type=<unbound IrClassSymbolImpl> value=0
                then: GET_VAR 'counter: <unbound IrClassSymbolImpl> declared in <root>.withWhen' type=<unbound IrClassSymbolImpl> origin=null
              BRANCH
                if: WHEN type=<unbound IrClassSymbolImpl> origin=OROR
                  BRANCH
                    if: CALL 'public final fun EQEQ (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EQEQ
                      arg0: GET_VAR 'val tmp0_subject: <unbound IrClassSymbolImpl> [val] declared in <root>.withWhen' type=<unbound IrClassSymbolImpl> origin=null
                      arg1: CONST Int type=<unbound IrClassSymbolImpl> value=1
                    then: CONST Boolean type=<unbound IrClassSymbolImpl> value=true
                  BRANCH
                    if: CONST Boolean type=<unbound IrClassSymbolImpl> value=true
                    then: CALL 'public final fun EQEQ (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EQEQ
                      arg0: GET_VAR 'val tmp0_subject: <unbound IrClassSymbolImpl> [val] declared in <root>.withWhen' type=<unbound IrClassSymbolImpl> origin=null
                      arg1: CONST Int type=<unbound IrClassSymbolImpl> value=2
                then: CALL 'public final fun withWhen (counter: <unbound IrClassSymbolImpl>, d: <unbound IrClassSymbolImpl>): <unbound IrClassSymbolImpl> [tailrec] declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
                  counter: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=MINUS
                    $this: GET_VAR 'counter: <unbound IrClassSymbolImpl> declared in <root>.withWhen' type=<unbound IrClassSymbolImpl> origin=null
                    1: CONST Int type=<unbound IrClassSymbolImpl> value=1
                  d: CONST String type=<unbound IrClassSymbolImpl> value="1,2"
              BRANCH
                if: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=IN
                  $this: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=RANGE
                    $this: CONST Int type=<unbound IrClassSymbolImpl> value=3
                    1: CONST Int type=<unbound IrClassSymbolImpl> value=49
                  1: GET_VAR 'val tmp0_subject: <unbound IrClassSymbolImpl> [val] declared in <root>.withWhen' type=<unbound IrClassSymbolImpl> origin=null
                then: CALL 'public final fun withWhen (counter: <unbound IrClassSymbolImpl>, d: <unbound IrClassSymbolImpl>): <unbound IrClassSymbolImpl> [tailrec] declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
                  counter: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=MINUS
                    $this: GET_VAR 'counter: <unbound IrClassSymbolImpl> declared in <root>.withWhen' type=<unbound IrClassSymbolImpl> origin=null
                    1: CONST Int type=<unbound IrClassSymbolImpl> value=1
                  d: CONST String type=<unbound IrClassSymbolImpl> value="3..49"
              BRANCH
                if: CALL 'public final fun EQEQ (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EQEQ
                  arg0: GET_VAR 'val tmp0_subject: <unbound IrClassSymbolImpl> [val] declared in <root>.withWhen' type=<unbound IrClassSymbolImpl> origin=null
                  arg1: CONST Int type=<unbound IrClassSymbolImpl> value=50
                then: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=PLUS
                  $this: CONST Int type=<unbound IrClassSymbolImpl> value=1
                  1: CALL 'public final fun withWhen (counter: <unbound IrClassSymbolImpl>, d: <unbound IrClassSymbolImpl>): <unbound IrClassSymbolImpl> [tailrec] declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
                    counter: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=MINUS
                      $this: GET_VAR 'counter: <unbound IrClassSymbolImpl> declared in <root>.withWhen' type=<unbound IrClassSymbolImpl> origin=null
                      1: CONST Int type=<unbound IrClassSymbolImpl> value=1
                    d: CONST String type=<unbound IrClassSymbolImpl> value="50"
              BRANCH
                if: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=NOT_IN
                  $this: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=NOT_IN
                    $this: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=RANGE
                      $this: CONST Int type=<unbound IrClassSymbolImpl> value=0
                      1: CONST Int type=<unbound IrClassSymbolImpl> value=50
                    1: GET_VAR 'val tmp0_subject: <unbound IrClassSymbolImpl> [val] declared in <root>.withWhen' type=<unbound IrClassSymbolImpl> origin=null
                then: CALL 'public final fun withWhen (counter: <unbound IrClassSymbolImpl>, d: <unbound IrClassSymbolImpl>): <unbound IrClassSymbolImpl> [tailrec] declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
                  counter: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=MINUS
                    $this: GET_VAR 'counter: <unbound IrClassSymbolImpl> declared in <root>.withWhen' type=<unbound IrClassSymbolImpl> origin=null
                    1: CONST Int type=<unbound IrClassSymbolImpl> value=1
                  d: CONST String type=<unbound IrClassSymbolImpl> value="!0..50"
              BRANCH
                if: CONST Boolean type=<unbound IrClassSymbolImpl> value=true
                then: CALL 'public final fun withWhen (counter: <unbound IrClassSymbolImpl>, d: <unbound IrClassSymbolImpl>): <unbound IrClassSymbolImpl> [tailrec] declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
                  counter: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=MINUS
                    $this: GET_VAR 'counter: <unbound IrClassSymbolImpl> declared in <root>.withWhen' type=<unbound IrClassSymbolImpl> origin=null
                    1: CONST Int type=<unbound IrClassSymbolImpl> value=1
                  d: CONST String type=<unbound IrClassSymbolImpl> value="else"
    FUN name:box signature:/box|box(){}[0] visibility:public modality:FINAL <> () returnType:<unbound IrClassSymbolImpl>
      BLOCK_BODY
        RETURN type=<unbound IrClassSymbolImpl> from='public final fun box (): <unbound IrClassSymbolImpl> declared in <root>'
          WHEN type=<unbound IrClassSymbolImpl> origin=IF
            BRANCH
              if: CALL 'public final fun EQEQ (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EQEQ
                arg0: CALL 'public final fun withWhen (counter: <unbound IrClassSymbolImpl>, d: <unbound IrClassSymbolImpl>): <unbound IrClassSymbolImpl> [tailrec] declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
                  counter: CONST Int type=<unbound IrClassSymbolImpl> value=100000
                  d: CONST String type=<unbound IrClassSymbolImpl> value="test"
                arg1: CONST Int type=<unbound IrClassSymbolImpl> value=1
              then: CONST String type=<unbound IrClassSymbolImpl> value="OK"
            BRANCH
              if: CONST Boolean type=<unbound IrClassSymbolImpl> value=true
              then: CONST String type=<unbound IrClassSymbolImpl> value="FAIL"
