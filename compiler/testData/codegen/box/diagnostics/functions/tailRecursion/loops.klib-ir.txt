MODULE_FRAGMENT name:<main>
  FILE fqName:<root> fileName:/loops.kt
    FUN name:test signature:/test|test(kotlin.Int){}[0] visibility:public modality:FINAL <> (x:<unbound IrClassSymbolImpl>) returnType:<unbound IrClassSymbolImpl> [tailrec]
      VALUE_PARAMETER name:x index:0 type:<unbound IrClassSymbolImpl>
      BLOCK_BODY
        VAR name:z type:<unbound IrClassSymbolImpl> [var]
          WHEN type=<unbound IrClassSymbolImpl> origin=IF
            BRANCH
              if: CALL 'public final fun greater (arg0: <unbound IrClassSymbolImpl>, arg1: <unbound IrClassSymbolImpl>): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=GT
                arg0: GET_VAR 'x: <unbound IrClassSymbolImpl> declared in <root>.test' type=<unbound IrClassSymbolImpl> origin=null
                arg1: CONST Int type=<unbound IrClassSymbolImpl> value=3
              then: CONST Int type=<unbound IrClassSymbolImpl> value=3
            BRANCH
              if: CONST Boolean type=<unbound IrClassSymbolImpl> value=true
              then: GET_VAR 'x: <unbound IrClassSymbolImpl> declared in <root>.test' type=<unbound IrClassSymbolImpl> origin=null
        WHILE label=null origin=WHILE_LOOP
          condition: CALL 'public final fun greater (arg0: <unbound IrClassSymbolImpl>, arg1: <unbound IrClassSymbolImpl>): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=GT
            arg0: GET_VAR 'var z: <unbound IrClassSymbolImpl> [var] declared in <root>.test' type=<unbound IrClassSymbolImpl> origin=null
            arg1: CONST Int type=<unbound IrClassSymbolImpl> value=0
          body: BLOCK type=<unbound IrClassSymbolImpl> origin=null
            WHEN type=<unbound IrClassSymbolImpl> origin=IF
              BRANCH
                if: CALL 'public final fun greater (arg0: <unbound IrClassSymbolImpl>, arg1: <unbound IrClassSymbolImpl>): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=GT
                  arg0: GET_VAR 'var z: <unbound IrClassSymbolImpl> [var] declared in <root>.test' type=<unbound IrClassSymbolImpl> origin=null
                  arg1: CONST Int type=<unbound IrClassSymbolImpl> value=10
                then: BLOCK type=<unbound IrClassSymbolImpl> origin=null
                  RETURN type=<unbound IrClassSymbolImpl> from='public final fun test (x: <unbound IrClassSymbolImpl>): <unbound IrClassSymbolImpl> [tailrec] declared in <root>'
                    CALL 'public final fun test (x: <unbound IrClassSymbolImpl>): <unbound IrClassSymbolImpl> [tailrec] declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
                      x: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=MINUS
                        $this: GET_VAR 'x: <unbound IrClassSymbolImpl> declared in <root>.test' type=<unbound IrClassSymbolImpl> origin=null
                        1: CONST Int type=<unbound IrClassSymbolImpl> value=1
            TYPE_OP type=<unbound IrClassSymbolImpl> origin=IMPLICIT_COERCION_TO_UNIT typeOperand=<unbound IrClassSymbolImpl>
              CALL 'public final fun test (x: <unbound IrClassSymbolImpl>): <unbound IrClassSymbolImpl> [tailrec] declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
                x: CONST Int type=<unbound IrClassSymbolImpl> value=0
            SET_VAR 'var z: <unbound IrClassSymbolImpl> [var] declared in <root>.test' type=<unbound IrClassSymbolImpl> origin=EQ
              CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=MINUS
                $this: GET_VAR 'var z: <unbound IrClassSymbolImpl> [var] declared in <root>.test' type=<unbound IrClassSymbolImpl> origin=null
                1: CONST Int type=<unbound IrClassSymbolImpl> value=1
        RETURN type=<unbound IrClassSymbolImpl> from='public final fun test (x: <unbound IrClassSymbolImpl>): <unbound IrClassSymbolImpl> [tailrec] declared in <root>'
          CONST Int type=<unbound IrClassSymbolImpl> value=1
    FUN name:box signature:/box|box(){}[0] visibility:public modality:FINAL <> () returnType:<unbound IrClassSymbolImpl>
      BLOCK_BODY
        RETURN type=<unbound IrClassSymbolImpl> from='public final fun box (): <unbound IrClassSymbolImpl> declared in <root>'
          WHEN type=<unbound IrClassSymbolImpl> origin=IF
            BRANCH
              if: CALL 'public final fun EQEQ (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EQEQ
                arg0: CALL 'public final fun test (x: <unbound IrClassSymbolImpl>): <unbound IrClassSymbolImpl> [tailrec] declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
                  x: CONST Int type=<unbound IrClassSymbolImpl> value=100000
                arg1: CONST Int type=<unbound IrClassSymbolImpl> value=1
              then: CONST String type=<unbound IrClassSymbolImpl> value="OK"
            BRANCH
              if: CONST Boolean type=<unbound IrClassSymbolImpl> value=true
              then: CONST String type=<unbound IrClassSymbolImpl> value="FAIL"
