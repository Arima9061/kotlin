library {
  // module name: <main>

  library fragment {
    // package name: <root>

    // class name: A
    // class name: A.Companion
    // class name: B

    public final class A : kotlin/Any {

      public constructor()

      // companion object: Companion

      // nested class: Companion
    }

    public final companion object A.Companion : B {

      private constructor()
    }

    public abstract interface B : kotlin/Any {
    }

    package {

      public final fun box(): kotlin/String

      public final operator fun B.invoke(i: kotlin/Int): kotlin/Int
    }
  }
}
