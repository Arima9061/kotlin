MODULE_FRAGMENT name:<main>
  FILE fqName:<root> fileName:/kt7774.kt
    PROPERTY name:flag signature:/flag|{}flag[0] visibility:public modality:FINAL [var]
      FIELD PROPERTY_BACKING_FIELD name:flag signature:[ /flag|{}flag[0] <- Local[<BF>|FIELD PROPERTY_BACKING_FIELD name:flag type:kotlin.Boolean visibility:private [static]] ] type:<unbound IrClassSymbolImpl> visibility:private [static]
        EXPRESSION_BODY
          CONST Boolean type=<unbound IrClassSymbolImpl> value=false
      FUN DEFAULT_PROPERTY_ACCESSOR name:<get-flag> signature:/flag.<get-flag>|<get-flag>(){}[0] visibility:public modality:FINAL <> () returnType:<unbound IrClassSymbolImpl>
        correspondingProperty: PROPERTY name:flag signature:/flag|{}flag[0] visibility:public modality:FINAL [var]
        BLOCK_BODY
          RETURN type=<unbound IrClassSymbolImpl> from='public final fun <get-flag> (): <unbound IrClassSymbolImpl> declared in <root>'
            GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:flag signature:[ /flag|{}flag[0] <- Local[<BF>|FIELD PROPERTY_BACKING_FIELD name:flag type:kotlin.Boolean visibility:private [static]] ] type:<unbound IrClassSymbolImpl> visibility:private [static]' type=<unbound IrClassSymbolImpl> origin=null
      FUN DEFAULT_PROPERTY_ACCESSOR name:<set-flag> signature:/flag.<set-flag>|<set-flag>(kotlin.Boolean){}[0] visibility:public modality:FINAL <> (<set-?>:<unbound IrClassSymbolImpl>) returnType:<unbound IrClassSymbolImpl>
        correspondingProperty: PROPERTY name:flag signature:/flag|{}flag[0] visibility:public modality:FINAL [var]
        VALUE_PARAMETER name:<set-?> index:0 type:<unbound IrClassSymbolImpl>
        BLOCK_BODY
          SET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:flag signature:[ /flag|{}flag[0] <- Local[<BF>|FIELD PROPERTY_BACKING_FIELD name:flag type:kotlin.Boolean visibility:private [static]] ] type:<unbound IrClassSymbolImpl> visibility:private [static]' type=<unbound IrClassSymbolImpl> origin=null
            value: GET_VAR '<set-?>: <unbound IrClassSymbolImpl> declared in <root>.<set-flag>' type=<unbound IrClassSymbolImpl> origin=null
    FUN name:foo signature:/foo|foo(kotlin.String?){}[0] visibility:public modality:FINAL <> (c:<unbound IrClassSymbolImpl>?) returnType:<unbound IrClassSymbolImpl> [inline]
      VALUE_PARAMETER name:c index:0 type:<unbound IrClassSymbolImpl>?
        EXPRESSION_BODY
          CONST Null type=<unbound IrClassSymbolImpl>? value=null
      BLOCK_BODY
        WHEN type=<unbound IrClassSymbolImpl> origin=IF
          BRANCH
            if: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=EXCLEQ
              $this: CALL 'public final fun EQEQ (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EXCLEQ
                arg0: GET_VAR 'c: <unbound IrClassSymbolImpl>? declared in <root>.foo' type=<unbound IrClassSymbolImpl>? origin=null
                arg1: CONST Null type=<unbound IrClassSymbolImpl>? value=null
            then: BLOCK type=<unbound IrClassSymbolImpl> origin=null
              CALL 'public final fun <set-flag> (<set-?>: <unbound IrClassSymbolImpl>): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=EQ
                <set-?>: CONST Boolean type=<unbound IrClassSymbolImpl> value=true
    FUN name:box signature:/box|box(){}[0] visibility:public modality:FINAL <> () returnType:<unbound IrClassSymbolImpl>
      BLOCK_BODY
        CALL 'public final fun foo (c: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> [inline] declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
        RETURN type=<unbound IrClassSymbolImpl> from='public final fun box (): <unbound IrClassSymbolImpl> declared in <root>'
          WHEN type=<unbound IrClassSymbolImpl> origin=IF
            BRANCH
              if: CALL 'public final fun <get-flag> (): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=GET_PROPERTY
              then: CONST String type=<unbound IrClassSymbolImpl> value="fail"
            BRANCH
              if: CONST Boolean type=<unbound IrClassSymbolImpl> value=true
              then: CONST String type=<unbound IrClassSymbolImpl> value="OK"
