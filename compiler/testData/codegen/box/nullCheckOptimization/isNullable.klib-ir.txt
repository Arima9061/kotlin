MODULE_FRAGMENT name:<main>
  FILE fqName:<root> fileName:/isNullable.kt
    FUN name:isNullable signature:/isNullable|isNullable(){0ยง<kotlin.Any?>}[0] visibility:public modality:FINAL <T> () returnType:<unbound IrClassSymbolImpl> [inline]
      TYPE_PARAMETER name:T index:0 variance: signature:[ /isNullable|isNullable(){0ยง<kotlin.Any?>}[0] <- Local[<TP>,0|TYPE_PARAMETER name:T index:0 variance: superTypes:[kotlin.Any?] reified:true] ] superTypes:[<unbound IrClassSymbolImpl>?] reified:true
      BLOCK_BODY
        RETURN type=<unbound IrClassSymbolImpl> from='public final fun isNullable <T> (): <unbound IrClassSymbolImpl> [inline] declared in <root>'
          TYPE_OP type=<unbound IrClassSymbolImpl> origin=INSTANCEOF typeOperand=T of <root>.isNullable
            CONST Null type=<unbound IrClassSymbolImpl>? value=null
    FUN name:box signature:/box|box(){}[0] visibility:public modality:FINAL <> () returnType:<unbound IrClassSymbolImpl>
      BLOCK_BODY
        RETURN type=<unbound IrClassSymbolImpl> from='public final fun box (): <unbound IrClassSymbolImpl> declared in <root>'
          WHEN type=<unbound IrClassSymbolImpl> origin=IF
            BRANCH
              if: CALL 'public final fun isNullable <T> (): <unbound IrClassSymbolImpl> [inline] declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
                <T>: <unbound IrClassSymbolImpl>?
              then: CONST String type=<unbound IrClassSymbolImpl> value="OK"
            BRANCH
              if: CONST Boolean type=<unbound IrClassSymbolImpl> value=true
              then: CONST String type=<unbound IrClassSymbolImpl> value="Fail"
