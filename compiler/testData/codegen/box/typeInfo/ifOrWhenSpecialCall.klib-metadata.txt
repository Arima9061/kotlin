library {
  // module name: <main>

  library fragment {
    // package name: <root>

    // class name: None
    // class name: Option
    // class name: Some

    public final class None : Option<kotlin/Int> {

      public constructor(s: kotlin/String /* = ... */)

      public open val s: kotlin/String
        public open get
    }

    public abstract interface Option<out T#0 /* T */> : kotlin/Any {

      public abstract val s: kotlin/String
        public abstract get
    }

    public final class Some<T#0 /* T */> : Option<T#0> {

      public constructor(s: kotlin/String)

      public open val s: kotlin/String
        public open get
    }

    package {

      public final fun box(): kotlin/String

      public final fun ifTest(a: kotlin/Int): Option<kotlin/Any>

      public final fun whenTest(a: kotlin/Int): Option<kotlin/Any>
    }
  }
}
