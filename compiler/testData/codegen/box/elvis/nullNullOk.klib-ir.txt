MODULE_FRAGMENT name:<main>
  FILE fqName:<root> fileName:/nullNullOk.kt
    FUN name:box signature:/box|box(){}[0] visibility:public modality:FINAL <> () returnType:<unbound IrClassSymbolImpl>
      BLOCK_BODY
        RETURN type=<unbound IrClassSymbolImpl> from='public final fun box (): <unbound IrClassSymbolImpl> declared in <root>'
          BLOCK type=<unbound IrClassSymbolImpl> origin=ELVIS
            VAR IR_TEMPORARY_VARIABLE name:tmp1_elvis_lhs type:<unbound IrClassSymbolImpl>? [val]
              BLOCK type=<unbound IrClassSymbolImpl>? origin=ELVIS
                VAR IR_TEMPORARY_VARIABLE name:tmp0_elvis_lhs type:<unbound IrClassSymbolImpl>? [val]
                  CONST Null type=<unbound IrClassSymbolImpl>? value=null
                WHEN type=<unbound IrClassSymbolImpl>? origin=null
                  BRANCH
                    if: CALL 'public final fun EQEQ (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EQEQ
                      arg0: GET_VAR 'val tmp0_elvis_lhs: <unbound IrClassSymbolImpl>? [val] declared in <root>.box' type=<unbound IrClassSymbolImpl>? origin=null
                      arg1: CONST Null type=<unbound IrClassSymbolImpl>? value=null
                    then: CONST Null type=<unbound IrClassSymbolImpl>? value=null
                  BRANCH
                    if: CONST Boolean type=<unbound IrClassSymbolImpl> value=true
                    then: GET_VAR 'val tmp0_elvis_lhs: <unbound IrClassSymbolImpl>? [val] declared in <root>.box' type=<unbound IrClassSymbolImpl>? origin=null
            WHEN type=<unbound IrClassSymbolImpl> origin=null
              BRANCH
                if: CALL 'public final fun EQEQ (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EQEQ
                  arg0: GET_VAR 'val tmp1_elvis_lhs: <unbound IrClassSymbolImpl>? [val] declared in <root>.box' type=<unbound IrClassSymbolImpl>? origin=null
                  arg1: CONST Null type=<unbound IrClassSymbolImpl>? value=null
                then: CONST String type=<unbound IrClassSymbolImpl> value="OK"
              BRANCH
                if: CONST Boolean type=<unbound IrClassSymbolImpl> value=true
                then: GET_VAR 'val tmp1_elvis_lhs: <unbound IrClassSymbolImpl>? [val] declared in <root>.box' type=<unbound IrClassSymbolImpl>? origin=null
