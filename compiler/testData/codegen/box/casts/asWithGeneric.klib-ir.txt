MODULE_FRAGMENT name:<main>
  FILE fqName:<root> fileName:/asWithGeneric.kt
    FUN name:test1 signature:/test1|test1(){0§<kotlin.Any?>}[0] visibility:public modality:FINAL <T> () returnType:T of <root>.test1
      TYPE_PARAMETER name:T index:0 variance: signature:[ /test1|test1(){0§<kotlin.Any?>}[0] <- Local[<TP>,0|TYPE_PARAMETER name:T index:0 variance: superTypes:[kotlin.Any?] reified:false] ] superTypes:[<unbound IrClassSymbolImpl>?] reified:false
      BLOCK_BODY
        RETURN type=<unbound IrClassSymbolImpl> from='public final fun test1 <T> (): T of <root>.test1 declared in <root>'
          TYPE_OP type=T of <root>.test1 origin=CAST typeOperand=T of <root>.test1
            CONST Null type=<unbound IrClassSymbolImpl>? value=null
    FUN name:test2 signature:/test2|test2(){0§<kotlin.Any?>}[0] visibility:public modality:FINAL <T> () returnType:T of <root>.test2
      TYPE_PARAMETER name:T index:0 variance: signature:[ /test2|test2(){0§<kotlin.Any?>}[0] <- Local[<TP>,0|TYPE_PARAMETER name:T index:0 variance: superTypes:[kotlin.Any?] reified:false] ] superTypes:[<unbound IrClassSymbolImpl>?] reified:false
      BLOCK_BODY
        VAR name:a type:<unbound IrClassSymbolImpl>? [val]
          CONST Null type=<unbound IrClassSymbolImpl>? value=null
        RETURN type=<unbound IrClassSymbolImpl> from='public final fun test2 <T> (): T of <root>.test2 declared in <root>'
          TYPE_OP type=T of <root>.test2 origin=CAST typeOperand=T of <root>.test2
            GET_VAR 'val a: <unbound IrClassSymbolImpl>? [val] declared in <root>.test2' type=<unbound IrClassSymbolImpl>? origin=null
    FUN name:test3 signature:/test3|test3(){0§<kotlin.Any>}[0] visibility:public modality:FINAL <T> () returnType:T of <root>.test3
      TYPE_PARAMETER name:T index:0 variance: signature:[ /test3|test3(){0§<kotlin.Any>}[0] <- Local[<TP>,0|TYPE_PARAMETER name:T index:0 variance: superTypes:[kotlin.Any?] reified:false] ] superTypes:[<unbound IrClassSymbolImpl>] reified:false
      BLOCK_BODY
        RETURN type=<unbound IrClassSymbolImpl> from='public final fun test3 <T> (): T of <root>.test3 declared in <root>'
          TYPE_OP type=T of <root>.test3 origin=CAST typeOperand=T of <root>.test3
            CONST Null type=<unbound IrClassSymbolImpl>? value=null
    FUN name:box signature:/box|box(){}[0] visibility:public modality:FINAL <> () returnType:<unbound IrClassSymbolImpl>
      BLOCK_BODY
        WHEN type=<unbound IrClassSymbolImpl> origin=IF
          BRANCH
            if: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=EXCLEQ
              $this: CALL 'public final fun EQEQ (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EXCLEQ
                arg0: CALL 'public final fun test1 <T> (): T of <root>.test1 declared in <root>' type=<unbound IrClassSymbolImpl>? origin=null
                  <T>: <unbound IrClassSymbolImpl>?
                arg1: CONST Null type=<unbound IrClassSymbolImpl>? value=null
            then: RETURN type=<unbound IrClassSymbolImpl> from='public final fun box (): <unbound IrClassSymbolImpl> declared in <root>'
              CONST String type=<unbound IrClassSymbolImpl> value="fail: test1"
        WHEN type=<unbound IrClassSymbolImpl> origin=IF
          BRANCH
            if: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=EXCLEQ
              $this: CALL 'public final fun EQEQ (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EXCLEQ
                arg0: CALL 'public final fun test2 <T> (): T of <root>.test2 declared in <root>' type=<unbound IrClassSymbolImpl>? origin=null
                  <T>: <unbound IrClassSymbolImpl>?
                arg1: CONST Null type=<unbound IrClassSymbolImpl>? value=null
            then: RETURN type=<unbound IrClassSymbolImpl> from='public final fun box (): <unbound IrClassSymbolImpl> declared in <root>'
              CONST String type=<unbound IrClassSymbolImpl> value="fail: test2"
        VAR name:result3 type:<unbound IrClassSymbolImpl> [var]
          CONST String type=<unbound IrClassSymbolImpl> value="fail"
        TYPE_OP type=<unbound IrClassSymbolImpl> origin=IMPLICIT_COERCION_TO_UNIT typeOperand=<unbound IrClassSymbolImpl>
          TRY type=<unbound IrClassSymbolImpl>
            try: BLOCK type=<unbound IrClassSymbolImpl> origin=null
              CALL 'public final fun test3 <T> (): T of <root>.test3 declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
                <T>: <unbound IrClassSymbolImpl>
            CATCH parameter=val e: <unbound IrClassSymbolImpl> [val] declared in <root>.box
              VAR CATCH_PARAMETER name:e type:<unbound IrClassSymbolImpl> [val]
              BLOCK type=<unbound IrClassSymbolImpl> origin=null
                SET_VAR 'var result3: <unbound IrClassSymbolImpl> [var] declared in <root>.box' type=<unbound IrClassSymbolImpl> origin=EQ
                  CONST String type=<unbound IrClassSymbolImpl> value="OK"
        WHEN type=<unbound IrClassSymbolImpl> origin=IF
          BRANCH
            if: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=EXCLEQ
              $this: CALL 'public final fun EQEQ (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EXCLEQ
                arg0: GET_VAR 'var result3: <unbound IrClassSymbolImpl> [var] declared in <root>.box' type=<unbound IrClassSymbolImpl> origin=null
                arg1: CONST String type=<unbound IrClassSymbolImpl> value="OK"
            then: RETURN type=<unbound IrClassSymbolImpl> from='public final fun box (): <unbound IrClassSymbolImpl> declared in <root>'
              CONST String type=<unbound IrClassSymbolImpl> value="fail: test3"
        RETURN type=<unbound IrClassSymbolImpl> from='public final fun box (): <unbound IrClassSymbolImpl> declared in <root>'
          CONST String type=<unbound IrClassSymbolImpl> value="OK"
