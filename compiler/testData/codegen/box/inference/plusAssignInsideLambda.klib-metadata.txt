library {
  // module name: <main>

  library fragment {
    // package name: <root>

    // class name: SendChannel

    public abstract interface SendChannel<in T#0 /* T */> : kotlin/Any {

      public abstract suspend fun send(value: T#0): kotlin/Unit
    }

    package {

      public final fun box(): kotlin/String

      public final inline suspend fun <T#0 /* T */> T#0.collect(action: kotlin/Function1<T#0, kotlin/Unit>): kotlin/Unit

      public final fun <T#0 /* T */> flux(block: @kotlin/ExtensionFunctionType suspend kotlin/Function2<SendChannel<T#0>, kotlin/coroutines/Continuation<kotlin/Unit>, kotlin/Any?>): kotlin/Unit

      public final fun test(): kotlin/Unit
    }
  }
}
