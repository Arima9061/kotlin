library {
  // module name: <main>

  library fragment {
    // package name: <root>

    // class name: Buildee
    // class name: ConcreteType
    // class name: TargetType

    public final class Buildee<T#0 /* TV */> : kotlin/Any {

      public constructor()

      public final fun setTypeVariableConsumerFunction(consumer: kotlin/Function1<T#0, kotlin/Unit>): kotlin/Unit

      public final fun setTypeVariableProducerFunction(producer: kotlin/Function0<T#0>): kotlin/Unit

      public final var typeVariableConsumer: kotlin/Function1<T#0, kotlin/Unit>
        public final get
        public final set

      public final var typeVariableProducer: kotlin/Function0<T#0>
        public final get
        public final set
    }

    public final class ConcreteType : kotlin/Any {

      public constructor()
    }

    public final class TargetType : kotlin/Any {

      public constructor()

      public final fun consumeConcreteType(value: ConcreteType): kotlin/Unit
    }

    package {

      public final fun box(): kotlin/String

      public final fun <T#0 /* PTV */> build(instructions: @kotlin/ExtensionFunctionType kotlin/Function1<Buildee<T#0>, kotlin/Unit>): Buildee<T#0>
    }
  }
}
