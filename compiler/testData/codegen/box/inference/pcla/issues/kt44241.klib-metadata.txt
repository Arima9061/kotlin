library {
  // module name: <main>

  library fragment {
    // package name: <root>

    // class name: A
    // class name: B
    // class name: Scope

    public final class A : kotlin/Any {

      public constructor()
    }

    public final class B<T#0 /* K */> : kotlin/Any {

      public constructor()
    }

    public final class Scope<T#0 /* K11 */, T#1 /* K22 */> : kotlin/Any {

      public constructor(key: T#0)

      public final fun emit(key: T#1): kotlin/Unit

      public final val key: T#0
        public final get
    }

    package {

      public final fun box(): kotlin/String

      public final fun run(x: B<A>): kotlin/Unit

      public final fun <T#0 /* K1 */, T#1 /* K2 */> B<T#0>.scoped(binder: @kotlin/ExtensionFunctionType kotlin/Function1<Scope<T#0, T#1>, kotlin/Unit>): kotlin/Unit
    }
  }
}
