library {
  // module name: <main>

  library fragment {
    // package name: <root>

    // class name: Buildee
    // class name: ConcreteType
    // class name: DifferentType
    // class name: TargetType

    public final class Buildee<T#0 /* TV */> : kotlin/Any {

      public constructor()

      public final fun letForTypeVariable(action: kotlin/Function1<T#0, ConcreteType>): ConcreteType

      public final fun setTypeVariable(value: T#0): kotlin/Unit

      private final var storage: T#0
        private final get
        private final set
    }

    public final class ConcreteType : kotlin/Any {

      public constructor()
    }

    public final class DifferentType : kotlin/Any {

      public constructor()
    }

    public final class TargetType : kotlin/Any {

      public constructor()
    }

    package {

      public final fun box(): kotlin/String

      public final fun <T#0 /* PTV */> build(instructions: @kotlin/ExtensionFunctionType kotlin/Function1<Buildee<T#0>, kotlin/Unit>): Buildee<T#0>

      public final fun DifferentType.extensionProduceConcreteType(): ConcreteType

      public final fun TargetType.extensionProduceConcreteType(): ConcreteType
    }
  }
}
