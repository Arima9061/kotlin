MODULE_FRAGMENT name:<main>
  FILE fqName:<root> fileName:/nestedNonExhaustiveIf.kt
    FUN name:box signature:/box|box(){}[0] visibility:public modality:FINAL <> () returnType:<unbound IrClassSymbolImpl>
      BLOCK_BODY
        VAR name:result type:<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> [val]
          CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> origin=null
            <1>: <unbound IrClassSymbolImpl>
            1: FUN_EXPR type=@[<unbound>] <unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>>, <unbound IrClassSymbolImpl>> origin=LAMBDA
              FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL <> ($receiver:<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>>) returnType:<unbound IrClassSymbolImpl>
                $receiver: VALUE_PARAMETER name:$this$buildList type:<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>>
                BLOCK_BODY
                  VAR name:index type:<unbound IrClassSymbolImpl> [var]
                    CONST Int type=<unbound IrClassSymbolImpl> value=0
                  WHILE label=null origin=WHILE_LOOP
                    condition: CALL 'public final fun lessOrEqual (arg0: <unbound IrClassSymbolImpl>, arg1: <unbound IrClassSymbolImpl>): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=LTEQ
                      arg0: GET_VAR 'var index: <unbound IrClassSymbolImpl> [var] declared in <root>.box.<anonymous>' type=<unbound IrClassSymbolImpl> origin=null
                      arg1: CONST Int type=<unbound IrClassSymbolImpl> value=10
                    body: BLOCK type=<unbound IrClassSymbolImpl> origin=null
                      WHEN type=<unbound IrClassSymbolImpl> origin=IF
                        BRANCH
                          if: CALL 'public final fun greater (arg0: <unbound IrClassSymbolImpl>, arg1: <unbound IrClassSymbolImpl>): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=GT
                            arg0: GET_VAR 'var index: <unbound IrClassSymbolImpl> [var] declared in <root>.box.<anonymous>' type=<unbound IrClassSymbolImpl> origin=null
                            arg1: CONST Int type=<unbound IrClassSymbolImpl> value=4
                          then: BLOCK type=<unbound IrClassSymbolImpl> origin=null
                            WHEN type=<unbound IrClassSymbolImpl> origin=IF
                              BRANCH
                                if: CALL 'public final fun EQEQ (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EQEQ
                                  arg0: GET_VAR 'var index: <unbound IrClassSymbolImpl> [var] declared in <root>.box.<anonymous>' type=<unbound IrClassSymbolImpl> origin=null
                                  arg1: CONST Int type=<unbound IrClassSymbolImpl> value=5
                                then: BREAK label=null loop.label=null
                        BRANCH
                          if: CONST Boolean type=<unbound IrClassSymbolImpl> value=true
                          then: BLOCK type=<unbound IrClassSymbolImpl> origin=null
                            WHEN type=<unbound IrClassSymbolImpl> origin=IF
                              BRANCH
                                if: CALL 'public final fun EQEQ (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EQEQ
                                  arg0: GET_VAR 'var index: <unbound IrClassSymbolImpl> [var] declared in <root>.box.<anonymous>' type=<unbound IrClassSymbolImpl> origin=null
                                  arg1: CONST Int type=<unbound IrClassSymbolImpl> value=3
                                then: BREAK label=null loop.label=null
                      TYPE_OP type=<unbound IrClassSymbolImpl> origin=IMPLICIT_COERCION_TO_UNIT typeOperand=<unbound IrClassSymbolImpl>
                        CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
                          $this: GET_VAR '$this$buildList: <unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> declared in <root>.box.<anonymous>' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> origin=null
                          1: GET_VAR 'var index: <unbound IrClassSymbolImpl> [var] declared in <root>.box.<anonymous>' type=<unbound IrClassSymbolImpl> origin=null
                      TYPE_OP type=<unbound IrClassSymbolImpl> origin=IMPLICIT_COERCION_TO_UNIT typeOperand=<unbound IrClassSymbolImpl>
                        BLOCK type=<unbound IrClassSymbolImpl> origin=POSTFIX_INCR
                          VAR IR_TEMPORARY_VARIABLE name:<unary> type:<unbound IrClassSymbolImpl> [val]
                            GET_VAR 'var index: <unbound IrClassSymbolImpl> [var] declared in <root>.box.<anonymous>' type=<unbound IrClassSymbolImpl> origin=POSTFIX_INCR
                          SET_VAR 'var index: <unbound IrClassSymbolImpl> [var] declared in <root>.box.<anonymous>' type=<unbound IrClassSymbolImpl> origin=POSTFIX_INCR
                            CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=POSTFIX_INCR
                              $this: GET_VAR 'val <unary>: <unbound IrClassSymbolImpl> [val] declared in <root>.box.<anonymous>' type=<unbound IrClassSymbolImpl> origin=null
                          GET_VAR 'val <unary>: <unbound IrClassSymbolImpl> [val] declared in <root>.box.<anonymous>' type=<unbound IrClassSymbolImpl> origin=null
        CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
          <1>: <unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>>
          1: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> origin=null
            <1>: <unbound IrClassSymbolImpl>
            1: VARARG type=<unbound IrClassSymbolImpl><out <unbound IrClassSymbolImpl>> varargElementType=<unbound IrClassSymbolImpl>
              CONST Int type=<unbound IrClassSymbolImpl> value=0
              CONST Int type=<unbound IrClassSymbolImpl> value=1
              CONST Int type=<unbound IrClassSymbolImpl> value=2
          2: GET_VAR 'val result: <unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> [val] declared in <root>.box' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> origin=null
        RETURN type=<unbound IrClassSymbolImpl> from='public final fun box (): <unbound IrClassSymbolImpl> declared in <root>'
          CONST String type=<unbound IrClassSymbolImpl> value="OK"
