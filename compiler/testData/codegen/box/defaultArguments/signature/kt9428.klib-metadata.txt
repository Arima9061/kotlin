library {
  // module name: <main>

  library fragment {
    // package name: <root>

    // class name: Game
    // class name: Player
    // class name: SimpleGame
    // class name: SlashPlayer

    public abstract class Game<T#0 /* T */ : Player> : kotlin/Any {

      public constructor()

      public abstract fun getPlayer(name: kotlin/String, create: kotlin/Boolean /* = ... */): T#0?
    }

    public open class Player : kotlin/Any {

      public constructor(name: kotlin/String)

      public final val name: kotlin/String
        public final get
    }

    public final class SimpleGame : Game<SlashPlayer> {

      public constructor()

      public open fun getPlayer(name: kotlin/String, create: kotlin/Boolean): SlashPlayer?
    }

    public open class SlashPlayer : Player {

      public constructor(name: kotlin/String)
    }

    package {

      public final fun box(): kotlin/String
    }
  }
}
