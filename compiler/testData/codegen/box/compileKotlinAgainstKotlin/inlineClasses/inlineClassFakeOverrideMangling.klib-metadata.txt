// MODULE: lib
library {
  // module name: <lib>

  library fragment {
    // package name: <root>

    // class name: A
    // class name: C
    // class name: D
    // class name: IC

    public abstract class A : kotlin/Any {

      public constructor()

      public final fun foo(s: kotlin/String): IC
    }

    public open class C : A {

      public constructor()
    }

    public final class D : C {

      public constructor()
    }

    public final value class IC : kotlin/Any {

      public constructor(s: kotlin/String)

      public open /* synthesized */ operator fun equals(other: kotlin/Any?): kotlin/Boolean

      public open /* synthesized */ fun hashCode(): kotlin/Int

      public open /* synthesized */ fun toString(): kotlin/String

      public final val s: kotlin/String
        public final get

      // underlying property: s

      // underlying type: kotlin/String
    }
  }
}

// MODULE: main
library {
  // module name: <main>

  library fragment {
    // package name: <root>

    package {

      public final fun box(): kotlin/String
    }
  }
}
