// MODULE: lib
library {
  // module name: <lib>

  library fragment {
    // package name: test

    // class name: test/IC

    public final value class test/IC : kotlin/Any {

      public constructor(s: kotlin/String)

      public open /* synthesized */ operator fun equals(other: kotlin/Any?): kotlin/Boolean

      public open /* synthesized */ fun hashCode(): kotlin/Int

      public open /* synthesized */ fun toString(): kotlin/String

      public final val s: kotlin/String
        public final get

      // underlying property: s

      // underlying type: kotlin/String
    }

    package {

      public final fun ordinary(s: kotlin/String, ic: test/IC): kotlin/String

      public final suspend fun suspend(s: kotlin/String, ic: test/IC): kotlin/String
    }
  }
}

// MODULE: main
library {
  // module name: <main>

  library fragment {
    // package name: <root>

    package {

      public final fun box(): kotlin/String

      public final fun builder(c: suspend kotlin/Function1<kotlin/coroutines/Continuation<kotlin/Unit>, kotlin/Any?>): kotlin/Unit
    }
  }
}
