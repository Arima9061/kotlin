// MODULE: lib
library {
  // module name: <lib>

  library fragment {
    // package name: lib

    // class name: lib/Inv

    public final class lib/Inv<T#0 /* K */> : kotlin/Any {

      public constructor()
    }

    package {

      public final fun <T#0 /* U */> materialize(): lib/Inv<lib/Inv<T#0> /* = lib/A^<T#0> */>? /* = lib/B^<T#0>? */

      public typealias A<T#0 /* V */> = lib/Inv<T#0> /* = lib/Inv<T#0> */

      public typealias B<T#0 /* T */> = lib/Inv<lib/Inv<T#0> /* = lib/A^<T#0> */> /* = lib/Inv<lib/Inv<T#0> /* = lib/A^<T#0> */> */
    }
  }
}

// MODULE: main
library {
  // module name: <main>

  library fragment {
    // package name: <root>

    package {

      public final fun box(): kotlin/String
    }
  }
}
