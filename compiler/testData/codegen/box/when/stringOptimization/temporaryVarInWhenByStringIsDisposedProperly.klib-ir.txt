MODULE_FRAGMENT name:<main>
  FILE fqName:<root> fileName:/temporaryVarInWhenByStringIsDisposedProperly.kt
    PROPERTY name:name signature:/name|@kotlin.String{}name[0] visibility:public modality:FINAL [val]
      FUN name:<get-name> signature:/name.<get-name>|<get-name>@kotlin.String(){}[0] visibility:public modality:FINAL <> ($receiver:<unbound IrClassSymbolImpl>) returnType:<unbound IrClassSymbolImpl>
        correspondingProperty: PROPERTY name:name signature:/name|@kotlin.String{}name[0] visibility:public modality:FINAL [val]
        $receiver: VALUE_PARAMETER name:<this> type:<unbound IrClassSymbolImpl>
        BLOCK_BODY
          RETURN type=<unbound IrClassSymbolImpl> from='public final fun <get-name> (): <unbound IrClassSymbolImpl> declared in <root>'
            GET_VAR '<this>: <unbound IrClassSymbolImpl> declared in <root>.<get-name>' type=<unbound IrClassSymbolImpl> origin=null
    FUN name:normalize signature:/normalize|normalize@kotlin.collections.List<kotlin.String>(){}[0] visibility:public modality:FINAL <> ($receiver:<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>>) returnType:<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>>
      $receiver: VALUE_PARAMETER name:<this> type:<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>>
      BLOCK_BODY
        VAR name:list type:<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> [val]
          CONSTRUCTOR_CALL 'UNBOUND IrConstructorSymbolImpl' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> origin=null
            <class: 1>: <unbound IrClassSymbolImpl>
        BLOCK type=<unbound IrClassSymbolImpl> origin=FOR_LOOP
          VAR FOR_LOOP_ITERATOR name:<iterator> type:<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> [val]
            CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> origin=FOR_LOOP_ITERATOR
              $this: GET_VAR '<this>: <unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> declared in <root>.normalize' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> origin=null
          WHILE label=null origin=FOR_LOOP_INNER_WHILE
            condition: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=FOR_LOOP_HAS_NEXT
              $this: GET_VAR 'val <iterator>: <unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> [val] declared in <root>.normalize' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> origin=null
            body: BLOCK type=<unbound IrClassSymbolImpl> origin=FOR_LOOP_INNER_WHILE
              VAR FOR_LOOP_VARIABLE name:str type:<unbound IrClassSymbolImpl> [val]
                CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=FOR_LOOP_NEXT
                  $this: GET_VAR 'val <iterator>: <unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> [val] declared in <root>.normalize' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> origin=null
              TYPE_OP type=<unbound IrClassSymbolImpl> origin=IMPLICIT_COERCION_TO_UNIT typeOperand=<unbound IrClassSymbolImpl>
                BLOCK type=<unbound IrClassSymbolImpl> origin=null
                  BLOCK type=<unbound IrClassSymbolImpl> origin=WHEN
                    VAR IR_TEMPORARY_VARIABLE name:tmp0_subject type:<unbound IrClassSymbolImpl> [val]
                      CALL 'public final fun <get-name> (): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=GET_PROPERTY
                        $receiver: GET_VAR 'val str: <unbound IrClassSymbolImpl> [val] declared in <root>.normalize' type=<unbound IrClassSymbolImpl> origin=null
                    WHEN type=<unbound IrClassSymbolImpl> origin=WHEN
                      BRANCH
                        if: CALL 'public final fun EQEQ (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EQEQ
                          arg0: GET_VAR 'val tmp0_subject: <unbound IrClassSymbolImpl> [val] declared in <root>.normalize' type=<unbound IrClassSymbolImpl> origin=null
                          arg1: CONST String type=<unbound IrClassSymbolImpl> value="."
                        then: BLOCK type=<unbound IrClassSymbolImpl> origin=null
                      BRANCH
                        if: CALL 'public final fun EQEQ (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EQEQ
                          arg0: GET_VAR 'val tmp0_subject: <unbound IrClassSymbolImpl> [val] declared in <root>.normalize' type=<unbound IrClassSymbolImpl> origin=null
                          arg1: CONST String type=<unbound IrClassSymbolImpl> value=".."
                        then: WHEN type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> origin=IF
                          BRANCH
                            if: WHEN type=<unbound IrClassSymbolImpl> origin=ANDAND
                              BRANCH
                                if: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
                                  $this: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
                                    $this: GET_VAR 'val list: <unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> [val] declared in <root>.normalize' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> origin=null
                                then: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=EXCLEQ
                                  $this: CALL 'public final fun EQEQ (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EXCLEQ
                                    arg0: CALL 'public final fun <get-name> (): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=GET_PROPERTY
                                      $receiver: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
                                        <1>: <unbound IrClassSymbolImpl>
                                        $receiver: GET_VAR 'val list: <unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> [val] declared in <root>.normalize' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> origin=null
                                    arg1: CONST String type=<unbound IrClassSymbolImpl> value=".."
                              BRANCH
                                if: CONST Boolean type=<unbound IrClassSymbolImpl> value=true
                                then: CONST Boolean type=<unbound IrClassSymbolImpl> value=false
                            then: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
                              $this: GET_VAR 'val list: <unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> [val] declared in <root>.normalize' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> origin=null
                              1: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=MINUS
                                $this: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=GET_PROPERTY
                                  $this: GET_VAR 'val list: <unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> [val] declared in <root>.normalize' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> origin=null
                                1: CONST Int type=<unbound IrClassSymbolImpl> value=1
                          BRANCH
                            if: CONST Boolean type=<unbound IrClassSymbolImpl> value=true
                            then: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
                              $this: GET_VAR 'val list: <unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> [val] declared in <root>.normalize' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> origin=null
                              1: GET_VAR 'val str: <unbound IrClassSymbolImpl> [val] declared in <root>.normalize' type=<unbound IrClassSymbolImpl> origin=null
                      BRANCH
                        if: CONST Boolean type=<unbound IrClassSymbolImpl> value=true
                        then: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
                          $this: GET_VAR 'val list: <unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> [val] declared in <root>.normalize' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> origin=null
                          1: GET_VAR 'val str: <unbound IrClassSymbolImpl> [val] declared in <root>.normalize' type=<unbound IrClassSymbolImpl> origin=null
        RETURN type=<unbound IrClassSymbolImpl> from='public final fun normalize (): <unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> declared in <root>'
          GET_VAR 'val list: <unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> [val] declared in <root>.normalize' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> origin=null
    FUN name:box signature:/box|box(){}[0] visibility:public modality:FINAL <> () returnType:<unbound IrClassSymbolImpl>
      BLOCK_BODY
        VAR name:xs type:<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> [val]
          CALL 'public final fun normalize (): <unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> declared in <root>' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> origin=null
            $receiver: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> origin=null
              <1>: <unbound IrClassSymbolImpl>
              1: VARARG type=<unbound IrClassSymbolImpl><out <unbound IrClassSymbolImpl>> varargElementType=<unbound IrClassSymbolImpl>
                CONST String type=<unbound IrClassSymbolImpl> value="a"
                CONST String type=<unbound IrClassSymbolImpl> value="b"
                CONST String type=<unbound IrClassSymbolImpl> value="."
                CONST String type=<unbound IrClassSymbolImpl> value=".."
        WHEN type=<unbound IrClassSymbolImpl> origin=IF
          BRANCH
            if: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=EXCLEQ
              $this: CALL 'public final fun EQEQ (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EXCLEQ
                arg0: GET_VAR 'val xs: <unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> [val] declared in <root>.box' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> origin=null
                arg1: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> origin=null
                  <1>: <unbound IrClassSymbolImpl>
                  1: CONST String type=<unbound IrClassSymbolImpl> value="a"
            then: RETURN type=<unbound IrClassSymbolImpl> from='public final fun box (): <unbound IrClassSymbolImpl> declared in <root>'
              STRING_CONCATENATION type=<unbound IrClassSymbolImpl>
                CONST String type=<unbound IrClassSymbolImpl> value="Fail: "
                GET_VAR 'val xs: <unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> [val] declared in <root>.box' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> origin=null
        RETURN type=<unbound IrClassSymbolImpl> from='public final fun box (): <unbound IrClassSymbolImpl> declared in <root>'
          CONST String type=<unbound IrClassSymbolImpl> value="OK"
