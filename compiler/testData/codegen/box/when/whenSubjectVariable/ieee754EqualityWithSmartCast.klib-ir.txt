MODULE_FRAGMENT name:<main>
  FILE fqName:<root> fileName:/ieee754EqualityWithSmartCast.kt
    PROPERTY name:az signature:/az|{}az[0] visibility:public modality:FINAL [val]
      FIELD PROPERTY_BACKING_FIELD name:az signature:[ /az|{}az[0] <- Local[<BF>|FIELD PROPERTY_BACKING_FIELD name:az type:kotlin.Any visibility:private [final,static]] ] type:<unbound IrClassSymbolImpl> visibility:private [final,static]
        EXPRESSION_BODY
          CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
            $this: CONST Double type=<unbound IrClassSymbolImpl> value=0.0
      FUN DEFAULT_PROPERTY_ACCESSOR name:<get-az> signature:/az.<get-az>|<get-az>(){}[0] visibility:public modality:FINAL <> () returnType:<unbound IrClassSymbolImpl>
        correspondingProperty: PROPERTY name:az signature:/az|{}az[0] visibility:public modality:FINAL [val]
        BLOCK_BODY
          RETURN type=<unbound IrClassSymbolImpl> from='public final fun <get-az> (): <unbound IrClassSymbolImpl> declared in <root>'
            GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:az signature:[ /az|{}az[0] <- Local[<BF>|FIELD PROPERTY_BACKING_FIELD name:az type:kotlin.Any visibility:private [final,static]] ] type:<unbound IrClassSymbolImpl> visibility:private [final,static]' type=<unbound IrClassSymbolImpl> origin=null
    PROPERTY name:afz signature:/afz|{}afz[0] visibility:public modality:FINAL [val]
      FIELD PROPERTY_BACKING_FIELD name:afz signature:[ /afz|{}afz[0] <- Local[<BF>|FIELD PROPERTY_BACKING_FIELD name:az type:kotlin.Any visibility:private [final,static]] ] type:<unbound IrClassSymbolImpl> visibility:private [final,static]
        EXPRESSION_BODY
          CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
            $this: CONST Float type=<unbound IrClassSymbolImpl> value=0.0
      FUN DEFAULT_PROPERTY_ACCESSOR name:<get-afz> signature:/afz.<get-afz>|<get-afz>(){}[0] visibility:public modality:FINAL <> () returnType:<unbound IrClassSymbolImpl>
        correspondingProperty: PROPERTY name:afz signature:/afz|{}afz[0] visibility:public modality:FINAL [val]
        BLOCK_BODY
          RETURN type=<unbound IrClassSymbolImpl> from='public final fun <get-afz> (): <unbound IrClassSymbolImpl> declared in <root>'
            GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:afz signature:[ /afz|{}afz[0] <- Local[<BF>|FIELD PROPERTY_BACKING_FIELD name:az type:kotlin.Any visibility:private [final,static]] ] type:<unbound IrClassSymbolImpl> visibility:private [final,static]' type=<unbound IrClassSymbolImpl> origin=null
    FUN name:box signature:/box|box(){}[0] visibility:public modality:FINAL <> () returnType:<unbound IrClassSymbolImpl>
      BLOCK_BODY
        VAR name:y type:<unbound IrClassSymbolImpl> [val]
          CALL 'public final fun <get-az> (): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=GET_PROPERTY
        BLOCK type=<unbound IrClassSymbolImpl> origin=WHEN
          VAR IR_TEMPORARY_VARIABLE name:tmp0_subject type:<unbound IrClassSymbolImpl> [val]
            GET_VAR 'val y: <unbound IrClassSymbolImpl> [val] declared in <root>.box' type=<unbound IrClassSymbolImpl> origin=null
          WHEN type=<unbound IrClassSymbolImpl> origin=WHEN
            BRANCH
              if: TYPE_OP type=<unbound IrClassSymbolImpl> origin=NOT_INSTANCEOF typeOperand=<unbound IrClassSymbolImpl>
                GET_VAR 'val tmp0_subject: <unbound IrClassSymbolImpl> [val] declared in <root>.box' type=<unbound IrClassSymbolImpl> origin=null
              then: THROW type=<unbound IrClassSymbolImpl>
                CONSTRUCTOR_CALL 'UNBOUND IrConstructorSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
            BRANCH
              if: CALL 'public final fun ieee754equals (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EQEQ
                arg0: TYPE_OP type=<unbound IrClassSymbolImpl> origin=IMPLICIT_CAST typeOperand=<unbound IrClassSymbolImpl>
                  GET_VAR 'val tmp0_subject: <unbound IrClassSymbolImpl> [val] declared in <root>.box' type=<unbound IrClassSymbolImpl> origin=null
                arg1: CONST Double type=<unbound IrClassSymbolImpl> value=0.0
              then: BLOCK type=<unbound IrClassSymbolImpl> origin=null
            BRANCH
              if: CONST Boolean type=<unbound IrClassSymbolImpl> value=true
              then: THROW type=<unbound IrClassSymbolImpl>
                CONSTRUCTOR_CALL 'UNBOUND IrConstructorSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
        VAR name:yy type:<unbound IrClassSymbolImpl> [val]
          CALL 'public final fun <get-afz> (): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=GET_PROPERTY
        BLOCK type=<unbound IrClassSymbolImpl> origin=WHEN
          VAR IR_TEMPORARY_VARIABLE name:tmp1_subject type:<unbound IrClassSymbolImpl> [val]
            GET_VAR 'val yy: <unbound IrClassSymbolImpl> [val] declared in <root>.box' type=<unbound IrClassSymbolImpl> origin=null
          WHEN type=<unbound IrClassSymbolImpl> origin=WHEN
            BRANCH
              if: TYPE_OP type=<unbound IrClassSymbolImpl> origin=NOT_INSTANCEOF typeOperand=<unbound IrClassSymbolImpl>
                GET_VAR 'val tmp1_subject: <unbound IrClassSymbolImpl> [val] declared in <root>.box' type=<unbound IrClassSymbolImpl> origin=null
              then: THROW type=<unbound IrClassSymbolImpl>
                CONSTRUCTOR_CALL 'UNBOUND IrConstructorSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
            BRANCH
              if: CALL 'public final fun ieee754equals (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EQEQ
                arg0: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
                  $this: TYPE_OP type=<unbound IrClassSymbolImpl> origin=IMPLICIT_CAST typeOperand=<unbound IrClassSymbolImpl>
                    GET_VAR 'val tmp1_subject: <unbound IrClassSymbolImpl> [val] declared in <root>.box' type=<unbound IrClassSymbolImpl> origin=null
                arg1: CONST Double type=<unbound IrClassSymbolImpl> value=0.0
              then: BLOCK type=<unbound IrClassSymbolImpl> origin=null
            BRANCH
              if: CONST Boolean type=<unbound IrClassSymbolImpl> value=true
              then: THROW type=<unbound IrClassSymbolImpl>
                CONSTRUCTOR_CALL 'UNBOUND IrConstructorSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
        TYPE_OP type=<unbound IrClassSymbolImpl> origin=IMPLICIT_COERCION_TO_UNIT typeOperand=<unbound IrClassSymbolImpl>
          CALL 'public final fun testDoubleAsUpperBound <T> (v: T of <root>.testDoubleAsUpperBound): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
            <T>: <unbound IrClassSymbolImpl>
            v: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
              $this: CONST Double type=<unbound IrClassSymbolImpl> value=0.0
        RETURN type=<unbound IrClassSymbolImpl> from='public final fun box (): <unbound IrClassSymbolImpl> declared in <root>'
          CONST String type=<unbound IrClassSymbolImpl> value="OK"
    FUN name:testDoubleAsUpperBound signature:/testDoubleAsUpperBound|testDoubleAsUpperBound(0:0){0ยง<kotlin.Double>}[0] visibility:public modality:FINAL <T> (v:T of <root>.testDoubleAsUpperBound) returnType:<unbound IrClassSymbolImpl>
      TYPE_PARAMETER name:T index:0 variance: signature:[ /testDoubleAsUpperBound|testDoubleAsUpperBound(0:0){0ยง<kotlin.Double>}[0] <- Local[<TP>,0|TYPE_PARAMETER name:T index:0 variance: superTypes:[kotlin.Double] reified:false] ] superTypes:[<unbound IrClassSymbolImpl>] reified:false
      VALUE_PARAMETER name:v index:0 type:T of <root>.testDoubleAsUpperBound
      BLOCK_BODY
        RETURN type=<unbound IrClassSymbolImpl> from='public final fun testDoubleAsUpperBound <T> (v: T of <root>.testDoubleAsUpperBound): <unbound IrClassSymbolImpl> declared in <root>'
          BLOCK type=<unbound IrClassSymbolImpl> origin=WHEN
            VAR name:a type:<unbound IrClassSymbolImpl> [val]
              CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=MUL
                $this: GET_VAR 'v: T of <root>.testDoubleAsUpperBound declared in <root>.testDoubleAsUpperBound' type=T of <root>.testDoubleAsUpperBound origin=null
                1: GET_VAR 'v: T of <root>.testDoubleAsUpperBound declared in <root>.testDoubleAsUpperBound' type=T of <root>.testDoubleAsUpperBound origin=null
            WHEN type=<unbound IrClassSymbolImpl> origin=WHEN
              BRANCH
                if: CALL 'public final fun ieee754equals (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EQEQ
                  arg0: GET_VAR 'val a: <unbound IrClassSymbolImpl> [val] declared in <root>.testDoubleAsUpperBound' type=<unbound IrClassSymbolImpl> origin=null
                  arg1: CONST Double type=<unbound IrClassSymbolImpl> value=0.0
                then: CONST Boolean type=<unbound IrClassSymbolImpl> value=true
              BRANCH
                if: CONST Boolean type=<unbound IrClassSymbolImpl> value=true
                then: THROW type=<unbound IrClassSymbolImpl>
                  CONSTRUCTOR_CALL 'UNBOUND IrConstructorSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
