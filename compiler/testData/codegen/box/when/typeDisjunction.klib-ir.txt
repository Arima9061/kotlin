MODULE_FRAGMENT name:<main>
  FILE fqName:<root> fileName:/typeDisjunction.kt
    FUN name:foo signature:/foo|foo(kotlin.Any){}[0] visibility:public modality:FINAL <> (s:<unbound IrClassSymbolImpl>) returnType:<unbound IrClassSymbolImpl>
      VALUE_PARAMETER name:s index:0 type:<unbound IrClassSymbolImpl>
      BLOCK_BODY
        VAR name:x type:<unbound IrClassSymbolImpl> [val]
          BLOCK type=<unbound IrClassSymbolImpl> origin=WHEN
            VAR IR_TEMPORARY_VARIABLE name:tmp0_subject type:<unbound IrClassSymbolImpl> [val]
              GET_VAR 's: <unbound IrClassSymbolImpl> declared in <root>.foo' type=<unbound IrClassSymbolImpl> origin=null
            WHEN type=<unbound IrClassSymbolImpl> origin=WHEN
              BRANCH
                if: TYPE_OP type=<unbound IrClassSymbolImpl> origin=INSTANCEOF typeOperand=<unbound IrClassSymbolImpl>
                  GET_VAR 'val tmp0_subject: <unbound IrClassSymbolImpl> [val] declared in <root>.foo' type=<unbound IrClassSymbolImpl> origin=null
                then: TYPE_OP type=<unbound IrClassSymbolImpl> origin=IMPLICIT_CAST typeOperand=<unbound IrClassSymbolImpl>
                  GET_VAR 's: <unbound IrClassSymbolImpl> declared in <root>.foo' type=<unbound IrClassSymbolImpl> origin=null
              BRANCH
                if: TYPE_OP type=<unbound IrClassSymbolImpl> origin=INSTANCEOF typeOperand=<unbound IrClassSymbolImpl>
                  GET_VAR 'val tmp0_subject: <unbound IrClassSymbolImpl> [val] declared in <root>.foo' type=<unbound IrClassSymbolImpl> origin=null
                then: STRING_CONCATENATION type=<unbound IrClassSymbolImpl>
                  TYPE_OP type=<unbound IrClassSymbolImpl> origin=IMPLICIT_CAST typeOperand=<unbound IrClassSymbolImpl>
                    GET_VAR 's: <unbound IrClassSymbolImpl> declared in <root>.foo' type=<unbound IrClassSymbolImpl> origin=null
              BRANCH
                if: CONST Boolean type=<unbound IrClassSymbolImpl> value=true
                then: RETURN type=<unbound IrClassSymbolImpl> from='public final fun foo (s: <unbound IrClassSymbolImpl>): <unbound IrClassSymbolImpl> declared in <root>'
                  CONST String type=<unbound IrClassSymbolImpl> value=""
        VAR name:y type:<unbound IrClassSymbolImpl> [val]
          GET_VAR 'val x: <unbound IrClassSymbolImpl> [val] declared in <root>.foo' type=<unbound IrClassSymbolImpl> origin=null
        RETURN type=<unbound IrClassSymbolImpl> from='public final fun foo (s: <unbound IrClassSymbolImpl>): <unbound IrClassSymbolImpl> declared in <root>'
          GET_VAR 'val y: <unbound IrClassSymbolImpl> [val] declared in <root>.foo' type=<unbound IrClassSymbolImpl> origin=null
    FUN name:box signature:/box|box(){}[0] visibility:public modality:FINAL <> () returnType:<unbound IrClassSymbolImpl>
      BLOCK_BODY
        RETURN type=<unbound IrClassSymbolImpl> from='public final fun box (): <unbound IrClassSymbolImpl> declared in <root>'
          WHEN type=<unbound IrClassSymbolImpl> origin=IF
            BRANCH
              if: WHEN type=<unbound IrClassSymbolImpl> origin=ANDAND
                BRANCH
                  if: WHEN type=<unbound IrClassSymbolImpl> origin=ANDAND
                    BRANCH
                      if: CALL 'public final fun EQEQ (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EQEQ
                        arg0: CALL 'public final fun foo (s: <unbound IrClassSymbolImpl>): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
                          s: CONST String type=<unbound IrClassSymbolImpl> value="OK"
                        arg1: CONST String type=<unbound IrClassSymbolImpl> value="OK"
                      then: CALL 'public final fun EQEQ (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EQEQ
                        arg0: CALL 'public final fun foo (s: <unbound IrClassSymbolImpl>): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
                          s: CONST Int type=<unbound IrClassSymbolImpl> value=42
                        arg1: CONST String type=<unbound IrClassSymbolImpl> value="42"
                    BRANCH
                      if: CONST Boolean type=<unbound IrClassSymbolImpl> value=true
                      then: CONST Boolean type=<unbound IrClassSymbolImpl> value=false
                  then: CALL 'public final fun EQEQ (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EQEQ
                    arg0: CALL 'public final fun foo (s: <unbound IrClassSymbolImpl>): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
                      s: CONST Boolean type=<unbound IrClassSymbolImpl> value=true
                    arg1: CONST String type=<unbound IrClassSymbolImpl> value=""
                BRANCH
                  if: CONST Boolean type=<unbound IrClassSymbolImpl> value=true
                  then: CONST Boolean type=<unbound IrClassSymbolImpl> value=false
              then: CONST String type=<unbound IrClassSymbolImpl> value="OK"
            BRANCH
              if: CONST Boolean type=<unbound IrClassSymbolImpl> value=true
              then: CONST String type=<unbound IrClassSymbolImpl> value="Fail"
