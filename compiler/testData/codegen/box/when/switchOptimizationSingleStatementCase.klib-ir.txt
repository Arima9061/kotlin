MODULE_FRAGMENT name:<main>
  FILE fqName:<root> fileName:/switchOptimizationSingleStatementCase.kt
    FUN name:test1 signature:/test1|test1(kotlin.Int){}[0] visibility:public modality:FINAL <> (v:<unbound IrClassSymbolImpl>) returnType:<unbound IrClassSymbolImpl>
      VALUE_PARAMETER name:v index:0 type:<unbound IrClassSymbolImpl>
      BLOCK_BODY
        BLOCK type=<unbound IrClassSymbolImpl> origin=WHEN
          VAR IR_TEMPORARY_VARIABLE name:tmp0_subject type:<unbound IrClassSymbolImpl> [val]
            GET_VAR 'v: <unbound IrClassSymbolImpl> declared in <root>.test1' type=<unbound IrClassSymbolImpl> origin=null
          WHEN type=<unbound IrClassSymbolImpl> origin=WHEN
            BRANCH
              if: WHEN type=<unbound IrClassSymbolImpl> origin=OROR
                BRANCH
                  if: CALL 'public final fun EQEQ (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EQEQ
                    arg0: GET_VAR 'val tmp0_subject: <unbound IrClassSymbolImpl> [val] declared in <root>.test1' type=<unbound IrClassSymbolImpl> origin=null
                    arg1: CONST Int type=<unbound IrClassSymbolImpl> value=1
                  then: CONST Boolean type=<unbound IrClassSymbolImpl> value=true
                BRANCH
                  if: CONST Boolean type=<unbound IrClassSymbolImpl> value=true
                  then: CALL 'public final fun EQEQ (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EQEQ
                    arg0: GET_VAR 'val tmp0_subject: <unbound IrClassSymbolImpl> [val] declared in <root>.test1' type=<unbound IrClassSymbolImpl> origin=null
                    arg1: CONST Int type=<unbound IrClassSymbolImpl> value=2
              then: GET_OBJECT 'UNBOUND IrClassSymbolImpl' type=<unbound IrClassSymbolImpl>
    FUN name:test2 signature:/test2|test2(kotlin.Int){}[0] visibility:public modality:FINAL <> (v:<unbound IrClassSymbolImpl>) returnType:<unbound IrClassSymbolImpl>
      VALUE_PARAMETER name:v index:0 type:<unbound IrClassSymbolImpl>
      BLOCK_BODY
        WHILE label=loop origin=WHILE_LOOP
          condition: CONST Boolean type=<unbound IrClassSymbolImpl> value=true
          body: BLOCK type=<unbound IrClassSymbolImpl> origin=null
            BLOCK type=<unbound IrClassSymbolImpl> origin=WHEN
              VAR IR_TEMPORARY_VARIABLE name:tmp0_subject type:<unbound IrClassSymbolImpl> [val]
                GET_VAR 'v: <unbound IrClassSymbolImpl> declared in <root>.test2' type=<unbound IrClassSymbolImpl> origin=null
              WHEN type=<unbound IrClassSymbolImpl> origin=WHEN
                BRANCH
                  if: WHEN type=<unbound IrClassSymbolImpl> origin=OROR
                    BRANCH
                      if: CALL 'public final fun EQEQ (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EQEQ
                        arg0: GET_VAR 'val tmp0_subject: <unbound IrClassSymbolImpl> [val] declared in <root>.test2' type=<unbound IrClassSymbolImpl> origin=null
                        arg1: CONST Int type=<unbound IrClassSymbolImpl> value=1
                      then: CONST Boolean type=<unbound IrClassSymbolImpl> value=true
                    BRANCH
                      if: CONST Boolean type=<unbound IrClassSymbolImpl> value=true
                      then: CALL 'public final fun EQEQ (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EQEQ
                        arg0: GET_VAR 'val tmp0_subject: <unbound IrClassSymbolImpl> [val] declared in <root>.test2' type=<unbound IrClassSymbolImpl> origin=null
                        arg1: CONST Int type=<unbound IrClassSymbolImpl> value=2
                  then: BREAK label=loop loop.label=loop
    FUN name:box signature:/box|box(){}[0] visibility:public modality:FINAL <> () returnType:<unbound IrClassSymbolImpl>
      BLOCK_BODY
        CALL 'public final fun test1 (v: <unbound IrClassSymbolImpl>): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
          v: CONST Int type=<unbound IrClassSymbolImpl> value=1
        CALL 'public final fun test2 (v: <unbound IrClassSymbolImpl>): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
          v: CONST Int type=<unbound IrClassSymbolImpl> value=1
        RETURN type=<unbound IrClassSymbolImpl> from='public final fun box (): <unbound IrClassSymbolImpl> declared in <root>'
          CONST String type=<unbound IrClassSymbolImpl> value="OK"
