MODULE_FRAGMENT name:<main>
  FILE fqName:<root> fileName:/intersectingVariableRangeInFinally.kt
    FUN name:box signature:/box|box(){}[0] visibility:public modality:FINAL <> () returnType:<unbound IrClassSymbolImpl>
      BLOCK_BODY
        TRY type=<unbound IrClassSymbolImpl>
          try: BLOCK type=<unbound IrClassSymbolImpl> origin=null
            RETURN type=<unbound IrClassSymbolImpl> from='public final fun box (): <unbound IrClassSymbolImpl> declared in <root>'
              CONST String type=<unbound IrClassSymbolImpl> value="OK"
          finally: BLOCK type=<unbound IrClassSymbolImpl> origin=null
            WHEN type=<unbound IrClassSymbolImpl> origin=IF
              BRANCH
                if: CALL 'public final fun EQEQ (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EQEQ
                  arg0: CONST Int type=<unbound IrClassSymbolImpl> value=1
                  arg1: CONST Int type=<unbound IrClassSymbolImpl> value=1
                then: BLOCK type=<unbound IrClassSymbolImpl> origin=null
                  VAR name:z type:<unbound IrClassSymbolImpl> [val]
                    CONST Int type=<unbound IrClassSymbolImpl> value=2
            WHEN type=<unbound IrClassSymbolImpl> origin=IF
              BRANCH
                if: CALL 'public final fun EQEQ (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EQEQ
                  arg0: CONST Int type=<unbound IrClassSymbolImpl> value=3
                  arg1: CONST Int type=<unbound IrClassSymbolImpl> value=3
                then: BLOCK type=<unbound IrClassSymbolImpl> origin=null
                  VAR name:z type:<unbound IrClassSymbolImpl> [val]
                    CONST Int type=<unbound IrClassSymbolImpl> value=4
