library {
  // module name: <main>

  library fragment {
    // package name: <root>

    // class name: A
    // class name: B
    // class name: TypeParameter

    public abstract interface A<T#0 /* OptionalTypeParameter */ : TypeParameter?> : kotlin/Any {

      public abstract fun whatever(params: T#0): kotlin/Unit
    }

    public final class B : A<kotlin/Nothing?> {

      public constructor()

      public open fun whatever(params: kotlin/Nothing?): kotlin/Unit
    }

    public abstract interface TypeParameter : kotlin/Any {
    }

    package {

      public final fun box(): kotlin/String

      public final inline fun <reified T#0 /* T */ : TypeParameter?> foo(it: A<T#0>): kotlin/String
    }
  }
}
