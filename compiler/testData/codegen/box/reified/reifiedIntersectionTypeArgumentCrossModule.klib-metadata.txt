// MODULE: m1
library {
  // module name: <m1>

  library fragment {
    // package name: <root>

    // class name: A
    // class name: B
    // class name: C
    // class name: In

    public abstract interface A : kotlin/Any {
    }

    public abstract interface B : kotlin/Any {
    }

    public final class C : A, B {

      public constructor()
    }

    public final class In<in T#0 /* T */> : kotlin/Any {

      public constructor()
    }

    package {

      public final fun consume(a: kotlin/Any?): kotlin/Unit

      public final fun log(s: kotlin/String): kotlin/Unit

      public final inline fun <reified T#0 /* K */ : A & B> select(x: T#0, y: kotlin/Any): T#0

      public final var l: kotlin/String
        public final get
        public final set
    }
  }
}

// MODULE: main
library {
  // module name: <main>

  library fragment {
    // package name: <root>

    package {

      public final fun box(): kotlin/String

      public final fun test(a: kotlin/Any, b: kotlin/Any): kotlin/Unit
    }
  }
}
