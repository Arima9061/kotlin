MODULE_FRAGMENT name:<main>
  FILE fqName:test fileName:/1.kt
    FUN name:map signature:test/map|map@0:0(kotlin.Function1<0:0,0:1>){0§<kotlin.Any?>;1§<kotlin.Any?>}[0] visibility:public modality:FINAL <T, R> ($receiver:T of test.map, transform:<unbound IrClassSymbolImpl><T of test.map, R of test.map>) returnType:R of test.map [inline]
      TYPE_PARAMETER name:T index:0 variance: signature:[ test/map|map@0:0(kotlin.Function1<0:0,0:1>){0§<kotlin.Any?>;1§<kotlin.Any?>}[0] <- Local[<TP>,0|TYPE_PARAMETER name:T index:0 variance: superTypes:[kotlin.Any?] reified:false] ] superTypes:[<unbound IrClassSymbolImpl>?] reified:false
      TYPE_PARAMETER name:R index:1 variance: signature:[ test/map|map@0:0(kotlin.Function1<0:0,0:1>){0§<kotlin.Any?>;1§<kotlin.Any?>}[0] <- Local[<TP>,1|TYPE_PARAMETER name:R index:1 variance: superTypes:[kotlin.Any?] reified:false] ] superTypes:[<unbound IrClassSymbolImpl>?] reified:false
      $receiver: VALUE_PARAMETER name:<this> type:T of test.map
      VALUE_PARAMETER name:transform index:0 type:<unbound IrClassSymbolImpl><T of test.map, R of test.map>
      BLOCK_BODY
        RETURN type=<unbound IrClassSymbolImpl> from='public final fun map <T, R> (transform: <unbound IrClassSymbolImpl><T of test.map, R of test.map>): R of test.map [inline] declared in test'
          CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=R of test.map origin=INVOKE
            $this: GET_VAR 'transform: <unbound IrClassSymbolImpl><T of test.map, R of test.map> declared in test.map' type=<unbound IrClassSymbolImpl><T of test.map, R of test.map> origin=VARIABLE_AS_FUNCTION
            1: GET_VAR '<this>: T of test.map declared in test.map' type=T of test.map origin=null
  FILE fqName:<root> fileName:/2.kt
    FUN name:box signature:/box|box(){}[0] visibility:public modality:FINAL <> () returnType:<unbound IrClassSymbolImpl>
      BLOCK_BODY
        VAR name:result type:<unbound IrClassSymbolImpl> [val]
          CALL 'public final fun map <T, R> (transform: <unbound IrClassSymbolImpl><T of test.map, R of test.map>): R of test.map [inline] declared in test' type=<unbound IrClassSymbolImpl> origin=null
            <T>: <unbound IrClassSymbolImpl>
            <R>: <unbound IrClassSymbolImpl>
            $receiver: CONST Int type=<unbound IrClassSymbolImpl> value=1
            transform: FUNCTION_REFERENCE 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>, <unbound IrClassSymbolImpl>> origin=null reflectionTarget=<same>
              $this: CONST Long type=<unbound IrClassSymbolImpl> value=3
        RETURN type=<unbound IrClassSymbolImpl> from='public final fun box (): <unbound IrClassSymbolImpl> declared in <root>'
          WHEN type=<unbound IrClassSymbolImpl> origin=IF
            BRANCH
              if: CALL 'public final fun EQEQ (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EQEQ
                arg0: GET_VAR 'val result: <unbound IrClassSymbolImpl> [val] declared in <root>.box' type=<unbound IrClassSymbolImpl> origin=null
                arg1: CONST Long type=<unbound IrClassSymbolImpl> value=4
              then: CONST String type=<unbound IrClassSymbolImpl> value="OK"
            BRANCH
              if: CONST Boolean type=<unbound IrClassSymbolImpl> value=true
              then: STRING_CONCATENATION type=<unbound IrClassSymbolImpl>
                CONST String type=<unbound IrClassSymbolImpl> value="fail "
                GET_VAR 'val result: <unbound IrClassSymbolImpl> [val] declared in <root>.box' type=<unbound IrClassSymbolImpl> origin=null
