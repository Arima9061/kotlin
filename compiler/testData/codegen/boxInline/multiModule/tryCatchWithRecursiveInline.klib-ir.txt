MODULE_FRAGMENT name:<main>
  FILE fqName:<root> fileName:/lib.kt
    FUN name:andAlso signature:/andAlso|andAlso@0:0(kotlin.Function1<0:0,kotlin.Unit>){0ยง<kotlin.Any?>}[0] visibility:public modality:FINAL <T> ($receiver:T of <root>.andAlso, block:<unbound IrClassSymbolImpl><T of <root>.andAlso, <unbound IrClassSymbolImpl>>) returnType:T of <root>.andAlso [inline]
      TYPE_PARAMETER name:T index:0 variance: signature:[ /andAlso|andAlso@0:0(kotlin.Function1<0:0,kotlin.Unit>){0ยง<kotlin.Any?>}[0] <- Local[<TP>,0|TYPE_PARAMETER name:T index:0 variance: superTypes:[kotlin.Any?] reified:false] ] superTypes:[<unbound IrClassSymbolImpl>?] reified:false
      $receiver: VALUE_PARAMETER name:<this> type:T of <root>.andAlso
      VALUE_PARAMETER name:block index:0 type:<unbound IrClassSymbolImpl><T of <root>.andAlso, <unbound IrClassSymbolImpl>>
      BLOCK_BODY
        CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=INVOKE
          $this: GET_VAR 'block: <unbound IrClassSymbolImpl><T of <root>.andAlso, <unbound IrClassSymbolImpl>> declared in <root>.andAlso' type=<unbound IrClassSymbolImpl><T of <root>.andAlso, <unbound IrClassSymbolImpl>> origin=VARIABLE_AS_FUNCTION
          1: GET_VAR '<this>: T of <root>.andAlso declared in <root>.andAlso' type=T of <root>.andAlso origin=null
        RETURN type=<unbound IrClassSymbolImpl> from='public final fun andAlso <T> (block: <unbound IrClassSymbolImpl><T of <root>.andAlso, <unbound IrClassSymbolImpl>>): T of <root>.andAlso [inline] declared in <root>'
          GET_VAR '<this>: T of <root>.andAlso declared in <root>.andAlso' type=T of <root>.andAlso origin=null
    FUN name:tryCatch signature:/tryCatch|tryCatch(kotlin.Function0<0:0>;kotlin.Function1<0:0,kotlin.Unit>){0ยง<kotlin.Any?>}[0] visibility:public modality:FINAL <T> (block:<unbound IrClassSymbolImpl><T of <root>.tryCatch>, onSuccess:<unbound IrClassSymbolImpl><T of <root>.tryCatch, <unbound IrClassSymbolImpl>>) returnType:<unbound IrClassSymbolImpl> [inline]
      TYPE_PARAMETER name:T index:0 variance: signature:[ /tryCatch|tryCatch(kotlin.Function0<0:0>;kotlin.Function1<0:0,kotlin.Unit>){0ยง<kotlin.Any?>}[0] <- Local[<TP>,0|TYPE_PARAMETER name:T index:0 variance: superTypes:[kotlin.Any?] reified:false] ] superTypes:[<unbound IrClassSymbolImpl>?] reified:false
      VALUE_PARAMETER name:block index:0 type:<unbound IrClassSymbolImpl><T of <root>.tryCatch>
      VALUE_PARAMETER name:onSuccess index:1 type:<unbound IrClassSymbolImpl><T of <root>.tryCatch, <unbound IrClassSymbolImpl>>
      BLOCK_BODY
        TYPE_OP type=<unbound IrClassSymbolImpl> origin=IMPLICIT_COERCION_TO_UNIT typeOperand=<unbound IrClassSymbolImpl>
          CALL 'public final fun andAlso <T> (block: <unbound IrClassSymbolImpl><T of <root>.andAlso, <unbound IrClassSymbolImpl>>): T of <root>.andAlso [inline] declared in <root>' type=T of <root>.tryCatch origin=null
            <T>: T of <root>.tryCatch
            $receiver: TRY type=T of <root>.tryCatch
              try: BLOCK type=T of <root>.tryCatch origin=null
                CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=T of <root>.tryCatch origin=INVOKE
                  $this: GET_VAR 'block: <unbound IrClassSymbolImpl><T of <root>.tryCatch> declared in <root>.tryCatch' type=<unbound IrClassSymbolImpl><T of <root>.tryCatch> origin=VARIABLE_AS_FUNCTION
              CATCH parameter=val e: <unbound IrClassSymbolImpl> [val] declared in <root>.tryCatch
                VAR CATCH_PARAMETER name:e type:<unbound IrClassSymbolImpl> [val]
                BLOCK type=<unbound IrClassSymbolImpl> origin=null
                  RETURN type=<unbound IrClassSymbolImpl> from='public final fun tryCatch <T> (block: <unbound IrClassSymbolImpl><T of <root>.tryCatch>, onSuccess: <unbound IrClassSymbolImpl><T of <root>.tryCatch, <unbound IrClassSymbolImpl>>): <unbound IrClassSymbolImpl> [inline] declared in <root>'
                    GET_OBJECT 'UNBOUND IrClassSymbolImpl' type=<unbound IrClassSymbolImpl>
            block: FUN_EXPR type=<unbound IrClassSymbolImpl><T of <root>.tryCatch, <unbound IrClassSymbolImpl>> origin=LAMBDA
              FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL <> (it:T of <root>.tryCatch) returnType:<unbound IrClassSymbolImpl>
                VALUE_PARAMETER name:it index:0 type:T of <root>.tryCatch
                BLOCK_BODY
                  CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=INVOKE
                    $this: GET_VAR 'onSuccess: <unbound IrClassSymbolImpl><T of <root>.tryCatch, <unbound IrClassSymbolImpl>> declared in <root>.tryCatch' type=<unbound IrClassSymbolImpl><T of <root>.tryCatch, <unbound IrClassSymbolImpl>> origin=VARIABLE_AS_FUNCTION
                    1: GET_VAR 'it: T of <root>.tryCatch declared in <root>.tryCatch.<anonymous>' type=T of <root>.tryCatch origin=null
  FILE fqName:<root> fileName:/main.kt
    FUN name:box signature:/box|box(){}[0] visibility:public modality:FINAL <> () returnType:<unbound IrClassSymbolImpl>
      BLOCK_BODY
        VAR name:result type:<unbound IrClassSymbolImpl> [var]
          CONST Boolean type=<unbound IrClassSymbolImpl> value=false
        CALL 'public final fun tryCatch <T> (block: <unbound IrClassSymbolImpl><T of <root>.tryCatch>, onSuccess: <unbound IrClassSymbolImpl><T of <root>.tryCatch, <unbound IrClassSymbolImpl>>): <unbound IrClassSymbolImpl> [inline] declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
          <T>: <unbound IrClassSymbolImpl>
          block: FUN_EXPR type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> origin=LAMBDA
            FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL <> () returnType:<unbound IrClassSymbolImpl>
              BLOCK_BODY
                RETURN type=<unbound IrClassSymbolImpl> from='local final fun <anonymous> (): <unbound IrClassSymbolImpl> declared in <root>.box'
                  CONST Boolean type=<unbound IrClassSymbolImpl> value=true
          onSuccess: FUN_EXPR type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>, <unbound IrClassSymbolImpl>> origin=LAMBDA
            FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL <> (it:<unbound IrClassSymbolImpl>) returnType:<unbound IrClassSymbolImpl>
              VALUE_PARAMETER name:it index:0 type:<unbound IrClassSymbolImpl>
              BLOCK_BODY
                SET_VAR 'var result: <unbound IrClassSymbolImpl> [var] declared in <root>.box' type=<unbound IrClassSymbolImpl> origin=EQ
                  GET_VAR 'it: <unbound IrClassSymbolImpl> declared in <root>.box.<anonymous>' type=<unbound IrClassSymbolImpl> origin=null
        RETURN type=<unbound IrClassSymbolImpl> from='public final fun box (): <unbound IrClassSymbolImpl> declared in <root>'
          WHEN type=<unbound IrClassSymbolImpl> origin=IF
            BRANCH
              if: GET_VAR 'var result: <unbound IrClassSymbolImpl> [var] declared in <root>.box' type=<unbound IrClassSymbolImpl> origin=null
              then: CONST String type=<unbound IrClassSymbolImpl> value="OK"
            BRANCH
              if: CONST Boolean type=<unbound IrClassSymbolImpl> value=true
              then: CONST String type=<unbound IrClassSymbolImpl> value="Fail"
