library {
  // module name: <main>

  library fragment {
    // package name: <root>

    package {

      public final fun box(): kotlin/String
    }
  }

  library fragment {
    // package name: test

    // class name: test/A
    // class name: test/B

    public abstract interface test/A : kotlin/Any {

      public abstract fun run(): kotlin/Unit
    }

    public final class test/B : kotlin/Any {

      public constructor(o: kotlin/String, k: kotlin/String)

      public final fun test(f: kotlin/Function1<kotlin/String, kotlin/Unit>): kotlin/Unit

      public final inline fun testNested(crossinline f: kotlin/Function1<kotlin/String, kotlin/Unit>): kotlin/Unit

      public final val k: kotlin/String
        public final get

      public final val o: kotlin/String
        public final get
    }
  }
}
