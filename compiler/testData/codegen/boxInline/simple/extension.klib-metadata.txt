library {
  // module name: <main>

  library fragment {
    // package name: <root>

    // class name: Inline
    // class name: InlineX

    public final class Inline : kotlin/Any {

      public constructor(res: kotlin/Int)

      public final inline fun kotlin/Double.calcDouble(s: kotlin/Function2<kotlin/Int, kotlin/Double, kotlin/Double>): kotlin/Double

      public final inline fun InlineX.calcInt(s: kotlin/Function2<kotlin/Int, kotlin/Int, kotlin/Int>): kotlin/Int

      public final fun doWork(l: InlineX): kotlin/Int

      public final fun doWorkWithDouble(s: kotlin/Double): kotlin/Double

      public final val res: kotlin/Int
        public final get
    }

    public final class InlineX : kotlin/Any {

      public constructor(value: kotlin/Int)

      public final val value: kotlin/Int
        public final get
    }

    package {

      public final fun box(): kotlin/String

      public final inline fun Inline.calcExt(s: kotlin/Function1<kotlin/Int, kotlin/Int>, p: kotlin/Int): kotlin/Int

      public final inline fun Inline.calcExt2(s: @kotlin/ExtensionFunctionType kotlin/Function1<kotlin/Int, kotlin/Int>, p: kotlin/Int): kotlin/Int

      public final fun test1(): kotlin/Int

      public final fun test2(): kotlin/Int

      public final fun test3(): kotlin/Int

      public final fun test4(): kotlin/Double

      public final fun test5(): kotlin/Double
    }
  }
}
