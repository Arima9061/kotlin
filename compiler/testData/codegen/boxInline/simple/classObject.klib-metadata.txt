library {
  // module name: <main>

  library fragment {
    // package name: <root>

    package {

      public final fun box(): kotlin/String

      public final fun testClassObjectCall(): kotlin/String

      public final fun testInstanceCall(): kotlin/String

      public final fun testPackageCall(): kotlin/String
    }
  }

  library fragment {
    // package name: test

    // class name: test/InlineAll
    // class name: test/InlineAll.Companion

    public final class test/InlineAll : kotlin/Any {

      public constructor()

      public final inline fun inline(s: kotlin/Function0<kotlin/String>): kotlin/String

      // companion object: Companion

      // nested class: Companion
    }

    public final companion object test/InlineAll.Companion : kotlin/Any {

      private constructor()

      public final inline fun inline(s: kotlin/Function0<kotlin/String>): kotlin/String
    }

    package {

      public final inline fun inline(s: kotlin/Function0<kotlin/String>): kotlin/String
    }
  }
}
