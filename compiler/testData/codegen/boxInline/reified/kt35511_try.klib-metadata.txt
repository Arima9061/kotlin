library {
  // module name: <main>

  library fragment {
    // package name: <root>

    package {

      public final fun box(): kotlin/String
    }
  }

  library fragment {
    // package name: test

    // class name: test/A
    // class name: test/B
    // class name: test/Base

    public final class test/A : test/Base {

      public constructor(name: kotlin/String)
    }

    public final class test/B : test/Base {

      public constructor(name: kotlin/String)
    }

    public open class test/Base : kotlin/Any {

      public constructor(name: kotlin/String)

      public final val name: kotlin/String
        public final get
    }

    package {

      public final fun cond(): kotlin/Boolean

      public final fun foo(base: kotlin/Array<out test/Base>): kotlin/Unit

      public final inline fun <reified T#0 /* T */ : test/Base, reified T#1 /* Y */ : test/Base> process(a: test/Base): kotlin/Unit

      public final var result: kotlin/String
        public final get
        public final set
    }
  }
}
