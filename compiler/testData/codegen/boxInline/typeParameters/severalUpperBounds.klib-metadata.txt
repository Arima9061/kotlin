library {
  // module name: <main>

  library fragment {
    // package name: <root>

    // class name: Box
    // class name: I
    // class name: J
    // class name: X

    public final class Box<T#0 /* T */ : kotlin/Any & I & J> : kotlin/Any {

      public constructor(x: T#0)

      public final inline fun f(): kotlin/String

      public final val x: T#0
        public final get
    }

    public abstract interface I : kotlin/Any {

      public abstract fun f(): kotlin/String
    }

    public abstract interface J : kotlin/Any {

      public abstract fun f2(): kotlin/String
    }

    public final class X : I, J {

      public constructor()

      public open fun f(): kotlin/String

      public open fun f2(): kotlin/String
    }

    package {

      public final fun box(): kotlin/String
    }
  }
}
