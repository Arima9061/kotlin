MODULE_FRAGMENT name:<main>
  FILE fqName:test fileName:/1.kt
    FUN name:myrun signature:test/myrun|myrun(kotlin.Function0<0:0>){0ยง<kotlin.Any?>}[0] visibility:public modality:FINAL <R> (block:<unbound IrClassSymbolImpl><R of test.myrun>) returnType:R of test.myrun [inline]
      TYPE_PARAMETER name:R index:0 variance: signature:[ test/myrun|myrun(kotlin.Function0<0:0>){0ยง<kotlin.Any?>}[0] <- Local[<TP>,0|TYPE_PARAMETER name:R index:0 variance: superTypes:[kotlin.Any?] reified:false] ] superTypes:[<unbound IrClassSymbolImpl>?] reified:false
      VALUE_PARAMETER name:block index:0 type:<unbound IrClassSymbolImpl><R of test.myrun>
      BLOCK_BODY
        RETURN type=<unbound IrClassSymbolImpl> from='public final fun myrun <R> (block: <unbound IrClassSymbolImpl><R of test.myrun>): R of test.myrun [inline] declared in test'
          CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=R of test.myrun origin=INVOKE
            $this: GET_VAR 'block: <unbound IrClassSymbolImpl><R of test.myrun> declared in test.myrun' type=<unbound IrClassSymbolImpl><R of test.myrun> origin=VARIABLE_AS_FUNCTION
  FILE fqName:<root> fileName:/2.kt
    FUN name:test signature:/test|test(kotlin.collections.List<kotlin.String>){}[0] visibility:public modality:FINAL <> (xs:<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>>) returnType:<unbound IrClassSymbolImpl>
      VALUE_PARAMETER name:xs index:0 type:<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>>
      BLOCK_BODY
        VAR name:result type:<unbound IrClassSymbolImpl> [var]
          CONST String type=<unbound IrClassSymbolImpl> value=""
        CALL 'public final fun myrun <R> (block: <unbound IrClassSymbolImpl><R of test.myrun>): R of test.myrun [inline] declared in test' type=<unbound IrClassSymbolImpl> origin=null
          <R>: <unbound IrClassSymbolImpl>
          block: FUN_EXPR type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> origin=LAMBDA
            FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL <> () returnType:<unbound IrClassSymbolImpl>
              BLOCK_BODY
                BLOCK type=<unbound IrClassSymbolImpl> origin=FOR_LOOP
                  VAR FOR_LOOP_ITERATOR name:<iterator> type:<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> [val]
                    CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> origin=FOR_LOOP_ITERATOR
                      $this: GET_VAR 'xs: <unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> declared in <root>.test' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> origin=null
                  WHILE label=null origin=FOR_LOOP_INNER_WHILE
                    condition: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=FOR_LOOP_HAS_NEXT
                      $this: GET_VAR 'val <iterator>: <unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> [val] declared in <root>.test.<anonymous>' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> origin=null
                    body: BLOCK type=<unbound IrClassSymbolImpl> origin=FOR_LOOP_INNER_WHILE
                      VAR FOR_LOOP_VARIABLE name:x type:<unbound IrClassSymbolImpl> [val]
                        CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=FOR_LOOP_NEXT
                          $this: GET_VAR 'val <iterator>: <unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> [val] declared in <root>.test.<anonymous>' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> origin=null
                      BLOCK type=<unbound IrClassSymbolImpl> origin=null
                        VAR name:y type:<unbound IrClassSymbolImpl> [val]
                        CALL 'public final fun myrun <R> (block: <unbound IrClassSymbolImpl><R of test.myrun>): R of test.myrun [inline] declared in test' type=<unbound IrClassSymbolImpl> origin=null
                          <R>: <unbound IrClassSymbolImpl>
                          block: FUN_EXPR type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> origin=LAMBDA
                            FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL <> () returnType:<unbound IrClassSymbolImpl>
                              BLOCK_BODY
                                SET_VAR 'val y: <unbound IrClassSymbolImpl> [val] declared in <root>.test.<anonymous>' type=<unbound IrClassSymbolImpl> origin=EQ
                                  GET_VAR 'val x: <unbound IrClassSymbolImpl> [val] declared in <root>.test.<anonymous>' type=<unbound IrClassSymbolImpl> origin=null
                                WHEN type=<unbound IrClassSymbolImpl> origin=IF
                                  BRANCH
                                    if: CALL 'public final fun greater (arg0: <unbound IrClassSymbolImpl>, arg1: <unbound IrClassSymbolImpl>): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=GT
                                      arg0: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=GET_PROPERTY
                                        $this: GET_VAR 'val y: <unbound IrClassSymbolImpl> [val] declared in <root>.test.<anonymous>' type=<unbound IrClassSymbolImpl> origin=null
                                      arg1: CONST Int type=<unbound IrClassSymbolImpl> value=1
                                    then: RETURN type=<unbound IrClassSymbolImpl> from='local final fun <anonymous> (): <unbound IrClassSymbolImpl> declared in <root>.test'
                                      GET_OBJECT 'UNBOUND IrClassSymbolImpl' type=<unbound IrClassSymbolImpl>
                        SET_VAR 'var result: <unbound IrClassSymbolImpl> [var] declared in <root>.test' type=<unbound IrClassSymbolImpl> origin=PLUSEQ
                          CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=PLUSEQ
                            $this: GET_VAR 'var result: <unbound IrClassSymbolImpl> [var] declared in <root>.test' type=<unbound IrClassSymbolImpl> origin=PLUSEQ
                            1: GET_VAR 'val y: <unbound IrClassSymbolImpl> [val] declared in <root>.test.<anonymous>' type=<unbound IrClassSymbolImpl> origin=null
        RETURN type=<unbound IrClassSymbolImpl> from='public final fun test (xs: <unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>>): <unbound IrClassSymbolImpl> declared in <root>'
          GET_VAR 'var result: <unbound IrClassSymbolImpl> [var] declared in <root>.test' type=<unbound IrClassSymbolImpl> origin=null
    FUN name:box signature:/box|box(){}[0] visibility:public modality:FINAL <> () returnType:<unbound IrClassSymbolImpl>
      BLOCK_BODY
        RETURN type=<unbound IrClassSymbolImpl> from='public final fun box (): <unbound IrClassSymbolImpl> declared in <root>'
          CALL 'public final fun test (xs: <unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>>): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
            xs: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> origin=null
              <1>: <unbound IrClassSymbolImpl>
              1: VARARG type=<unbound IrClassSymbolImpl><out <unbound IrClassSymbolImpl>> varargElementType=<unbound IrClassSymbolImpl>
                CONST String type=<unbound IrClassSymbolImpl> value="O"
                CONST String type=<unbound IrClassSymbolImpl> value="K"
                CONST String type=<unbound IrClassSymbolImpl> value="fail"
