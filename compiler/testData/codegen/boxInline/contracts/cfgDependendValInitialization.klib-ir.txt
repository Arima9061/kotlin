MODULE_FRAGMENT name:<main>
  FILE fqName:test fileName:/1.kt
    FUN name:myrun signature:test/myrun|myrun(kotlin.Function0<0:0>){0ยง<kotlin.Any?>}[0] visibility:public modality:FINAL <R> (block:<unbound IrClassSymbolImpl><R of test.myrun>) returnType:R of test.myrun [inline]
      TYPE_PARAMETER name:R index:0 variance: signature:[ test/myrun|myrun(kotlin.Function0<0:0>){0ยง<kotlin.Any?>}[0] <- Local[<TP>,0|TYPE_PARAMETER name:R index:0 variance: superTypes:[kotlin.Any?] reified:false] ] superTypes:[<unbound IrClassSymbolImpl>?] reified:false
      VALUE_PARAMETER name:block index:0 type:<unbound IrClassSymbolImpl><R of test.myrun>
      BLOCK_BODY
        RETURN type=<unbound IrClassSymbolImpl> from='public final fun myrun <R> (block: <unbound IrClassSymbolImpl><R of test.myrun>): R of test.myrun [inline] declared in test'
          CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=R of test.myrun origin=INVOKE
            $this: GET_VAR 'block: <unbound IrClassSymbolImpl><R of test.myrun> declared in test.myrun' type=<unbound IrClassSymbolImpl><R of test.myrun> origin=VARIABLE_AS_FUNCTION
  FILE fqName:<root> fileName:/2.kt
    FUN name:test signature:/test|test(kotlin.Boolean){}[0] visibility:public modality:FINAL <> (b:<unbound IrClassSymbolImpl>) returnType:<unbound IrClassSymbolImpl>
      VALUE_PARAMETER name:b index:0 type:<unbound IrClassSymbolImpl>
      BLOCK_BODY
        VAR name:x type:<unbound IrClassSymbolImpl> [val]
        WHEN type=<unbound IrClassSymbolImpl> origin=IF
          BRANCH
            if: GET_VAR 'b: <unbound IrClassSymbolImpl> declared in <root>.test' type=<unbound IrClassSymbolImpl> origin=null
            then: BLOCK type=<unbound IrClassSymbolImpl> origin=null
              SET_VAR 'val x: <unbound IrClassSymbolImpl> [val] declared in <root>.test' type=<unbound IrClassSymbolImpl> origin=EQ
                CONST Int type=<unbound IrClassSymbolImpl> value=1
          BRANCH
            if: CONST Boolean type=<unbound IrClassSymbolImpl> value=true
            then: BLOCK type=<unbound IrClassSymbolImpl> origin=null
              CALL 'public final fun myrun <R> (block: <unbound IrClassSymbolImpl><R of test.myrun>): R of test.myrun [inline] declared in test' type=<unbound IrClassSymbolImpl> origin=null
                <R>: <unbound IrClassSymbolImpl>
                block: FUN_EXPR type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> origin=LAMBDA
                  FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL <> () returnType:<unbound IrClassSymbolImpl>
                    BLOCK_BODY
                      SET_VAR 'val x: <unbound IrClassSymbolImpl> [val] declared in <root>.test' type=<unbound IrClassSymbolImpl> origin=EQ
                        CONST Int type=<unbound IrClassSymbolImpl> value=-1
        RETURN type=<unbound IrClassSymbolImpl> from='public final fun test (b: <unbound IrClassSymbolImpl>): <unbound IrClassSymbolImpl> declared in <root>'
          GET_VAR 'val x: <unbound IrClassSymbolImpl> [val] declared in <root>.test' type=<unbound IrClassSymbolImpl> origin=null
    FUN name:box signature:/box|box(){}[0] visibility:public modality:FINAL <> () returnType:<unbound IrClassSymbolImpl>
      BLOCK_BODY
        WHEN type=<unbound IrClassSymbolImpl> origin=IF
          BRANCH
            if: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=EXCLEQ
              $this: CALL 'public final fun EQEQ (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EXCLEQ
                arg0: CALL 'public final fun test (b: <unbound IrClassSymbolImpl>): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
                  b: CONST Boolean type=<unbound IrClassSymbolImpl> value=true
                arg1: CONST Int type=<unbound IrClassSymbolImpl> value=1
            then: RETURN type=<unbound IrClassSymbolImpl> from='public final fun box (): <unbound IrClassSymbolImpl> declared in <root>'
              CONST String type=<unbound IrClassSymbolImpl> value="Fail 1"
        WHEN type=<unbound IrClassSymbolImpl> origin=IF
          BRANCH
            if: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=EXCLEQ
              $this: CALL 'public final fun EQEQ (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EXCLEQ
                arg0: CALL 'public final fun test (b: <unbound IrClassSymbolImpl>): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
                  b: CONST Boolean type=<unbound IrClassSymbolImpl> value=false
                arg1: CONST Int type=<unbound IrClassSymbolImpl> value=-1
            then: RETURN type=<unbound IrClassSymbolImpl> from='public final fun box (): <unbound IrClassSymbolImpl> declared in <root>'
              CONST String type=<unbound IrClassSymbolImpl> value="Fail 2"
        RETURN type=<unbound IrClassSymbolImpl> from='public final fun box (): <unbound IrClassSymbolImpl> declared in <root>'
          CONST String type=<unbound IrClassSymbolImpl> value="OK"
