MODULE_FRAGMENT name:<main>
  FILE fqName:test fileName:/1.kt
    FUN name:noInlineCall signature:test/noInlineCall|noInlineCall(kotlin.Function0<0:0>){0ยง<kotlin.Any?>}[0] visibility:public modality:FINAL <R> (block:<unbound IrClassSymbolImpl><R of test.noInlineCall>) returnType:R of test.noInlineCall
      TYPE_PARAMETER name:R index:0 variance: signature:[ test/noInlineCall|noInlineCall(kotlin.Function0<0:0>){0ยง<kotlin.Any?>}[0] <- Local[<TP>,0|TYPE_PARAMETER name:R index:0 variance: superTypes:[kotlin.Any?] reified:false] ] superTypes:[<unbound IrClassSymbolImpl>?] reified:false
      VALUE_PARAMETER name:block index:0 type:<unbound IrClassSymbolImpl><R of test.noInlineCall>
      BLOCK_BODY
        RETURN type=<unbound IrClassSymbolImpl> from='public final fun noInlineCall <R> (block: <unbound IrClassSymbolImpl><R of test.noInlineCall>): R of test.noInlineCall declared in test'
          CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=R of test.noInlineCall origin=INVOKE
            $this: GET_VAR 'block: <unbound IrClassSymbolImpl><R of test.noInlineCall> declared in test.noInlineCall' type=<unbound IrClassSymbolImpl><R of test.noInlineCall> origin=VARIABLE_AS_FUNCTION
    FUN name:notUsed signature:test/notUsed|notUsed(kotlin.Function0<0:0>){0ยง<kotlin.Any?>}[0] visibility:public modality:FINAL <R> (block:<unbound IrClassSymbolImpl><R of test.notUsed>) returnType:R of test.notUsed [inline]
      TYPE_PARAMETER name:R index:0 variance: signature:[ test/notUsed|notUsed(kotlin.Function0<0:0>){0ยง<kotlin.Any?>}[0] <- Local[<TP>,0|TYPE_PARAMETER name:R index:0 variance: superTypes:[kotlin.Any?] reified:false] ] superTypes:[<unbound IrClassSymbolImpl>?] reified:false
      VALUE_PARAMETER name:block index:0 type:<unbound IrClassSymbolImpl><R of test.notUsed>
      BLOCK_BODY
        RETURN type=<unbound IrClassSymbolImpl> from='public final fun notUsed <R> (block: <unbound IrClassSymbolImpl><R of test.notUsed>): R of test.notUsed [inline] declared in test'
          CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=R of test.notUsed origin=INVOKE
            $this: GET_VAR 'block: <unbound IrClassSymbolImpl><R of test.notUsed> declared in test.notUsed' type=<unbound IrClassSymbolImpl><R of test.notUsed> origin=VARIABLE_AS_FUNCTION
  FILE fqName:<root> fileName:/2.kt
    FUN name:test1 signature:/test1|test1(kotlin.Boolean){}[0] visibility:public modality:FINAL <> (b:<unbound IrClassSymbolImpl>) returnType:<unbound IrClassSymbolImpl>
      VALUE_PARAMETER name:b index:0 type:<unbound IrClassSymbolImpl>
      BLOCK_BODY
        VAR name:localResult type:<unbound IrClassSymbolImpl> [val]
          CALL 'public final fun noInlineCall <R> (block: <unbound IrClassSymbolImpl><R of test.noInlineCall>): R of test.noInlineCall declared in test' type=<unbound IrClassSymbolImpl> origin=null
            <R>: <unbound IrClassSymbolImpl>
            block: FUN_EXPR type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> origin=LAMBDA
              FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL <> () returnType:<unbound IrClassSymbolImpl>
                BLOCK_BODY
                  WHEN type=<unbound IrClassSymbolImpl> origin=IF
                    BRANCH
                      if: GET_VAR 'b: <unbound IrClassSymbolImpl> declared in <root>.test1' type=<unbound IrClassSymbolImpl> origin=null
                      then: BLOCK type=<unbound IrClassSymbolImpl> origin=null
                        RETURN type=<unbound IrClassSymbolImpl> from='local final fun <anonymous> (): <unbound IrClassSymbolImpl> declared in <root>.test1'
                          CONST Int type=<unbound IrClassSymbolImpl> value=1
                    BRANCH
                      if: CONST Boolean type=<unbound IrClassSymbolImpl> value=true
                      then: BLOCK type=<unbound IrClassSymbolImpl> origin=null
                        RETURN type=<unbound IrClassSymbolImpl> from='local final fun <anonymous> (): <unbound IrClassSymbolImpl> declared in <root>.test1'
                          CONST Int type=<unbound IrClassSymbolImpl> value=2
                  RETURN type=<unbound IrClassSymbolImpl> from='local final fun <anonymous> (): <unbound IrClassSymbolImpl> declared in <root>.test1'
                    CONST Int type=<unbound IrClassSymbolImpl> value=3
        RETURN type=<unbound IrClassSymbolImpl> from='public final fun test1 (b: <unbound IrClassSymbolImpl>): <unbound IrClassSymbolImpl> declared in <root>'
          CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=PLUS
            $this: CONST String type=<unbound IrClassSymbolImpl> value="result="
            1: GET_VAR 'val localResult: <unbound IrClassSymbolImpl> [val] declared in <root>.test1' type=<unbound IrClassSymbolImpl> origin=null
    FUN name:box signature:/box|box(){}[0] visibility:public modality:FINAL <> () returnType:<unbound IrClassSymbolImpl>
      BLOCK_BODY
        VAR name:test1 type:<unbound IrClassSymbolImpl> [val]
          CALL 'public final fun test1 (b: <unbound IrClassSymbolImpl>): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
            b: CONST Boolean type=<unbound IrClassSymbolImpl> value=true
        WHEN type=<unbound IrClassSymbolImpl> origin=IF
          BRANCH
            if: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=EXCLEQ
              $this: CALL 'public final fun EQEQ (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EXCLEQ
                arg0: GET_VAR 'val test1: <unbound IrClassSymbolImpl> [val] declared in <root>.box' type=<unbound IrClassSymbolImpl> origin=null
                arg1: CONST String type=<unbound IrClassSymbolImpl> value="result=1"
            then: RETURN type=<unbound IrClassSymbolImpl> from='public final fun box (): <unbound IrClassSymbolImpl> declared in <root>'
              STRING_CONCATENATION type=<unbound IrClassSymbolImpl>
                CONST String type=<unbound IrClassSymbolImpl> value="test1: "
                GET_VAR 'val test1: <unbound IrClassSymbolImpl> [val] declared in <root>.box' type=<unbound IrClassSymbolImpl> origin=null
        VAR name:test2 type:<unbound IrClassSymbolImpl> [val]
          CALL 'public final fun test1 (b: <unbound IrClassSymbolImpl>): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
            b: CONST Boolean type=<unbound IrClassSymbolImpl> value=false
        WHEN type=<unbound IrClassSymbolImpl> origin=IF
          BRANCH
            if: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=EXCLEQ
              $this: CALL 'public final fun EQEQ (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EXCLEQ
                arg0: GET_VAR 'val test2: <unbound IrClassSymbolImpl> [val] declared in <root>.box' type=<unbound IrClassSymbolImpl> origin=null
                arg1: CONST String type=<unbound IrClassSymbolImpl> value="result=2"
            then: RETURN type=<unbound IrClassSymbolImpl> from='public final fun box (): <unbound IrClassSymbolImpl> declared in <root>'
              STRING_CONCATENATION type=<unbound IrClassSymbolImpl>
                CONST String type=<unbound IrClassSymbolImpl> value="test2: "
                GET_VAR 'val test2: <unbound IrClassSymbolImpl> [val] declared in <root>.box' type=<unbound IrClassSymbolImpl> origin=null
        RETURN type=<unbound IrClassSymbolImpl> from='public final fun box (): <unbound IrClassSymbolImpl> declared in <root>'
          CONST String type=<unbound IrClassSymbolImpl> value="OK"
