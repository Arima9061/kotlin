MODULE_FRAGMENT name:<main>
  FILE fqName:test fileName:/1.kt
    CLASS CLASS name:Holder signature:test/Holder|null[0] modality:FINAL visibility:public superTypes:[<unbound IrClassSymbolImpl>]
      $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:test.Holder
      CONSTRUCTOR signature:test/Holder.<init>|<init>(){}[0] visibility:public <> () returnType:test.Holder [primary]
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL 'UNBOUND IrConstructorSymbolImpl'
          INSTANCE_INITIALIZER_CALL classDescriptor='CLASS CLASS name:Holder signature:test/Holder|null[0] modality:FINAL visibility:public superTypes:[<unbound IrClassSymbolImpl>]'
      PROPERTY name:value signature:test/Holder.value|{}value[0] visibility:public modality:FINAL [var]
        FIELD PROPERTY_BACKING_FIELD name:value signature:[ test/Holder.value|{}value[0] <- Local[<BF>|FIELD PROPERTY_BACKING_FIELD name:value type:kotlin.String visibility:private] ] type:<unbound IrClassSymbolImpl> visibility:private
          EXPRESSION_BODY
            CONST String type=<unbound IrClassSymbolImpl> value=""
        FUN DEFAULT_PROPERTY_ACCESSOR name:<get-value> signature:test/Holder.value.<get-value>|<get-value>(){}[0] visibility:public modality:FINAL <> ($this:test.Holder) returnType:<unbound IrClassSymbolImpl>
          correspondingProperty: PROPERTY name:value signature:test/Holder.value|{}value[0] visibility:public modality:FINAL [var]
          $this: VALUE_PARAMETER name:<this> type:test.Holder
          BLOCK_BODY
            RETURN type=<unbound IrClassSymbolImpl> from='public final fun <get-value> (): <unbound IrClassSymbolImpl> declared in test.Holder'
              GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:value signature:[ test/Holder.value|{}value[0] <- Local[<BF>|FIELD PROPERTY_BACKING_FIELD name:value type:kotlin.String visibility:private] ] type:<unbound IrClassSymbolImpl> visibility:private' type=<unbound IrClassSymbolImpl> origin=null
                receiver: GET_VAR '<this>: test.Holder declared in test.Holder.<get-value>' type=test.Holder origin=null
        FUN DEFAULT_PROPERTY_ACCESSOR name:<set-value> signature:test/Holder.value.<set-value>|<set-value>(kotlin.String){}[0] visibility:public modality:FINAL <> ($this:test.Holder, <set-?>:<unbound IrClassSymbolImpl>) returnType:<unbound IrClassSymbolImpl>
          correspondingProperty: PROPERTY name:value signature:test/Holder.value|{}value[0] visibility:public modality:FINAL [var]
          $this: VALUE_PARAMETER name:<this> type:test.Holder
          VALUE_PARAMETER name:<set-?> index:0 type:<unbound IrClassSymbolImpl>
          BLOCK_BODY
            SET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:value signature:[ test/Holder.value|{}value[0] <- Local[<BF>|FIELD PROPERTY_BACKING_FIELD name:value type:kotlin.String visibility:private] ] type:<unbound IrClassSymbolImpl> visibility:private' type=<unbound IrClassSymbolImpl> origin=null
              receiver: GET_VAR '<this>: test.Holder declared in test.Holder.<set-value>' type=test.Holder origin=null
              value: GET_VAR '<set-?>: <unbound IrClassSymbolImpl> declared in test.Holder.<set-value>' type=<unbound IrClassSymbolImpl> origin=null
    FUN name:doCall signature:test/doCall|doCall(kotlin.Function0<kotlin.Unit>;kotlin.Function0<kotlin.Unit>;kotlin.Function0<kotlin.Unit>;test.Holder){}[0] visibility:public modality:FINAL <> (block:<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>>, block2:<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>>, finallyBlock2:<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>>, res:test.Holder) returnType:<unbound IrClassSymbolImpl> [inline]
      VALUE_PARAMETER name:block index:0 type:<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>>
      VALUE_PARAMETER name:block2 index:1 type:<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>>
      VALUE_PARAMETER name:finallyBlock2 index:2 type:<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>>
      VALUE_PARAMETER name:res index:3 type:test.Holder
      BLOCK_BODY
        TRY type=<unbound IrClassSymbolImpl>
          try: BLOCK type=<unbound IrClassSymbolImpl> origin=null
            TRY type=<unbound IrClassSymbolImpl>
              try: BLOCK type=<unbound IrClassSymbolImpl> origin=null
                CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=INVOKE
                  $this: GET_VAR 'block: <unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> declared in test.doCall' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> origin=VARIABLE_AS_FUNCTION
                CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=INVOKE
                  $this: GET_VAR 'block2: <unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> declared in test.doCall' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> origin=VARIABLE_AS_FUNCTION
              finally: BLOCK type=<unbound IrClassSymbolImpl> origin=null
                CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=INVOKE
                  $this: GET_VAR 'finallyBlock2: <unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> declared in test.doCall' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> origin=VARIABLE_AS_FUNCTION
          finally: BLOCK type=<unbound IrClassSymbolImpl> origin=null
            BLOCK type=<unbound IrClassSymbolImpl> origin=PLUSEQ
              VAR IR_TEMPORARY_VARIABLE name:<receiver> type:test.Holder [val]
                GET_VAR 'res: test.Holder declared in test.doCall' type=test.Holder origin=null
              CALL 'public final fun <set-value> (<set-?>: <unbound IrClassSymbolImpl>): <unbound IrClassSymbolImpl> declared in test.Holder' type=<unbound IrClassSymbolImpl> origin=PLUSEQ
                $this: GET_VAR 'val <receiver>: test.Holder [val] declared in test.doCall' type=test.Holder origin=null
                <set-?>: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=PLUSEQ
                  $this: CALL 'public final fun <get-value> (): <unbound IrClassSymbolImpl> declared in test.Holder' type=<unbound IrClassSymbolImpl> origin=PLUSEQ
                    $this: GET_VAR 'val <receiver>: test.Holder [val] declared in test.doCall' type=test.Holder origin=null
                  1: CONST String type=<unbound IrClassSymbolImpl> value=", DO_CALL_EXT_FINALLY"
  FILE fqName:<root> fileName:/2.kt
    FUN name:test1 signature:/test1|test1(test.Holder;kotlin.Int){}[0] visibility:public modality:FINAL <> (h:test.Holder, doReturn:<unbound IrClassSymbolImpl>) returnType:<unbound IrClassSymbolImpl>
      VALUE_PARAMETER name:h index:0 type:test.Holder
      VALUE_PARAMETER name:doReturn index:1 type:<unbound IrClassSymbolImpl>
      BLOCK_BODY
        CALL 'public final fun doCall (block: <unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>>, block2: <unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>>, finallyBlock2: <unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>>, res: test.Holder): <unbound IrClassSymbolImpl> [inline] declared in test' type=<unbound IrClassSymbolImpl> origin=null
          block: FUN_EXPR type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> origin=LAMBDA
            FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL <> () returnType:<unbound IrClassSymbolImpl>
              BLOCK_BODY
                WHEN type=<unbound IrClassSymbolImpl> origin=IF
                  BRANCH
                    if: CALL 'public final fun less (arg0: <unbound IrClassSymbolImpl>, arg1: <unbound IrClassSymbolImpl>): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=LT
                      arg0: GET_VAR 'doReturn: <unbound IrClassSymbolImpl> declared in <root>.test1' type=<unbound IrClassSymbolImpl> origin=null
                      arg1: CONST Int type=<unbound IrClassSymbolImpl> value=1
                    then: BLOCK type=<unbound IrClassSymbolImpl> origin=null
                      BLOCK type=<unbound IrClassSymbolImpl> origin=PLUSEQ
                        VAR IR_TEMPORARY_VARIABLE name:<receiver> type:test.Holder [val]
                          GET_VAR 'h: test.Holder declared in <root>.test1' type=test.Holder origin=null
                        CALL 'public final fun <set-value> (<set-?>: <unbound IrClassSymbolImpl>): <unbound IrClassSymbolImpl> declared in test.Holder' type=<unbound IrClassSymbolImpl> origin=PLUSEQ
                          $this: GET_VAR 'val <receiver>: test.Holder [val] declared in <root>.test1.<anonymous>' type=test.Holder origin=null
                          <set-?>: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=PLUSEQ
                            $this: CALL 'public final fun <get-value> (): <unbound IrClassSymbolImpl> declared in test.Holder' type=<unbound IrClassSymbolImpl> origin=PLUSEQ
                              $this: GET_VAR 'val <receiver>: test.Holder [val] declared in <root>.test1.<anonymous>' type=test.Holder origin=null
                            1: CONST String type=<unbound IrClassSymbolImpl> value="OK_NONLOCAL"
                      RETURN type=<unbound IrClassSymbolImpl> from='public final fun test1 (h: test.Holder, doReturn: <unbound IrClassSymbolImpl>): <unbound IrClassSymbolImpl> declared in <root>'
                        CONST String type=<unbound IrClassSymbolImpl> value="OK_NONLOCAL"
                BLOCK type=<unbound IrClassSymbolImpl> origin=PLUSEQ
                  VAR IR_TEMPORARY_VARIABLE name:<receiver> type:test.Holder [val]
                    GET_VAR 'h: test.Holder declared in <root>.test1' type=test.Holder origin=null
                  CALL 'public final fun <set-value> (<set-?>: <unbound IrClassSymbolImpl>): <unbound IrClassSymbolImpl> declared in test.Holder' type=<unbound IrClassSymbolImpl> origin=PLUSEQ
                    $this: GET_VAR 'val <receiver>: test.Holder [val] declared in <root>.test1.<anonymous>' type=test.Holder origin=null
                    <set-?>: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=PLUSEQ
                      $this: CALL 'public final fun <get-value> (): <unbound IrClassSymbolImpl> declared in test.Holder' type=<unbound IrClassSymbolImpl> origin=PLUSEQ
                        $this: GET_VAR 'val <receiver>: test.Holder [val] declared in <root>.test1.<anonymous>' type=test.Holder origin=null
                      1: CONST String type=<unbound IrClassSymbolImpl> value="LOCAL"
                TYPE_OP type=<unbound IrClassSymbolImpl> origin=IMPLICIT_COERCION_TO_UNIT typeOperand=<unbound IrClassSymbolImpl>
                  CONST String type=<unbound IrClassSymbolImpl> value="OK_LOCAL"
          block2: FUN_EXPR type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> origin=LAMBDA
            FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL <> () returnType:<unbound IrClassSymbolImpl>
              BLOCK_BODY
                BLOCK type=<unbound IrClassSymbolImpl> origin=PLUSEQ
                  VAR IR_TEMPORARY_VARIABLE name:<receiver> type:test.Holder [val]
                    GET_VAR 'h: test.Holder declared in <root>.test1' type=test.Holder origin=null
                  CALL 'public final fun <set-value> (<set-?>: <unbound IrClassSymbolImpl>): <unbound IrClassSymbolImpl> declared in test.Holder' type=<unbound IrClassSymbolImpl> origin=PLUSEQ
                    $this: GET_VAR 'val <receiver>: test.Holder [val] declared in <root>.test1.<anonymous>' type=test.Holder origin=null
                    <set-?>: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=PLUSEQ
                      $this: CALL 'public final fun <get-value> (): <unbound IrClassSymbolImpl> declared in test.Holder' type=<unbound IrClassSymbolImpl> origin=PLUSEQ
                        $this: GET_VAR 'val <receiver>: test.Holder [val] declared in <root>.test1.<anonymous>' type=test.Holder origin=null
                      1: CONST String type=<unbound IrClassSymbolImpl> value=", OK_NONLOCAL2"
                RETURN type=<unbound IrClassSymbolImpl> from='public final fun test1 (h: test.Holder, doReturn: <unbound IrClassSymbolImpl>): <unbound IrClassSymbolImpl> declared in <root>'
                  CONST String type=<unbound IrClassSymbolImpl> value="OK_NONLOCAL2"
          finallyBlock2: FUN_EXPR type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> origin=LAMBDA
            FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL <> () returnType:<unbound IrClassSymbolImpl>
              BLOCK_BODY
                BLOCK type=<unbound IrClassSymbolImpl> origin=PLUSEQ
                  VAR IR_TEMPORARY_VARIABLE name:<receiver> type:test.Holder [val]
                    GET_VAR 'h: test.Holder declared in <root>.test1' type=test.Holder origin=null
                  CALL 'public final fun <set-value> (<set-?>: <unbound IrClassSymbolImpl>): <unbound IrClassSymbolImpl> declared in test.Holder' type=<unbound IrClassSymbolImpl> origin=PLUSEQ
                    $this: GET_VAR 'val <receiver>: test.Holder [val] declared in <root>.test1.<anonymous>' type=test.Holder origin=null
                    <set-?>: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=PLUSEQ
                      $this: CALL 'public final fun <get-value> (): <unbound IrClassSymbolImpl> declared in test.Holder' type=<unbound IrClassSymbolImpl> origin=PLUSEQ
                        $this: GET_VAR 'val <receiver>: test.Holder [val] declared in <root>.test1.<anonymous>' type=test.Holder origin=null
                      1: CONST String type=<unbound IrClassSymbolImpl> value=", OK_FINALLY"
          res: GET_VAR 'h: test.Holder declared in <root>.test1' type=test.Holder origin=null
        RETURN type=<unbound IrClassSymbolImpl> from='public final fun test1 (h: test.Holder, doReturn: <unbound IrClassSymbolImpl>): <unbound IrClassSymbolImpl> declared in <root>'
          CONST String type=<unbound IrClassSymbolImpl> value="LOCAL"
    FUN name:test2 signature:/test2|test2(test.Holder;kotlin.Int){}[0] visibility:public modality:FINAL <> (h:test.Holder, doReturn:<unbound IrClassSymbolImpl>) returnType:<unbound IrClassSymbolImpl>
      VALUE_PARAMETER name:h index:0 type:test.Holder
      VALUE_PARAMETER name:doReturn index:1 type:<unbound IrClassSymbolImpl>
      BLOCK_BODY
        CALL 'public final fun doCall (block: <unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>>, block2: <unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>>, finallyBlock2: <unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>>, res: test.Holder): <unbound IrClassSymbolImpl> [inline] declared in test' type=<unbound IrClassSymbolImpl> origin=null
          block: FUN_EXPR type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> origin=LAMBDA
            FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL <> () returnType:<unbound IrClassSymbolImpl>
              BLOCK_BODY
                WHEN type=<unbound IrClassSymbolImpl> origin=IF
                  BRANCH
                    if: CALL 'public final fun less (arg0: <unbound IrClassSymbolImpl>, arg1: <unbound IrClassSymbolImpl>): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=LT
                      arg0: GET_VAR 'doReturn: <unbound IrClassSymbolImpl> declared in <root>.test2' type=<unbound IrClassSymbolImpl> origin=null
                      arg1: CONST Int type=<unbound IrClassSymbolImpl> value=1
                    then: BLOCK type=<unbound IrClassSymbolImpl> origin=null
                      BLOCK type=<unbound IrClassSymbolImpl> origin=PLUSEQ
                        VAR IR_TEMPORARY_VARIABLE name:<receiver> type:test.Holder [val]
                          GET_VAR 'h: test.Holder declared in <root>.test2' type=test.Holder origin=null
                        CALL 'public final fun <set-value> (<set-?>: <unbound IrClassSymbolImpl>): <unbound IrClassSymbolImpl> declared in test.Holder' type=<unbound IrClassSymbolImpl> origin=PLUSEQ
                          $this: GET_VAR 'val <receiver>: test.Holder [val] declared in <root>.test2.<anonymous>' type=test.Holder origin=null
                          <set-?>: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=PLUSEQ
                            $this: CALL 'public final fun <get-value> (): <unbound IrClassSymbolImpl> declared in test.Holder' type=<unbound IrClassSymbolImpl> origin=PLUSEQ
                              $this: GET_VAR 'val <receiver>: test.Holder [val] declared in <root>.test2.<anonymous>' type=test.Holder origin=null
                            1: CONST String type=<unbound IrClassSymbolImpl> value="OK_NONLOCAL"
                      RETURN type=<unbound IrClassSymbolImpl> from='public final fun test2 (h: test.Holder, doReturn: <unbound IrClassSymbolImpl>): <unbound IrClassSymbolImpl> declared in <root>'
                        CONST String type=<unbound IrClassSymbolImpl> value="OK_NONLOCAL"
                BLOCK type=<unbound IrClassSymbolImpl> origin=PLUSEQ
                  VAR IR_TEMPORARY_VARIABLE name:<receiver> type:test.Holder [val]
                    GET_VAR 'h: test.Holder declared in <root>.test2' type=test.Holder origin=null
                  CALL 'public final fun <set-value> (<set-?>: <unbound IrClassSymbolImpl>): <unbound IrClassSymbolImpl> declared in test.Holder' type=<unbound IrClassSymbolImpl> origin=PLUSEQ
                    $this: GET_VAR 'val <receiver>: test.Holder [val] declared in <root>.test2.<anonymous>' type=test.Holder origin=null
                    <set-?>: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=PLUSEQ
                      $this: CALL 'public final fun <get-value> (): <unbound IrClassSymbolImpl> declared in test.Holder' type=<unbound IrClassSymbolImpl> origin=PLUSEQ
                        $this: GET_VAR 'val <receiver>: test.Holder [val] declared in <root>.test2.<anonymous>' type=test.Holder origin=null
                      1: CONST String type=<unbound IrClassSymbolImpl> value="LOCAL"
                TYPE_OP type=<unbound IrClassSymbolImpl> origin=IMPLICIT_COERCION_TO_UNIT typeOperand=<unbound IrClassSymbolImpl>
                  CONST String type=<unbound IrClassSymbolImpl> value="OK_LOCAL"
          block2: FUN_EXPR type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> origin=LAMBDA
            FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL <> () returnType:<unbound IrClassSymbolImpl>
              BLOCK_BODY
                TRY type=<unbound IrClassSymbolImpl>
                  try: BLOCK type=<unbound IrClassSymbolImpl> origin=null
                    BLOCK type=<unbound IrClassSymbolImpl> origin=PLUSEQ
                      VAR IR_TEMPORARY_VARIABLE name:<receiver> type:test.Holder [val]
                        GET_VAR 'h: test.Holder declared in <root>.test2' type=test.Holder origin=null
                      CALL 'public final fun <set-value> (<set-?>: <unbound IrClassSymbolImpl>): <unbound IrClassSymbolImpl> declared in test.Holder' type=<unbound IrClassSymbolImpl> origin=PLUSEQ
                        $this: GET_VAR 'val <receiver>: test.Holder [val] declared in <root>.test2.<anonymous>' type=test.Holder origin=null
                        <set-?>: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=PLUSEQ
                          $this: CALL 'public final fun <get-value> (): <unbound IrClassSymbolImpl> declared in test.Holder' type=<unbound IrClassSymbolImpl> origin=PLUSEQ
                            $this: GET_VAR 'val <receiver>: test.Holder [val] declared in <root>.test2.<anonymous>' type=test.Holder origin=null
                          1: CONST String type=<unbound IrClassSymbolImpl> value=", OK_NONLOCAL2"
                    RETURN type=<unbound IrClassSymbolImpl> from='public final fun test2 (h: test.Holder, doReturn: <unbound IrClassSymbolImpl>): <unbound IrClassSymbolImpl> declared in <root>'
                      CONST String type=<unbound IrClassSymbolImpl> value="OK_NONLOCAL2"
                  finally: BLOCK type=<unbound IrClassSymbolImpl> origin=null
                    BLOCK type=<unbound IrClassSymbolImpl> origin=PLUSEQ
                      VAR IR_TEMPORARY_VARIABLE name:<receiver> type:test.Holder [val]
                        GET_VAR 'h: test.Holder declared in <root>.test2' type=test.Holder origin=null
                      CALL 'public final fun <set-value> (<set-?>: <unbound IrClassSymbolImpl>): <unbound IrClassSymbolImpl> declared in test.Holder' type=<unbound IrClassSymbolImpl> origin=PLUSEQ
                        $this: GET_VAR 'val <receiver>: test.Holder [val] declared in <root>.test2.<anonymous>' type=test.Holder origin=null
                        <set-?>: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=PLUSEQ
                          $this: CALL 'public final fun <get-value> (): <unbound IrClassSymbolImpl> declared in test.Holder' type=<unbound IrClassSymbolImpl> origin=PLUSEQ
                            $this: GET_VAR 'val <receiver>: test.Holder [val] declared in <root>.test2.<anonymous>' type=test.Holder origin=null
                          1: CONST String type=<unbound IrClassSymbolImpl> value=", OK_NONLOCAL2_FINALLY"
          finallyBlock2: FUN_EXPR type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> origin=LAMBDA
            FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL <> () returnType:<unbound IrClassSymbolImpl>
              BLOCK_BODY
                BLOCK type=<unbound IrClassSymbolImpl> origin=PLUSEQ
                  VAR IR_TEMPORARY_VARIABLE name:<receiver> type:test.Holder [val]
                    GET_VAR 'h: test.Holder declared in <root>.test2' type=test.Holder origin=null
                  CALL 'public final fun <set-value> (<set-?>: <unbound IrClassSymbolImpl>): <unbound IrClassSymbolImpl> declared in test.Holder' type=<unbound IrClassSymbolImpl> origin=PLUSEQ
                    $this: GET_VAR 'val <receiver>: test.Holder [val] declared in <root>.test2.<anonymous>' type=test.Holder origin=null
                    <set-?>: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=PLUSEQ
                      $this: CALL 'public final fun <get-value> (): <unbound IrClassSymbolImpl> declared in test.Holder' type=<unbound IrClassSymbolImpl> origin=PLUSEQ
                        $this: GET_VAR 'val <receiver>: test.Holder [val] declared in <root>.test2.<anonymous>' type=test.Holder origin=null
                      1: CONST String type=<unbound IrClassSymbolImpl> value=", OK_FINALLY"
          res: GET_VAR 'h: test.Holder declared in <root>.test2' type=test.Holder origin=null
        RETURN type=<unbound IrClassSymbolImpl> from='public final fun test2 (h: test.Holder, doReturn: <unbound IrClassSymbolImpl>): <unbound IrClassSymbolImpl> declared in <root>'
          CONST String type=<unbound IrClassSymbolImpl> value="FAIL"
    FUN name:box signature:/box|box(){}[0] visibility:public modality:FINAL <> () returnType:<unbound IrClassSymbolImpl>
      BLOCK_BODY
        VAR name:h type:test.Holder [var]
          CONSTRUCTOR_CALL 'public constructor <init> () [primary] declared in test.Holder' type=test.Holder origin=null
        VAR name:test10 type:<unbound IrClassSymbolImpl> [val]
          CALL 'public final fun test1 (h: test.Holder, doReturn: <unbound IrClassSymbolImpl>): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
            h: GET_VAR 'var h: test.Holder [var] declared in <root>.box' type=test.Holder origin=null
            doReturn: CONST Int type=<unbound IrClassSymbolImpl> value=0
        WHEN type=<unbound IrClassSymbolImpl> origin=IF
          BRANCH
            if: WHEN type=<unbound IrClassSymbolImpl> origin=OROR
              BRANCH
                if: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=EXCLEQ
                  $this: CALL 'public final fun EQEQ (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EXCLEQ
                    arg0: GET_VAR 'val test10: <unbound IrClassSymbolImpl> [val] declared in <root>.box' type=<unbound IrClassSymbolImpl> origin=null
                    arg1: CONST String type=<unbound IrClassSymbolImpl> value="OK_NONLOCAL"
                then: CONST Boolean type=<unbound IrClassSymbolImpl> value=true
              BRANCH
                if: CONST Boolean type=<unbound IrClassSymbolImpl> value=true
                then: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=EXCLEQ
                  $this: CALL 'public final fun EQEQ (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EXCLEQ
                    arg0: CALL 'public final fun <get-value> (): <unbound IrClassSymbolImpl> declared in test.Holder' type=<unbound IrClassSymbolImpl> origin=GET_PROPERTY
                      $this: GET_VAR 'var h: test.Holder [var] declared in <root>.box' type=test.Holder origin=null
                    arg1: CONST String type=<unbound IrClassSymbolImpl> value="OK_NONLOCAL, OK_FINALLY, DO_CALL_EXT_FINALLY"
            then: RETURN type=<unbound IrClassSymbolImpl> from='public final fun box (): <unbound IrClassSymbolImpl> declared in <root>'
              STRING_CONCATENATION type=<unbound IrClassSymbolImpl>
                CONST String type=<unbound IrClassSymbolImpl> value="test10: "
                GET_VAR 'val test10: <unbound IrClassSymbolImpl> [val] declared in <root>.box' type=<unbound IrClassSymbolImpl> origin=null
                CONST String type=<unbound IrClassSymbolImpl> value=", holder: "
                CALL 'public final fun <get-value> (): <unbound IrClassSymbolImpl> declared in test.Holder' type=<unbound IrClassSymbolImpl> origin=GET_PROPERTY
                  $this: GET_VAR 'var h: test.Holder [var] declared in <root>.box' type=test.Holder origin=null
        SET_VAR 'var h: test.Holder [var] declared in <root>.box' type=<unbound IrClassSymbolImpl> origin=EQ
          CONSTRUCTOR_CALL 'public constructor <init> () [primary] declared in test.Holder' type=test.Holder origin=null
        VAR name:test11 type:<unbound IrClassSymbolImpl> [val]
          CALL 'public final fun test1 (h: test.Holder, doReturn: <unbound IrClassSymbolImpl>): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
            h: GET_VAR 'var h: test.Holder [var] declared in <root>.box' type=test.Holder origin=null
            doReturn: CONST Int type=<unbound IrClassSymbolImpl> value=1
        WHEN type=<unbound IrClassSymbolImpl> origin=IF
          BRANCH
            if: WHEN type=<unbound IrClassSymbolImpl> origin=OROR
              BRANCH
                if: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=EXCLEQ
                  $this: CALL 'public final fun EQEQ (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EXCLEQ
                    arg0: GET_VAR 'val test11: <unbound IrClassSymbolImpl> [val] declared in <root>.box' type=<unbound IrClassSymbolImpl> origin=null
                    arg1: CONST String type=<unbound IrClassSymbolImpl> value="OK_NONLOCAL2"
                then: CONST Boolean type=<unbound IrClassSymbolImpl> value=true
              BRANCH
                if: CONST Boolean type=<unbound IrClassSymbolImpl> value=true
                then: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=EXCLEQ
                  $this: CALL 'public final fun EQEQ (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EXCLEQ
                    arg0: CALL 'public final fun <get-value> (): <unbound IrClassSymbolImpl> declared in test.Holder' type=<unbound IrClassSymbolImpl> origin=GET_PROPERTY
                      $this: GET_VAR 'var h: test.Holder [var] declared in <root>.box' type=test.Holder origin=null
                    arg1: CONST String type=<unbound IrClassSymbolImpl> value="LOCAL, OK_NONLOCAL2, OK_FINALLY, DO_CALL_EXT_FINALLY"
            then: RETURN type=<unbound IrClassSymbolImpl> from='public final fun box (): <unbound IrClassSymbolImpl> declared in <root>'
              STRING_CONCATENATION type=<unbound IrClassSymbolImpl>
                CONST String type=<unbound IrClassSymbolImpl> value="test11: "
                GET_VAR 'val test11: <unbound IrClassSymbolImpl> [val] declared in <root>.box' type=<unbound IrClassSymbolImpl> origin=null
                CONST String type=<unbound IrClassSymbolImpl> value=", holder: "
                CALL 'public final fun <get-value> (): <unbound IrClassSymbolImpl> declared in test.Holder' type=<unbound IrClassSymbolImpl> origin=GET_PROPERTY
                  $this: GET_VAR 'var h: test.Holder [var] declared in <root>.box' type=test.Holder origin=null
        SET_VAR 'var h: test.Holder [var] declared in <root>.box' type=<unbound IrClassSymbolImpl> origin=EQ
          CONSTRUCTOR_CALL 'public constructor <init> () [primary] declared in test.Holder' type=test.Holder origin=null
        VAR name:test2 type:<unbound IrClassSymbolImpl> [val]
          CALL 'public final fun test2 (h: test.Holder, doReturn: <unbound IrClassSymbolImpl>): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
            h: GET_VAR 'var h: test.Holder [var] declared in <root>.box' type=test.Holder origin=null
            doReturn: CONST Int type=<unbound IrClassSymbolImpl> value=0
        WHEN type=<unbound IrClassSymbolImpl> origin=IF
          BRANCH
            if: WHEN type=<unbound IrClassSymbolImpl> origin=OROR
              BRANCH
                if: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=EXCLEQ
                  $this: CALL 'public final fun EQEQ (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EXCLEQ
                    arg0: GET_VAR 'val test2: <unbound IrClassSymbolImpl> [val] declared in <root>.box' type=<unbound IrClassSymbolImpl> origin=null
                    arg1: CONST String type=<unbound IrClassSymbolImpl> value="OK_NONLOCAL"
                then: CONST Boolean type=<unbound IrClassSymbolImpl> value=true
              BRANCH
                if: CONST Boolean type=<unbound IrClassSymbolImpl> value=true
                then: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=EXCLEQ
                  $this: CALL 'public final fun EQEQ (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EXCLEQ
                    arg0: CALL 'public final fun <get-value> (): <unbound IrClassSymbolImpl> declared in test.Holder' type=<unbound IrClassSymbolImpl> origin=GET_PROPERTY
                      $this: GET_VAR 'var h: test.Holder [var] declared in <root>.box' type=test.Holder origin=null
                    arg1: CONST String type=<unbound IrClassSymbolImpl> value="OK_NONLOCAL, OK_FINALLY, DO_CALL_EXT_FINALLY"
            then: RETURN type=<unbound IrClassSymbolImpl> from='public final fun box (): <unbound IrClassSymbolImpl> declared in <root>'
              STRING_CONCATENATION type=<unbound IrClassSymbolImpl>
                CONST String type=<unbound IrClassSymbolImpl> value="test20: "
                GET_VAR 'val test2: <unbound IrClassSymbolImpl> [val] declared in <root>.box' type=<unbound IrClassSymbolImpl> origin=null
                CONST String type=<unbound IrClassSymbolImpl> value=", holder: "
                CALL 'public final fun <get-value> (): <unbound IrClassSymbolImpl> declared in test.Holder' type=<unbound IrClassSymbolImpl> origin=GET_PROPERTY
                  $this: GET_VAR 'var h: test.Holder [var] declared in <root>.box' type=test.Holder origin=null
        SET_VAR 'var h: test.Holder [var] declared in <root>.box' type=<unbound IrClassSymbolImpl> origin=EQ
          CONSTRUCTOR_CALL 'public constructor <init> () [primary] declared in test.Holder' type=test.Holder origin=null
        VAR name:test21 type:<unbound IrClassSymbolImpl> [val]
          CALL 'public final fun test2 (h: test.Holder, doReturn: <unbound IrClassSymbolImpl>): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
            h: GET_VAR 'var h: test.Holder [var] declared in <root>.box' type=test.Holder origin=null
            doReturn: CONST Int type=<unbound IrClassSymbolImpl> value=1
        WHEN type=<unbound IrClassSymbolImpl> origin=IF
          BRANCH
            if: WHEN type=<unbound IrClassSymbolImpl> origin=OROR
              BRANCH
                if: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=EXCLEQ
                  $this: CALL 'public final fun EQEQ (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EXCLEQ
                    arg0: GET_VAR 'val test21: <unbound IrClassSymbolImpl> [val] declared in <root>.box' type=<unbound IrClassSymbolImpl> origin=null
                    arg1: CONST String type=<unbound IrClassSymbolImpl> value="OK_NONLOCAL2"
                then: CONST Boolean type=<unbound IrClassSymbolImpl> value=true
              BRANCH
                if: CONST Boolean type=<unbound IrClassSymbolImpl> value=true
                then: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=EXCLEQ
                  $this: CALL 'public final fun EQEQ (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EXCLEQ
                    arg0: CALL 'public final fun <get-value> (): <unbound IrClassSymbolImpl> declared in test.Holder' type=<unbound IrClassSymbolImpl> origin=GET_PROPERTY
                      $this: GET_VAR 'var h: test.Holder [var] declared in <root>.box' type=test.Holder origin=null
                    arg1: CONST String type=<unbound IrClassSymbolImpl> value="LOCAL, OK_NONLOCAL2, OK_NONLOCAL2_FINALLY, OK_FINALLY, DO_CALL_EXT_FINALLY"
            then: RETURN type=<unbound IrClassSymbolImpl> from='public final fun box (): <unbound IrClassSymbolImpl> declared in <root>'
              STRING_CONCATENATION type=<unbound IrClassSymbolImpl>
                CONST String type=<unbound IrClassSymbolImpl> value="test21: "
                GET_VAR 'val test21: <unbound IrClassSymbolImpl> [val] declared in <root>.box' type=<unbound IrClassSymbolImpl> origin=null
                CONST String type=<unbound IrClassSymbolImpl> value=", holder: "
                CALL 'public final fun <get-value> (): <unbound IrClassSymbolImpl> declared in test.Holder' type=<unbound IrClassSymbolImpl> origin=GET_PROPERTY
                  $this: GET_VAR 'var h: test.Holder [var] declared in <root>.box' type=test.Holder origin=null
        RETURN type=<unbound IrClassSymbolImpl> from='public final fun box (): <unbound IrClassSymbolImpl> declared in <root>'
          CONST String type=<unbound IrClassSymbolImpl> value="OK"
