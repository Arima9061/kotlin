MODULE_FRAGMENT name:<main>
  FILE fqName:test fileName:/1.kt
    FUN name:doCall signature:test/doCall|doCall(kotlin.Function1<kotlin.Int,kotlin.Int>;kotlin.Function1<kotlin.Int,kotlin.Unit>){}[0] visibility:public modality:FINAL <> (block:<unbound IrClassSymbolImpl><@[<unbound>(1 = "i")] <unbound IrClassSymbolImpl>, <unbound IrClassSymbolImpl>>, fblock:<unbound IrClassSymbolImpl><@[<unbound>(1 = "i")] <unbound IrClassSymbolImpl>, <unbound IrClassSymbolImpl>>) returnType:<unbound IrClassSymbolImpl> [inline]
      VALUE_PARAMETER name:block index:0 type:<unbound IrClassSymbolImpl><@[<unbound>(1 = "i")] <unbound IrClassSymbolImpl>, <unbound IrClassSymbolImpl>>
      VALUE_PARAMETER name:fblock index:1 type:<unbound IrClassSymbolImpl><@[<unbound>(1 = "i")] <unbound IrClassSymbolImpl>, <unbound IrClassSymbolImpl>>
      BLOCK_BODY
        VAR name:res type:<unbound IrClassSymbolImpl> [var]
          CONST Int type=<unbound IrClassSymbolImpl> value=0
        BLOCK type=<unbound IrClassSymbolImpl> origin=FOR_LOOP
          VAR FOR_LOOP_ITERATOR name:<iterator> type:<unbound IrClassSymbolImpl> [val]
            CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=FOR_LOOP_ITERATOR
              $this: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=RANGE
                $this: CONST Int type=<unbound IrClassSymbolImpl> value=1
                1: CONST Int type=<unbound IrClassSymbolImpl> value=10
          WHILE label=null origin=FOR_LOOP_INNER_WHILE
            condition: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=FOR_LOOP_HAS_NEXT
              $this: GET_VAR 'val <iterator>: <unbound IrClassSymbolImpl> [val] declared in test.doCall' type=<unbound IrClassSymbolImpl> origin=null
            body: BLOCK type=<unbound IrClassSymbolImpl> origin=FOR_LOOP_INNER_WHILE
              VAR FOR_LOOP_VARIABLE name:i type:<unbound IrClassSymbolImpl> [val]
                CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=FOR_LOOP_NEXT
                  $this: GET_VAR 'val <iterator>: <unbound IrClassSymbolImpl> [val] declared in test.doCall' type=<unbound IrClassSymbolImpl> origin=null
              BLOCK type=<unbound IrClassSymbolImpl> origin=null
                TRY type=<unbound IrClassSymbolImpl>
                  try: BLOCK type=<unbound IrClassSymbolImpl> origin=null
                    SET_VAR 'var res: <unbound IrClassSymbolImpl> [var] declared in test.doCall' type=<unbound IrClassSymbolImpl> origin=EQ
                      CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=INVOKE
                        $this: GET_VAR 'block: <unbound IrClassSymbolImpl><@[<unbound>(1 = "i")] <unbound IrClassSymbolImpl>, <unbound IrClassSymbolImpl>> declared in test.doCall' type=<unbound IrClassSymbolImpl><@[<unbound>(1 = "i")] <unbound IrClassSymbolImpl>, <unbound IrClassSymbolImpl>> origin=VARIABLE_AS_FUNCTION
                        1: GET_VAR 'val i: <unbound IrClassSymbolImpl> [val] declared in test.doCall' type=<unbound IrClassSymbolImpl> origin=null
                  finally: BLOCK type=<unbound IrClassSymbolImpl> origin=null
                    BLOCK type=<unbound IrClassSymbolImpl> origin=FOR_LOOP
                      VAR FOR_LOOP_ITERATOR name:<iterator> type:<unbound IrClassSymbolImpl> [val]
                        CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=FOR_LOOP_ITERATOR
                          $this: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=RANGE
                            $this: CONST Int type=<unbound IrClassSymbolImpl> value=1
                            1: CONST Int type=<unbound IrClassSymbolImpl> value=10
                      WHILE label=null origin=FOR_LOOP_INNER_WHILE
                        condition: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=FOR_LOOP_HAS_NEXT
                          $this: GET_VAR 'val <iterator>: <unbound IrClassSymbolImpl> [val] declared in test.doCall' type=<unbound IrClassSymbolImpl> origin=null
                        body: BLOCK type=<unbound IrClassSymbolImpl> origin=FOR_LOOP_INNER_WHILE
                          VAR FOR_LOOP_VARIABLE name:i type:<unbound IrClassSymbolImpl> [val]
                            CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=FOR_LOOP_NEXT
                              $this: GET_VAR 'val <iterator>: <unbound IrClassSymbolImpl> [val] declared in test.doCall' type=<unbound IrClassSymbolImpl> origin=null
                          BLOCK type=<unbound IrClassSymbolImpl> origin=null
                            CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=INVOKE
                              $this: GET_VAR 'fblock: <unbound IrClassSymbolImpl><@[<unbound>(1 = "i")] <unbound IrClassSymbolImpl>, <unbound IrClassSymbolImpl>> declared in test.doCall' type=<unbound IrClassSymbolImpl><@[<unbound>(1 = "i")] <unbound IrClassSymbolImpl>, <unbound IrClassSymbolImpl>> origin=VARIABLE_AS_FUNCTION
                              1: GET_VAR 'val i: <unbound IrClassSymbolImpl> [val] declared in test.doCall' type=<unbound IrClassSymbolImpl> origin=null
        RETURN type=<unbound IrClassSymbolImpl> from='public final fun doCall (block: <unbound IrClassSymbolImpl><@[<unbound>(1 = "i")] <unbound IrClassSymbolImpl>, <unbound IrClassSymbolImpl>>, fblock: <unbound IrClassSymbolImpl><@[<unbound>(1 = "i")] <unbound IrClassSymbolImpl>, <unbound IrClassSymbolImpl>>): <unbound IrClassSymbolImpl> [inline] declared in test'
          GET_VAR 'var res: <unbound IrClassSymbolImpl> [var] declared in test.doCall' type=<unbound IrClassSymbolImpl> origin=null
  FILE fqName:<root> fileName:/2.kt
    CLASS CLASS name:Holder signature:/Holder|null[0] modality:FINAL visibility:public superTypes:[<unbound IrClassSymbolImpl>]
      $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:<root>.Holder
      CONSTRUCTOR signature:/Holder.<init>|<init>(){}[0] visibility:public <> () returnType:<root>.Holder [primary]
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL 'UNBOUND IrConstructorSymbolImpl'
          INSTANCE_INITIALIZER_CALL classDescriptor='CLASS CLASS name:Holder signature:/Holder|null[0] modality:FINAL visibility:public superTypes:[<unbound IrClassSymbolImpl>]'
      PROPERTY name:value signature:/Holder.value|{}value[0] visibility:public modality:FINAL [var]
        FIELD PROPERTY_BACKING_FIELD name:value signature:[ /Holder.value|{}value[0] <- Local[<BF>|FIELD PROPERTY_BACKING_FIELD name:value type:kotlin.Int visibility:private] ] type:<unbound IrClassSymbolImpl> visibility:private
          EXPRESSION_BODY
            CONST Int type=<unbound IrClassSymbolImpl> value=0
        FUN DEFAULT_PROPERTY_ACCESSOR name:<get-value> signature:/Holder.value.<get-value>|<get-value>(){}[0] visibility:public modality:FINAL <> ($this:<root>.Holder) returnType:<unbound IrClassSymbolImpl>
          correspondingProperty: PROPERTY name:value signature:/Holder.value|{}value[0] visibility:public modality:FINAL [var]
          $this: VALUE_PARAMETER name:<this> type:<root>.Holder
          BLOCK_BODY
            RETURN type=<unbound IrClassSymbolImpl> from='public final fun <get-value> (): <unbound IrClassSymbolImpl> declared in <root>.Holder'
              GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:value signature:[ /Holder.value|{}value[0] <- Local[<BF>|FIELD PROPERTY_BACKING_FIELD name:value type:kotlin.Int visibility:private] ] type:<unbound IrClassSymbolImpl> visibility:private' type=<unbound IrClassSymbolImpl> origin=null
                receiver: GET_VAR '<this>: <root>.Holder declared in <root>.Holder.<get-value>' type=<root>.Holder origin=null
        FUN DEFAULT_PROPERTY_ACCESSOR name:<set-value> signature:/Holder.value.<set-value>|<set-value>(kotlin.Int){}[0] visibility:public modality:FINAL <> ($this:<root>.Holder, <set-?>:<unbound IrClassSymbolImpl>) returnType:<unbound IrClassSymbolImpl>
          correspondingProperty: PROPERTY name:value signature:/Holder.value|{}value[0] visibility:public modality:FINAL [var]
          $this: VALUE_PARAMETER name:<this> type:<root>.Holder
          VALUE_PARAMETER name:<set-?> index:0 type:<unbound IrClassSymbolImpl>
          BLOCK_BODY
            SET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:value signature:[ /Holder.value|{}value[0] <- Local[<BF>|FIELD PROPERTY_BACKING_FIELD name:value type:kotlin.Int visibility:private] ] type:<unbound IrClassSymbolImpl> visibility:private' type=<unbound IrClassSymbolImpl> origin=null
              receiver: GET_VAR '<this>: <root>.Holder declared in <root>.Holder.<set-value>' type=<root>.Holder origin=null
              value: GET_VAR '<set-?>: <unbound IrClassSymbolImpl> declared in <root>.Holder.<set-value>' type=<unbound IrClassSymbolImpl> origin=null
    FUN name:test1 signature:/test1|test1(){}[0] visibility:public modality:FINAL <> () returnType:<unbound IrClassSymbolImpl>
      BLOCK_BODY
        VAR name:s type:<unbound IrClassSymbolImpl> [var]
          CONST Int type=<unbound IrClassSymbolImpl> value=0
        TYPE_OP type=<unbound IrClassSymbolImpl> origin=IMPLICIT_COERCION_TO_UNIT typeOperand=<unbound IrClassSymbolImpl>
          CALL 'public final fun doCall (block: <unbound IrClassSymbolImpl><@[<unbound>(1 = "i")] <unbound IrClassSymbolImpl>, <unbound IrClassSymbolImpl>>, fblock: <unbound IrClassSymbolImpl><@[<unbound>(1 = "i")] <unbound IrClassSymbolImpl>, <unbound IrClassSymbolImpl>>): <unbound IrClassSymbolImpl> [inline] declared in test' type=<unbound IrClassSymbolImpl> origin=null
            block: FUN_EXPR type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>, <unbound IrClassSymbolImpl>> origin=LAMBDA
              FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL <> (it:<unbound IrClassSymbolImpl>) returnType:<unbound IrClassSymbolImpl>
                VALUE_PARAMETER name:it index:0 type:<unbound IrClassSymbolImpl>
                BLOCK_BODY
                  SET_VAR 'var s: <unbound IrClassSymbolImpl> [var] declared in <root>.test1' type=<unbound IrClassSymbolImpl> origin=PLUSEQ
                    CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=PLUSEQ
                      $this: GET_VAR 'var s: <unbound IrClassSymbolImpl> [var] declared in <root>.test1' type=<unbound IrClassSymbolImpl> origin=PLUSEQ
                      1: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=MUL
                        $this: GET_VAR 'it: <unbound IrClassSymbolImpl> declared in <root>.test1.<anonymous>' type=<unbound IrClassSymbolImpl> origin=null
                        1: GET_VAR 'it: <unbound IrClassSymbolImpl> declared in <root>.test1.<anonymous>' type=<unbound IrClassSymbolImpl> origin=null
                  RETURN type=<unbound IrClassSymbolImpl> from='local final fun <anonymous> (it: <unbound IrClassSymbolImpl>): <unbound IrClassSymbolImpl> declared in <root>.test1'
                    GET_VAR 'var s: <unbound IrClassSymbolImpl> [var] declared in <root>.test1' type=<unbound IrClassSymbolImpl> origin=null
            fblock: FUN_EXPR type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>, <unbound IrClassSymbolImpl>> origin=LAMBDA
              FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL <> (it:<unbound IrClassSymbolImpl>) returnType:<unbound IrClassSymbolImpl>
                VALUE_PARAMETER name:it index:0 type:<unbound IrClassSymbolImpl>
                BLOCK_BODY
                  SET_VAR 'var s: <unbound IrClassSymbolImpl> [var] declared in <root>.test1' type=<unbound IrClassSymbolImpl> origin=PLUSEQ
                    CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=PLUSEQ
                      $this: GET_VAR 'var s: <unbound IrClassSymbolImpl> [var] declared in <root>.test1' type=<unbound IrClassSymbolImpl> origin=PLUSEQ
                      1: GET_VAR 'it: <unbound IrClassSymbolImpl> declared in <root>.test1.<anonymous>' type=<unbound IrClassSymbolImpl> origin=null
        RETURN type=<unbound IrClassSymbolImpl> from='public final fun test1 (): <unbound IrClassSymbolImpl> declared in <root>'
          GET_VAR 'var s: <unbound IrClassSymbolImpl> [var] declared in <root>.test1' type=<unbound IrClassSymbolImpl> origin=null
    FUN name:test11 signature:/test11|test11(Holder){}[0] visibility:public modality:FINAL <> (h:<root>.Holder) returnType:<unbound IrClassSymbolImpl>
      VALUE_PARAMETER name:h index:0 type:<root>.Holder
      BLOCK_BODY
        RETURN type=<unbound IrClassSymbolImpl> from='public final fun test11 (h: <root>.Holder): <unbound IrClassSymbolImpl> declared in <root>'
          CALL 'public final fun doCall (block: <unbound IrClassSymbolImpl><@[<unbound>(1 = "i")] <unbound IrClassSymbolImpl>, <unbound IrClassSymbolImpl>>, fblock: <unbound IrClassSymbolImpl><@[<unbound>(1 = "i")] <unbound IrClassSymbolImpl>, <unbound IrClassSymbolImpl>>): <unbound IrClassSymbolImpl> [inline] declared in test' type=<unbound IrClassSymbolImpl> origin=null
            block: FUN_EXPR type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>, <unbound IrClassSymbolImpl>> origin=LAMBDA
              FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL <> (it:<unbound IrClassSymbolImpl>) returnType:<unbound IrClassSymbolImpl>
                VALUE_PARAMETER name:it index:0 type:<unbound IrClassSymbolImpl>
                BLOCK_BODY
                  RETURN type=<unbound IrClassSymbolImpl> from='public final fun test11 (h: <root>.Holder): <unbound IrClassSymbolImpl> declared in <root>'
                    CONST Int type=<unbound IrClassSymbolImpl> value=-100
            fblock: FUN_EXPR type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>, <unbound IrClassSymbolImpl>> origin=LAMBDA
              FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL <> (it:<unbound IrClassSymbolImpl>) returnType:<unbound IrClassSymbolImpl>
                VALUE_PARAMETER name:it index:0 type:<unbound IrClassSymbolImpl>
                BLOCK_BODY
                  BLOCK type=<unbound IrClassSymbolImpl> origin=PLUSEQ
                    VAR IR_TEMPORARY_VARIABLE name:<receiver> type:<root>.Holder [val]
                      GET_VAR 'h: <root>.Holder declared in <root>.test11' type=<root>.Holder origin=null
                    CALL 'public final fun <set-value> (<set-?>: <unbound IrClassSymbolImpl>): <unbound IrClassSymbolImpl> declared in <root>.Holder' type=<unbound IrClassSymbolImpl> origin=PLUSEQ
                      $this: GET_VAR 'val <receiver>: <root>.Holder [val] declared in <root>.test11.<anonymous>' type=<root>.Holder origin=null
                      <set-?>: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=PLUSEQ
                        $this: CALL 'public final fun <get-value> (): <unbound IrClassSymbolImpl> declared in <root>.Holder' type=<unbound IrClassSymbolImpl> origin=PLUSEQ
                          $this: GET_VAR 'val <receiver>: <root>.Holder [val] declared in <root>.test11.<anonymous>' type=<root>.Holder origin=null
                        1: GET_VAR 'it: <unbound IrClassSymbolImpl> declared in <root>.test11.<anonymous>' type=<unbound IrClassSymbolImpl> origin=null
    FUN name:box signature:/box|box(){}[0] visibility:public modality:FINAL <> () returnType:<unbound IrClassSymbolImpl>
      BLOCK_BODY
        VAR name:test1 type:<unbound IrClassSymbolImpl> [val]
          CALL 'public final fun test1 (): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
        WHEN type=<unbound IrClassSymbolImpl> origin=IF
          BRANCH
            if: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=EXCLEQ
              $this: CALL 'public final fun EQEQ (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EXCLEQ
                arg0: GET_VAR 'val test1: <unbound IrClassSymbolImpl> [val] declared in <root>.box' type=<unbound IrClassSymbolImpl> origin=null
                arg1: CONST Int type=<unbound IrClassSymbolImpl> value=935
            then: RETURN type=<unbound IrClassSymbolImpl> from='public final fun box (): <unbound IrClassSymbolImpl> declared in <root>'
              STRING_CONCATENATION type=<unbound IrClassSymbolImpl>
                CONST String type=<unbound IrClassSymbolImpl> value="test1: "
                GET_VAR 'val test1: <unbound IrClassSymbolImpl> [val] declared in <root>.box' type=<unbound IrClassSymbolImpl> origin=null
        VAR name:h type:<root>.Holder [val]
          CONSTRUCTOR_CALL 'public constructor <init> () [primary] declared in <root>.Holder' type=<root>.Holder origin=null
        VAR name:test11 type:<unbound IrClassSymbolImpl> [val]
          CALL 'public final fun test11 (h: <root>.Holder): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
            h: GET_VAR 'val h: <root>.Holder [val] declared in <root>.box' type=<root>.Holder origin=null
        WHEN type=<unbound IrClassSymbolImpl> origin=IF
          BRANCH
            if: WHEN type=<unbound IrClassSymbolImpl> origin=ANDAND
              BRANCH
                if: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=EXCLEQ
                  $this: CALL 'public final fun EQEQ (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EXCLEQ
                    arg0: GET_VAR 'val test11: <unbound IrClassSymbolImpl> [val] declared in <root>.box' type=<unbound IrClassSymbolImpl> origin=null
                    arg1: CONST Int type=<unbound IrClassSymbolImpl> value=-100
                then: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=EXCLEQ
                  $this: CALL 'public final fun EQEQ (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EXCLEQ
                    arg0: CALL 'public final fun <get-value> (): <unbound IrClassSymbolImpl> declared in <root>.Holder' type=<unbound IrClassSymbolImpl> origin=GET_PROPERTY
                      $this: GET_VAR 'val h: <root>.Holder [val] declared in <root>.box' type=<root>.Holder origin=null
                    arg1: CONST Int type=<unbound IrClassSymbolImpl> value=55
              BRANCH
                if: CONST Boolean type=<unbound IrClassSymbolImpl> value=true
                then: CONST Boolean type=<unbound IrClassSymbolImpl> value=false
            then: RETURN type=<unbound IrClassSymbolImpl> from='public final fun box (): <unbound IrClassSymbolImpl> declared in <root>'
              STRING_CONCATENATION type=<unbound IrClassSymbolImpl>
                CONST String type=<unbound IrClassSymbolImpl> value="test11: "
                GET_VAR 'val test11: <unbound IrClassSymbolImpl> [val] declared in <root>.box' type=<unbound IrClassSymbolImpl> origin=null
                CONST String type=<unbound IrClassSymbolImpl> value=" holder: "
                CALL 'public final fun <get-value> (): <unbound IrClassSymbolImpl> declared in <root>.Holder' type=<unbound IrClassSymbolImpl> origin=GET_PROPERTY
                  $this: GET_VAR 'val h: <root>.Holder [val] declared in <root>.box' type=<root>.Holder origin=null
        RETURN type=<unbound IrClassSymbolImpl> from='public final fun box (): <unbound IrClassSymbolImpl> declared in <root>'
          CONST String type=<unbound IrClassSymbolImpl> value="OK"
