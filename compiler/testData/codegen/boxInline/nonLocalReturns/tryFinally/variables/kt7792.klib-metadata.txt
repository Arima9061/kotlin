library {
  // module name: <main>

  library fragment {
    // package name: <root>

    // class name: ClassA

    public final class ClassA : kotlin/Any {

      public constructor()

      public final fun test(name1: kotlin/String?, name2: kotlin/String, cond: kotlin/Boolean): kotlin/Unit

      public final val LOCK: kotlin/String /* = ... */
        public final get

      public final var result: kotlin/String
        public final get
        public final set
    }

    package {

      public final fun box(): kotlin/String
    }
  }

  library fragment {
    // package name: test

    package {

      public final fun monitorCall(lock: kotlin/Any): kotlin/Unit

      public final inline fun <T#0 /* R */> mySynchronized(lock: kotlin/Any, block: kotlin/Function0<T#0>): T#0
    }
  }
}
