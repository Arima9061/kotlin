MODULE_FRAGMENT name:<main>
  FILE fqName:test fileName:/1.kt
    FUN name:call signature:test/call|call(kotlin.Function0<0:0>){0ยง<kotlin.Any?>}[0] visibility:public modality:FINAL <R> (f:<unbound IrClassSymbolImpl><R of test.call>) returnType:R of test.call [inline]
      TYPE_PARAMETER name:R index:0 variance: signature:[ test/call|call(kotlin.Function0<0:0>){0ยง<kotlin.Any?>}[0] <- Local[<TP>,0|TYPE_PARAMETER name:R index:0 variance: superTypes:[kotlin.Any?] reified:false] ] superTypes:[<unbound IrClassSymbolImpl>?] reified:false
      VALUE_PARAMETER name:f index:0 type:<unbound IrClassSymbolImpl><R of test.call> [crossinline]
      BLOCK_BODY
        RETURN type=<unbound IrClassSymbolImpl> from='public final fun call <R> (f: <unbound IrClassSymbolImpl><R of test.call>): R of test.call [inline] declared in test'
          CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=R of test.call origin=null
            <1>: <unbound IrClassSymbolImpl><R of test.call>
            <2>: R of test.call
            $receiver: FUN_EXPR type=<unbound IrClassSymbolImpl><R of test.call> origin=LAMBDA
              FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL <> () returnType:R of test.call
                BLOCK_BODY
                  RETURN type=<unbound IrClassSymbolImpl> from='local final fun <anonymous> (): R of test.call declared in test.call'
                    CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=R of test.call origin=INVOKE
                      $this: GET_VAR 'f: <unbound IrClassSymbolImpl><R of test.call> [crossinline] declared in test.call' type=<unbound IrClassSymbolImpl><R of test.call> origin=VARIABLE_AS_FUNCTION
            1: FUN_EXPR type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl><R of test.call>, R of test.call> origin=LAMBDA
              FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL <> (it:<unbound IrClassSymbolImpl><R of test.call>) returnType:R of test.call
                VALUE_PARAMETER name:it index:0 type:<unbound IrClassSymbolImpl><R of test.call>
                BLOCK_BODY
                  RETURN type=<unbound IrClassSymbolImpl> from='local final fun <anonymous> (it: <unbound IrClassSymbolImpl><R of test.call>): R of test.call declared in test.call'
                    CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=R of test.call origin=INVOKE
                      $this: GET_VAR 'it: <unbound IrClassSymbolImpl><R of test.call> declared in test.call.<anonymous>' type=<unbound IrClassSymbolImpl><R of test.call> origin=VARIABLE_AS_FUNCTION
  FILE fqName:<root> fileName:/2.kt
    FUN name:sameName signature:/sameName|sameName(kotlin.Long){}[0] visibility:public modality:FINAL <> (s:<unbound IrClassSymbolImpl>) returnType:<unbound IrClassSymbolImpl>
      VALUE_PARAMETER name:s index:0 type:<unbound IrClassSymbolImpl>
      BLOCK_BODY
        RETURN type=<unbound IrClassSymbolImpl> from='public final fun sameName (s: <unbound IrClassSymbolImpl>): <unbound IrClassSymbolImpl> declared in <root>'
          CALL 'public final fun call <R> (f: <unbound IrClassSymbolImpl><R of test.call>): R of test.call [inline] declared in test' type=<unbound IrClassSymbolImpl> origin=null
            <R>: <unbound IrClassSymbolImpl>
            f: FUN_EXPR type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> origin=LAMBDA
              FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL <> () returnType:<unbound IrClassSymbolImpl>
                BLOCK_BODY
                  RETURN type=<unbound IrClassSymbolImpl> from='local final fun <anonymous> (): <unbound IrClassSymbolImpl> declared in <root>.sameName'
                    GET_VAR 's: <unbound IrClassSymbolImpl> declared in <root>.sameName' type=<unbound IrClassSymbolImpl> origin=null
    FUN name:sameName signature:/sameName|sameName(kotlin.Int){}[0] visibility:public modality:FINAL <> (s:<unbound IrClassSymbolImpl>) returnType:<unbound IrClassSymbolImpl>
      VALUE_PARAMETER name:s index:0 type:<unbound IrClassSymbolImpl>
      BLOCK_BODY
        RETURN type=<unbound IrClassSymbolImpl> from='public final fun sameName (s: <unbound IrClassSymbolImpl>): <unbound IrClassSymbolImpl> declared in <root>'
          CALL 'public final fun call <R> (f: <unbound IrClassSymbolImpl><R of test.call>): R of test.call [inline] declared in test' type=<unbound IrClassSymbolImpl> origin=null
            <R>: <unbound IrClassSymbolImpl>
            f: FUN_EXPR type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> origin=LAMBDA
              FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL <> () returnType:<unbound IrClassSymbolImpl>
                BLOCK_BODY
                  RETURN type=<unbound IrClassSymbolImpl> from='local final fun <anonymous> (): <unbound IrClassSymbolImpl> declared in <root>.sameName'
                    GET_VAR 's: <unbound IrClassSymbolImpl> declared in <root>.sameName' type=<unbound IrClassSymbolImpl> origin=null
    FUN name:box signature:/box|box(){}[0] visibility:public modality:FINAL <> () returnType:<unbound IrClassSymbolImpl>
      BLOCK_BODY
        VAR name:result type:<unbound IrClassSymbolImpl> [val]
          CALL 'public final fun sameName (s: <unbound IrClassSymbolImpl>): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
            s: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
              $this: CONST Int type=<unbound IrClassSymbolImpl> value=1
        WHEN type=<unbound IrClassSymbolImpl> origin=IF
          BRANCH
            if: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=EXCLEQ
              $this: CALL 'public final fun EQEQ (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EXCLEQ
                arg0: GET_VAR 'val result: <unbound IrClassSymbolImpl> [val] declared in <root>.box' type=<unbound IrClassSymbolImpl> origin=null
                arg1: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
                  $this: CONST Int type=<unbound IrClassSymbolImpl> value=1
            then: RETURN type=<unbound IrClassSymbolImpl> from='public final fun box (): <unbound IrClassSymbolImpl> declared in <root>'
              STRING_CONCATENATION type=<unbound IrClassSymbolImpl>
                CONST String type=<unbound IrClassSymbolImpl> value="fail1: "
                GET_VAR 'val result: <unbound IrClassSymbolImpl> [val] declared in <root>.box' type=<unbound IrClassSymbolImpl> origin=null
        VAR name:result2 type:<unbound IrClassSymbolImpl> [val]
          CALL 'public final fun sameName (s: <unbound IrClassSymbolImpl>): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
            s: CONST Int type=<unbound IrClassSymbolImpl> value=2
        WHEN type=<unbound IrClassSymbolImpl> origin=IF
          BRANCH
            if: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=EXCLEQ
              $this: CALL 'public final fun EQEQ (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EXCLEQ
                arg0: GET_VAR 'val result2: <unbound IrClassSymbolImpl> [val] declared in <root>.box' type=<unbound IrClassSymbolImpl> origin=null
                arg1: CONST Int type=<unbound IrClassSymbolImpl> value=2
            then: RETURN type=<unbound IrClassSymbolImpl> from='public final fun box (): <unbound IrClassSymbolImpl> declared in <root>'
              STRING_CONCATENATION type=<unbound IrClassSymbolImpl>
                CONST String type=<unbound IrClassSymbolImpl> value="fail2: "
                GET_VAR 'val result2: <unbound IrClassSymbolImpl> [val] declared in <root>.box' type=<unbound IrClassSymbolImpl> origin=null
        RETURN type=<unbound IrClassSymbolImpl> from='public final fun box (): <unbound IrClassSymbolImpl> declared in <root>'
          CONST String type=<unbound IrClassSymbolImpl> value="OK"
