MODULE_FRAGMENT name:<main>
  FILE fqName:test fileName:/1.kt
    PROPERTY name:MASSERTIONS_ENABLED signature:test/MASSERTIONS_ENABLED|{}MASSERTIONS_ENABLED[0] visibility:public modality:FINAL [val]
      FIELD PROPERTY_BACKING_FIELD name:MASSERTIONS_ENABLED signature:[ test/MASSERTIONS_ENABLED|{}MASSERTIONS_ENABLED[0] <- Local[<BF>|FIELD PROPERTY_BACKING_FIELD name:MASSERTIONS_ENABLED type:kotlin.Boolean visibility:private [final,static]] ] type:<unbound IrClassSymbolImpl> visibility:private [final,static]
        EXPRESSION_BODY
          CONST Boolean type=<unbound IrClassSymbolImpl> value=true
      FUN DEFAULT_PROPERTY_ACCESSOR name:<get-MASSERTIONS_ENABLED> signature:test/MASSERTIONS_ENABLED.<get-MASSERTIONS_ENABLED>|<get-MASSERTIONS_ENABLED>(){}[0] visibility:public modality:FINAL <> () returnType:<unbound IrClassSymbolImpl>
        correspondingProperty: PROPERTY name:MASSERTIONS_ENABLED signature:test/MASSERTIONS_ENABLED|{}MASSERTIONS_ENABLED[0] visibility:public modality:FINAL [val]
        BLOCK_BODY
          RETURN type=<unbound IrClassSymbolImpl> from='public final fun <get-MASSERTIONS_ENABLED> (): <unbound IrClassSymbolImpl> declared in test'
            GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:MASSERTIONS_ENABLED signature:[ test/MASSERTIONS_ENABLED|{}MASSERTIONS_ENABLED[0] <- Local[<BF>|FIELD PROPERTY_BACKING_FIELD name:MASSERTIONS_ENABLED type:kotlin.Boolean visibility:private [final,static]] ] type:<unbound IrClassSymbolImpl> visibility:private [final,static]' type=<unbound IrClassSymbolImpl> origin=null
    FUN name:massert signature:test/massert|massert(kotlin.Boolean;kotlin.Function0<kotlin.String>){}[0] visibility:public modality:FINAL <> (value:<unbound IrClassSymbolImpl>, lazyMessage:<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>>) returnType:<unbound IrClassSymbolImpl> [inline]
      VALUE_PARAMETER name:value index:0 type:<unbound IrClassSymbolImpl>
      VALUE_PARAMETER name:lazyMessage index:1 type:<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>>
      BLOCK_BODY
        WHEN type=<unbound IrClassSymbolImpl> origin=IF
          BRANCH
            if: CALL 'public final fun <get-MASSERTIONS_ENABLED> (): <unbound IrClassSymbolImpl> declared in test' type=<unbound IrClassSymbolImpl> origin=GET_PROPERTY
            then: BLOCK type=<unbound IrClassSymbolImpl> origin=null
              WHEN type=<unbound IrClassSymbolImpl> origin=IF
                BRANCH
                  if: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
                    $this: GET_VAR 'value: <unbound IrClassSymbolImpl> declared in test.massert' type=<unbound IrClassSymbolImpl> origin=null
                  then: BLOCK type=<unbound IrClassSymbolImpl> origin=null
                    VAR name:message type:<unbound IrClassSymbolImpl> [val]
                      CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=INVOKE
                        $this: GET_VAR 'lazyMessage: <unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> declared in test.massert' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> origin=VARIABLE_AS_FUNCTION
                    THROW type=<unbound IrClassSymbolImpl>
                      CONSTRUCTOR_CALL 'UNBOUND IrConstructorSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
                        1: GET_VAR 'val message: <unbound IrClassSymbolImpl> [val] declared in test.massert' type=<unbound IrClassSymbolImpl> origin=null
    FUN name:massert signature:test/massert|massert(kotlin.Boolean;kotlin.Any){}[0] visibility:public modality:FINAL <> (value:<unbound IrClassSymbolImpl>, message:<unbound IrClassSymbolImpl>) returnType:<unbound IrClassSymbolImpl> [inline]
      VALUE_PARAMETER name:value index:0 type:<unbound IrClassSymbolImpl>
      VALUE_PARAMETER name:message index:1 type:<unbound IrClassSymbolImpl>
        EXPRESSION_BODY
          CONST String type=<unbound IrClassSymbolImpl> value="Assertion failed"
      BLOCK_BODY
        WHEN type=<unbound IrClassSymbolImpl> origin=IF
          BRANCH
            if: CALL 'public final fun <get-MASSERTIONS_ENABLED> (): <unbound IrClassSymbolImpl> declared in test' type=<unbound IrClassSymbolImpl> origin=GET_PROPERTY
            then: BLOCK type=<unbound IrClassSymbolImpl> origin=null
              WHEN type=<unbound IrClassSymbolImpl> origin=IF
                BRANCH
                  if: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
                    $this: GET_VAR 'value: <unbound IrClassSymbolImpl> declared in test.massert' type=<unbound IrClassSymbolImpl> origin=null
                  then: BLOCK type=<unbound IrClassSymbolImpl> origin=null
                    THROW type=<unbound IrClassSymbolImpl>
                      CONSTRUCTOR_CALL 'UNBOUND IrConstructorSymbolImpl' type=<unbound IrClassSymbolImpl> origin=null
                        1: GET_VAR 'message: <unbound IrClassSymbolImpl> declared in test.massert' type=<unbound IrClassSymbolImpl> origin=null
  FILE fqName:<root> fileName:/2.kt
    FUN name:box signature:/box|box(){}[0] visibility:public modality:FINAL <> () returnType:<unbound IrClassSymbolImpl>
      BLOCK_BODY
        CALL 'public final fun massert (value: <unbound IrClassSymbolImpl>, message: <unbound IrClassSymbolImpl>): <unbound IrClassSymbolImpl> [inline] declared in test' type=<unbound IrClassSymbolImpl> origin=null
          value: CONST Boolean type=<unbound IrClassSymbolImpl> value=true
        CALL 'public final fun massert (value: <unbound IrClassSymbolImpl>, lazyMessage: <unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>>): <unbound IrClassSymbolImpl> [inline] declared in test' type=<unbound IrClassSymbolImpl> origin=null
          value: CONST Boolean type=<unbound IrClassSymbolImpl> value=true
          lazyMessage: FUN_EXPR type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>> origin=LAMBDA
            FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL <> () returnType:<unbound IrClassSymbolImpl>
              BLOCK_BODY
                RETURN type=<unbound IrClassSymbolImpl> from='local final fun <anonymous> (): <unbound IrClassSymbolImpl> declared in <root>.box'
                  CONST String type=<unbound IrClassSymbolImpl> value="test"
        RETURN type=<unbound IrClassSymbolImpl> from='public final fun box (): <unbound IrClassSymbolImpl> declared in <root>'
          CONST String type=<unbound IrClassSymbolImpl> value="OK"
