MODULE_FRAGMENT name:<main>
  FILE fqName:test fileName:/1.kt
    FUN name:simpleFun signature:test/simpleFun|simpleFun(kotlin.String;kotlin.Function1<kotlin.String,0:0>){0ยง<kotlin.Any?>}[0] visibility:public modality:FINAL <T> (arg:<unbound IrClassSymbolImpl>, lambda:<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>, T of test.simpleFun>) returnType:T of test.simpleFun [inline]
      TYPE_PARAMETER name:T index:0 variance: signature:[ test/simpleFun|simpleFun(kotlin.String;kotlin.Function1<kotlin.String,0:0>){0ยง<kotlin.Any?>}[0] <- Local[<TP>,0|TYPE_PARAMETER name:T index:0 variance: superTypes:[kotlin.Any?] reified:false] ] superTypes:[<unbound IrClassSymbolImpl>?] reified:false
      VALUE_PARAMETER name:arg index:0 type:<unbound IrClassSymbolImpl>
        EXPRESSION_BODY
          CONST String type=<unbound IrClassSymbolImpl> value="O"
      VALUE_PARAMETER name:lambda index:1 type:<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>, T of test.simpleFun>
      BLOCK_BODY
        RETURN type=<unbound IrClassSymbolImpl> from='public final fun simpleFun <T> (arg: <unbound IrClassSymbolImpl>, lambda: <unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>, T of test.simpleFun>): T of test.simpleFun [inline] declared in test'
          CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=T of test.simpleFun origin=INVOKE
            $this: GET_VAR 'lambda: <unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>, T of test.simpleFun> declared in test.simpleFun' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>, T of test.simpleFun> origin=VARIABLE_AS_FUNCTION
            1: GET_VAR 'arg: <unbound IrClassSymbolImpl> declared in test.simpleFun' type=<unbound IrClassSymbolImpl> origin=null
    FUN name:simpleFunR signature:test/simpleFunR|simpleFunR(kotlin.Function1<kotlin.String,0:0>;kotlin.String){0ยง<kotlin.Any?>}[0] visibility:public modality:FINAL <T> (lambda:<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>, T of test.simpleFunR>, arg:<unbound IrClassSymbolImpl>) returnType:T of test.simpleFunR [inline]
      TYPE_PARAMETER name:T index:0 variance: signature:[ test/simpleFunR|simpleFunR(kotlin.Function1<kotlin.String,0:0>;kotlin.String){0ยง<kotlin.Any?>}[0] <- Local[<TP>,0|TYPE_PARAMETER name:T index:0 variance: superTypes:[kotlin.Any?] reified:false] ] superTypes:[<unbound IrClassSymbolImpl>?] reified:false
      VALUE_PARAMETER name:lambda index:0 type:<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>, T of test.simpleFunR>
      VALUE_PARAMETER name:arg index:1 type:<unbound IrClassSymbolImpl>
        EXPRESSION_BODY
          CONST String type=<unbound IrClassSymbolImpl> value="O"
      BLOCK_BODY
        RETURN type=<unbound IrClassSymbolImpl> from='public final fun simpleFunR <T> (lambda: <unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>, T of test.simpleFunR>, arg: <unbound IrClassSymbolImpl>): T of test.simpleFunR [inline] declared in test'
          CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=T of test.simpleFunR origin=INVOKE
            $this: GET_VAR 'lambda: <unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>, T of test.simpleFunR> declared in test.simpleFunR' type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>, T of test.simpleFunR> origin=VARIABLE_AS_FUNCTION
            1: GET_VAR 'arg: <unbound IrClassSymbolImpl> declared in test.simpleFunR' type=<unbound IrClassSymbolImpl> origin=null
  FILE fqName:<root> fileName:/2.kt
    FUN name:simple signature:/simple|simple(){}[0] visibility:public modality:FINAL <> () returnType:<unbound IrClassSymbolImpl>
      BLOCK_BODY
        VAR name:k type:<unbound IrClassSymbolImpl> [val]
          CONST String type=<unbound IrClassSymbolImpl> value="K"
        RETURN type=<unbound IrClassSymbolImpl> from='public final fun simple (): <unbound IrClassSymbolImpl> declared in <root>'
          CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=PLUS
            $this: CALL 'public final fun simpleFun <T> (arg: <unbound IrClassSymbolImpl>, lambda: <unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>, T of test.simpleFun>): T of test.simpleFun [inline] declared in test' type=<unbound IrClassSymbolImpl> origin=null
              <T>: <unbound IrClassSymbolImpl>
              lambda: FUN_EXPR type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>, <unbound IrClassSymbolImpl>> origin=LAMBDA
                FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL <> (it:<unbound IrClassSymbolImpl>) returnType:<unbound IrClassSymbolImpl>
                  VALUE_PARAMETER name:it index:0 type:<unbound IrClassSymbolImpl>
                  BLOCK_BODY
                    RETURN type=<unbound IrClassSymbolImpl> from='local final fun <anonymous> (it: <unbound IrClassSymbolImpl>): <unbound IrClassSymbolImpl> declared in <root>.simple'
                      CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=PLUS
                        $this: GET_VAR 'it: <unbound IrClassSymbolImpl> declared in <root>.simple.<anonymous>' type=<unbound IrClassSymbolImpl> origin=null
                        1: CONST String type=<unbound IrClassSymbolImpl> value="O"
            1: CALL 'public final fun simpleFun <T> (arg: <unbound IrClassSymbolImpl>, lambda: <unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>, T of test.simpleFun>): T of test.simpleFun [inline] declared in test' type=<unbound IrClassSymbolImpl> origin=null
              <T>: <unbound IrClassSymbolImpl>
              arg: CONST String type=<unbound IrClassSymbolImpl> value="K"
              lambda: FUN_EXPR type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>, <unbound IrClassSymbolImpl>> origin=LAMBDA
                FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL <> (it:<unbound IrClassSymbolImpl>) returnType:<unbound IrClassSymbolImpl>
                  VALUE_PARAMETER name:it index:0 type:<unbound IrClassSymbolImpl>
                  BLOCK_BODY
                    RETURN type=<unbound IrClassSymbolImpl> from='local final fun <anonymous> (it: <unbound IrClassSymbolImpl>): <unbound IrClassSymbolImpl> declared in <root>.simple'
                      CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=PLUS
                        $this: GET_VAR 'val k: <unbound IrClassSymbolImpl> [val] declared in <root>.simple' type=<unbound IrClassSymbolImpl> origin=null
                        1: GET_VAR 'it: <unbound IrClassSymbolImpl> declared in <root>.simple.<anonymous>' type=<unbound IrClassSymbolImpl> origin=null
    FUN name:simpleR signature:/simpleR|simpleR(){}[0] visibility:public modality:FINAL <> () returnType:<unbound IrClassSymbolImpl>
      BLOCK_BODY
        VAR name:k type:<unbound IrClassSymbolImpl> [val]
          CONST String type=<unbound IrClassSymbolImpl> value="K"
        RETURN type=<unbound IrClassSymbolImpl> from='public final fun simpleR (): <unbound IrClassSymbolImpl> declared in <root>'
          CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=PLUS
            $this: CALL 'public final fun simpleFunR <T> (lambda: <unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>, T of test.simpleFunR>, arg: <unbound IrClassSymbolImpl>): T of test.simpleFunR [inline] declared in test' type=<unbound IrClassSymbolImpl> origin=null
              <T>: <unbound IrClassSymbolImpl>
              lambda: FUN_EXPR type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>, <unbound IrClassSymbolImpl>> origin=LAMBDA
                FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL <> (it:<unbound IrClassSymbolImpl>) returnType:<unbound IrClassSymbolImpl>
                  VALUE_PARAMETER name:it index:0 type:<unbound IrClassSymbolImpl>
                  BLOCK_BODY
                    RETURN type=<unbound IrClassSymbolImpl> from='local final fun <anonymous> (it: <unbound IrClassSymbolImpl>): <unbound IrClassSymbolImpl> declared in <root>.simpleR'
                      CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=PLUS
                        $this: GET_VAR 'it: <unbound IrClassSymbolImpl> declared in <root>.simpleR.<anonymous>' type=<unbound IrClassSymbolImpl> origin=null
                        1: CONST String type=<unbound IrClassSymbolImpl> value="O"
            1: CALL 'public final fun simpleFunR <T> (lambda: <unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>, T of test.simpleFunR>, arg: <unbound IrClassSymbolImpl>): T of test.simpleFunR [inline] declared in test' type=<unbound IrClassSymbolImpl> origin=null
              <T>: <unbound IrClassSymbolImpl>
              lambda: FUN_EXPR type=<unbound IrClassSymbolImpl><<unbound IrClassSymbolImpl>, <unbound IrClassSymbolImpl>> origin=LAMBDA
                FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL <> (it:<unbound IrClassSymbolImpl>) returnType:<unbound IrClassSymbolImpl>
                  VALUE_PARAMETER name:it index:0 type:<unbound IrClassSymbolImpl>
                  BLOCK_BODY
                    RETURN type=<unbound IrClassSymbolImpl> from='local final fun <anonymous> (it: <unbound IrClassSymbolImpl>): <unbound IrClassSymbolImpl> declared in <root>.simpleR'
                      CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=PLUS
                        $this: GET_VAR 'val k: <unbound IrClassSymbolImpl> [val] declared in <root>.simpleR' type=<unbound IrClassSymbolImpl> origin=null
                        1: GET_VAR 'it: <unbound IrClassSymbolImpl> declared in <root>.simpleR.<anonymous>' type=<unbound IrClassSymbolImpl> origin=null
              arg: CONST String type=<unbound IrClassSymbolImpl> value="K"
    FUN name:box signature:/box|box(){}[0] visibility:public modality:FINAL <> () returnType:<unbound IrClassSymbolImpl>
      BLOCK_BODY
        VAR name:result type:<unbound IrClassSymbolImpl> [var]
          CALL 'public final fun simple (): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
        WHEN type=<unbound IrClassSymbolImpl> origin=IF
          BRANCH
            if: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=EXCLEQ
              $this: CALL 'public final fun EQEQ (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EXCLEQ
                arg0: GET_VAR 'var result: <unbound IrClassSymbolImpl> [var] declared in <root>.box' type=<unbound IrClassSymbolImpl> origin=null
                arg1: CONST String type=<unbound IrClassSymbolImpl> value="OOKK"
            then: RETURN type=<unbound IrClassSymbolImpl> from='public final fun box (): <unbound IrClassSymbolImpl> declared in <root>'
              STRING_CONCATENATION type=<unbound IrClassSymbolImpl>
                CONST String type=<unbound IrClassSymbolImpl> value="fail1: "
                GET_VAR 'var result: <unbound IrClassSymbolImpl> [var] declared in <root>.box' type=<unbound IrClassSymbolImpl> origin=null
        SET_VAR 'var result: <unbound IrClassSymbolImpl> [var] declared in <root>.box' type=<unbound IrClassSymbolImpl> origin=EQ
          CALL 'public final fun simpleR (): <unbound IrClassSymbolImpl> declared in <root>' type=<unbound IrClassSymbolImpl> origin=null
        WHEN type=<unbound IrClassSymbolImpl> origin=IF
          BRANCH
            if: CALL 'UNBOUND IrSimpleFunctionSymbolImpl' type=<unbound IrClassSymbolImpl> origin=EXCLEQ
              $this: CALL 'public final fun EQEQ (arg0: <unbound IrClassSymbolImpl>?, arg1: <unbound IrClassSymbolImpl>?): <unbound IrClassSymbolImpl> declared in kotlin.internal.ir' type=<unbound IrClassSymbolImpl> origin=EXCLEQ
                arg0: GET_VAR 'var result: <unbound IrClassSymbolImpl> [var] declared in <root>.box' type=<unbound IrClassSymbolImpl> origin=null
                arg1: CONST String type=<unbound IrClassSymbolImpl> value="OOKK"
            then: RETURN type=<unbound IrClassSymbolImpl> from='public final fun box (): <unbound IrClassSymbolImpl> declared in <root>'
              STRING_CONCATENATION type=<unbound IrClassSymbolImpl>
                CONST String type=<unbound IrClassSymbolImpl> value="fail2: "
                GET_VAR 'var result: <unbound IrClassSymbolImpl> [var] declared in <root>.box' type=<unbound IrClassSymbolImpl> origin=null
        RETURN type=<unbound IrClassSymbolImpl> from='public final fun box (): <unbound IrClassSymbolImpl> declared in <root>'
          CONST String type=<unbound IrClassSymbolImpl> value="OK"
