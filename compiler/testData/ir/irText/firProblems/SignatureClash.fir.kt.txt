// CHECK:
//   Mangled name: Some
//   Public signature: /Some|null[0]
typealias Some = Function1<Any, String?>
// CHECK:
//   Mangled name: Factory
//   Public signature: /Factory|null[0]
object Factory {
  // CHECK:
  //   Mangled name: Factory#<init>(){}
  //   Public signature: /Factory.<init>|-5645683436151566731[0]
  private constructor() /* primary */ {
    super/*Any*/()
    /* <init>() */

  }

  // CHECK JVM_IR:
  //   Mangled name: Factory#foo(kotlin.String){}kotlin.String
  //   Public signature: /Factory.foo|-5534735991146511619[0]
  // CHECK JS_IR:
  //   Mangled name computed from Ir:         Factory#foo(kotlin.String){}
  //   Mangled name computed from Descriptor: Factory#foo(kotlin.String){}
  //   Mangled name computed from Fir:        Factory#foo(kotlin.String){}kotlin.String
  //   Public signature: /Factory.foo|-5534735991146511619[0]
  fun foo(a: String): String {
    return "Alpha"
  }

  // CHECK JVM_IR:
  //   Mangled name: Factory#foo(kotlin.String;kotlin.Function1<kotlin.Any,kotlin.String?>){}kotlin.String
  //   Public signature: /Factory.foo|-1406038686123493927[0]
  // CHECK JS_IR:
  //   Mangled name computed from Ir:         Factory#foo(kotlin.String;kotlin.Function1<kotlin.Any,kotlin.String?>){}
  //   Mangled name computed from Descriptor: Factory#foo(kotlin.String;kotlin.Function1<kotlin.Any,kotlin.String?>){}
  //   Mangled name computed from Fir:        Factory#foo(kotlin.String;kotlin.Function1<kotlin.Any,kotlin.String?>){}kotlin.String
  //   Public signature: /Factory.foo|-1406038686123493927[0]
  fun foo(a: String, f: Function1<Any, String?>): String {
    return "Omega"
  }

}

// CHECK:
//   Mangled name: Base
//   Public signature: /Base|null[0]
interface Base {

}

// CHECK:
//   Mangled name: Delegate
//   Public signature: /Delegate|null[0]
interface Delegate : Base {
  // CHECK:
  //   Mangled name: Delegate#bar(){}
  //   Public signature: /Delegate.bar|496682602797471549[0]
  abstract fun bar()

}

// CHECK:
//   Mangled name: Derived
//   Public signature: /Derived|null[0]
interface Derived : Delegate {

}

// CHECK:
//   Mangled name: DataClass
//   Public signature: /DataClass|null[0]
data class DataClass : Derived, Delegate {
  // CHECK:
  //   Mangled name: DataClass#<init>(Delegate){}
  //   Public signature: /DataClass.<init>|7426992287025160657[0]
  constructor(delegate: Delegate) /* primary */ {
    super/*Any*/()
    /* <init>() */

  }

  // CHECK:
  //   Mangled name: DataClass#bar(){}
  //   Public signature: /DataClass.bar|496682602797471549[0]
  override fun bar() {
    <this>.#delegate.bar()
  }

  // CHECK:
  //   Mangled name: DataClass{}delegate
  //   Public signature: /DataClass.delegate|-801742451047326070[0]
  val delegate: Delegate
    field = delegate
    // CHECK JVM_IR:
    //   Mangled name: DataClass#<get-delegate>(){}Delegate
    //   Public signature: /DataClass.delegate.<get-delegate>|6133163829830511426[0]
    // CHECK JS_IR:
    //   Mangled name computed from Ir:         DataClass#<get-delegate>(){}
    //   Mangled name computed from Descriptor: DataClass#<get-delegate>(){}
    //   Mangled name computed from Fir:        DataClass#<get-delegate>(){}Delegate
    //   Public signature: /DataClass.delegate.<get-delegate>|6133163829830511426[0]
    get

  // CHECK JVM_IR:
  //   Mangled name: DataClass#component1(){}Delegate
  //   Public signature: /DataClass.component1|748132671697339477[0]
  // CHECK JS_IR:
  //   Mangled name computed from Ir:         DataClass#component1(){}
  //   Mangled name computed from Descriptor: DataClass#component1(){}
  //   Mangled name computed from Fir:        DataClass#component1(){}Delegate
  //   Public signature: /DataClass.component1|748132671697339477[0]
  operator fun component1(): Delegate {
    return <this>.#delegate
  }

  // CHECK JVM_IR:
  //   Mangled name: DataClass#copy(Delegate){}DataClass
  //   Public signature: /DataClass.copy|-3599253859920134304[0]
  // CHECK JS_IR:
  //   Mangled name computed from Ir:         DataClass#copy(Delegate){}
  //   Mangled name computed from Descriptor: DataClass#copy(Delegate){}
  //   Mangled name computed from Fir:        DataClass#copy(Delegate){}DataClass
  //   Public signature: /DataClass.copy|-3599253859920134304[0]
  fun copy(delegate: Delegate = <this>.#delegate): DataClass {
    return DataClass(delegate = delegate)
  }

  // CHECK JVM_IR:
  //   Mangled name: DataClass#equals(kotlin.Any?){}kotlin.Boolean
  //   Public signature: /DataClass.equals|722809408929142791[0]
  // CHECK JS_IR:
  //   Mangled name computed from Ir:         DataClass#equals(kotlin.Any?){}
  //   Mangled name computed from Descriptor: DataClass#equals(kotlin.Any?){}
  //   Mangled name computed from Fir:        DataClass#equals(kotlin.Any?){}kotlin.Boolean
  //   Public signature: /DataClass.equals|722809408929142791[0]
  override fun equals(other: Any?): Boolean {
    when {
      EQEQEQ(arg0 = <this>, arg1 = other) -> return true
    }
    when {
      other !is DataClass -> return false
    }
    val tmp0_other_with_cast: DataClass = other as DataClass
    when {
      EQEQ(arg0 = <this>.#delegate, arg1 = tmp0_other_with_cast.#delegate).not() -> return false
    }
    return true
  }

  // CHECK JVM_IR:
  //   Mangled name: DataClass#hashCode(){}kotlin.Int
  //   Public signature: /DataClass.hashCode|-8048879360829830756[0]
  // CHECK JS_IR:
  //   Mangled name computed from Ir:         DataClass#hashCode(){}
  //   Mangled name computed from Descriptor: DataClass#hashCode(){}
  //   Mangled name computed from Fir:        DataClass#hashCode(){}kotlin.Int
  //   Public signature: /DataClass.hashCode|-8048879360829830756[0]
  override fun hashCode(): Int {
    return <this>.#delegate.hashCode()
  }

  // CHECK JVM_IR:
  //   Mangled name: DataClass#toString(){}kotlin.String
  //   Public signature: /DataClass.toString|6958853723545266802[0]
  // CHECK JS_IR:
  //   Mangled name computed from Ir:         DataClass#toString(){}
  //   Mangled name computed from Descriptor: DataClass#toString(){}
  //   Mangled name computed from Fir:        DataClass#toString(){}kotlin.String
  //   Public signature: /DataClass.toString|6958853723545266802[0]
  override fun toString(): String {
    return "DataClass(delegate=" + <this>.#delegate + ")"
  }

}

