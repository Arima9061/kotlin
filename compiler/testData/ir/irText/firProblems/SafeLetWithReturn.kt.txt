// CHECK:
//   Mangled name: #foo(kotlin.String?){}kotlin.String
//   Public signature: /foo|-459206804338718434[0]
fun foo(s: String?): String {
  { // BLOCK
    val tmp0_safe_receiver: String? = s
    when {
      EQEQ(arg0 = tmp0_safe_receiver, arg1 = null) -> null
      else -> tmp0_safe_receiver.let<String, Nothing>(block = 
        // CHECK:
        //   Mangled name: #foo(kotlin.String?){}kotlin.String#<anonymous>#static(kotlin.String){}kotlin.Nothing
        local fun <anonymous>(it: String): Nothing {
          return it
        }
)
    }
  } /*~> Unit */
  return ""
}

// CHECK:
//   Mangled name: #bar(kotlin.String?;kotlin.String?){}kotlin.String
//   Public signature: /bar|8959405200213373616[0]
fun bar(s: String?, t: String?): String {
  { // BLOCK
    val tmp0_safe_receiver: String? = s
    when {
      EQEQ(arg0 = tmp0_safe_receiver, arg1 = null) -> null
      else -> tmp0_safe_receiver.let<String, Nothing?>(block = 
        // CHECK:
        //   Mangled name: #bar(kotlin.String?;kotlin.String?){}kotlin.String#<anonymous>#static(kotlin.String){}kotlin.Nothing?
        local fun <anonymous>(it: String): Nothing? {
          return { // BLOCK
            val tmp0_safe_receiver: String? = t
            when {
              EQEQ(arg0 = tmp0_safe_receiver, arg1 = null) -> null
              else -> tmp0_safe_receiver.let<String, Nothing>(block = 
                // CHECK:
                //   Mangled name: #bar(kotlin.String?;kotlin.String?){}kotlin.String#<anonymous>#static(kotlin.String){}kotlin.Nothing?#<anonymous>#static(kotlin.String){}kotlin.Nothing
                local fun <anonymous>(it: String): Nothing {
                  return it
                }
)
            }
          }
        }
)
    }
  } /*~> Unit */
  return ""
}

// CHECK:
//   Mangled name: @kotlin.String?{}baz
//   Public signature: /baz|7411160368245609818[0]
val String?.baz: String
  // CHECK:
  //   Mangled name: #<get-baz>@kotlin.String?(){}kotlin.String
  //   Public signature: /baz.<get-baz>|4455067775993214927[0]
  get(): String {
    { // BLOCK
      val tmp0_safe_receiver: String? = <this>
      when {
        EQEQ(arg0 = tmp0_safe_receiver, arg1 = null) -> null
        else -> tmp0_safe_receiver.let<String, Nothing>(block = 
          // CHECK:
          //   Mangled name: #<get-baz>@kotlin.String?(){}kotlin.String#<anonymous>#static(kotlin.String){}kotlin.Nothing
          local fun <anonymous>(it: String): Nothing {
            return it
          }
)
      }
    } /*~> Unit */
    return ""
  }

