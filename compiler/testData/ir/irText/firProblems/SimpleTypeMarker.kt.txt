// CHECK:
//   Mangled name: SimpleTypeMarker
//   Public signature: /SimpleTypeMarker|null[0]
interface SimpleTypeMarker {

}

// CHECK:
//   Mangled name: SimpleType
//   Public signature: /SimpleType|null[0]
class SimpleType : SimpleTypeMarker {
  // CHECK:
  //   Mangled name: SimpleType#<init>(){}
  //   Public signature: /SimpleType.<init>|-5645683436151566731[0]
  constructor() /* primary */ {
    super/*Any*/()
    /* <init>() */

  }

  // CHECK:
  //   Mangled name: SimpleType#foo(){}kotlin.String
  //   Public signature: /SimpleType.foo|485335955883620819[0]
  fun foo(): String {
    return "OK"
  }

}

// CHECK:
//   Mangled name: User
//   Public signature: /User|null[0]
interface User {
  // CHECK:
  //   Mangled name: User#bar@SimpleTypeMarker(){}kotlin.String
  //   Public signature: /User.bar|9149645946452319977[0]
  fun SimpleTypeMarker.bar(): String {
    require(value = <this> is SimpleType)
    return <this> /*as SimpleType */.foo()
  }

}

// CHECK:
//   Mangled name: UserImpl
//   Public signature: /UserImpl|null[0]
class UserImpl {
  // CHECK:
  //   Mangled name: UserImpl#<init>(){}
  //   Public signature: /UserImpl.<init>|-5645683436151566731[0]
  constructor() /* primary */ {
    super/*Any*/()
    /* <init>() */

  }

  // CHECK:
  //   Mangled name: UserImpl#bar@SimpleTypeMarker(){}kotlin.String
  //   Public signature: /UserImpl.bar|9149645946452319977[0]
  fun SimpleTypeMarker.bar(): String {
    require(value = <this> is SimpleType)
    return <this> /*as SimpleType */.foo()
  }

}

