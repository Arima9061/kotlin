// CHECK:
//   Mangled name: PropAlias
//   Public signature: [ File '<unknown>' <- /PropAlias|null[0] ]
private typealias PropAlias<T : Any?> = KProperty1<T, Any?>?
// CHECK JVM_IR:
//   Mangled name: #box(){}kotlin.String
//   Public signature: /box|-9347091776561469[0]
// CHECK JS_IR:
//   Mangled name computed from Ir:         #box(){}
//   Mangled name computed from Descriptor: #box(){}
//   Mangled name computed from Fir:        #box(){}kotlin.String
//   Public signature: /box|-9347091776561469[0]
fun box(): String {
  val backRefProp: KProperty1<Foo, Any?>? = Foo::bar
  when {
    EQEQ(arg0 = backRefProp, arg1 = null).not() -> return backRefProp.get(receiver = Foo()) as String
  }
  return "FAIL"
}

// CHECK:
//   Mangled name: Foo
//   Public signature: /Foo|null[0]
class Foo {
  // CHECK:
  //   Mangled name: Foo#<init>(){}
  //   Public signature: /Foo.<init>|-5645683436151566731[0]
  constructor() /* primary */ {
    super/*Any*/()
    /* <init>() */

  }

  // CHECK:
  //   Mangled name: Foo{}bar
  //   Public signature: /Foo.bar|-7864284097863469857[0]
  val bar: String
    field = "OK"
    // CHECK JVM_IR:
    //   Mangled name: Foo#<get-bar>(){}kotlin.String
    //   Public signature: /Foo.bar.<get-bar>|3423724227669014303[0]
    // CHECK JS_IR:
    //   Mangled name computed from Ir:         Foo#<get-bar>(){}
    //   Mangled name computed from Descriptor: Foo#<get-bar>(){}
    //   Mangled name computed from Fir:        Foo#<get-bar>(){}kotlin.String
    //   Public signature: /Foo.bar.<get-bar>|3423724227669014303[0]
    get

}

