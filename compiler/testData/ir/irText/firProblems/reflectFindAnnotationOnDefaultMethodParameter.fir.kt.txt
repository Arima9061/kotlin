// CHECK:
//   Mangled name: #box(){}kotlin.String
//   Public signature: /box|-9347091776561469[0]
fun box(): String {
  val impl: <no name provided> = { // BLOCK
    // CHECK:
    //   Mangled name computed from Ir:         #box(){}kotlin.String.<no name provided>
    //   Mangled name computed from Descriptor: #box(){}kotlin.String.<no name provided>
    //   Mangled name computed from Fir:        <anonymous>
    local class <no name provided> : I {
      // CHECK:
      //   Mangled name computed from Ir:         #box(){}kotlin.String.<no name provided>#<init>(){}
      //   Mangled name computed from Descriptor: #box(){}kotlin.String.<no name provided>#<init>(){}
      //   Mangled name computed from Fir:        #<init>(){}
      constructor() /* primary */ {
        super/*Any*/()
        /* <init>() */

      }

    }

    <no name provided>()
  }
  val method: @FlexibleNullability Method? = impl.<get-javaClass><<no name provided>>().getMethod(p0 = "m", p1 = [String::class.<get-java><String>()])
  val parameter: @FlexibleNullability Parameter? = method.getParameters().get(index = 0)
  val size: Int = parameter.getAnnotations().<get-size>()
  when {
    EQEQ(arg0 = size, arg1 = 1) -> return "OK"
  }
  return "ERR: " + size
}

// CHECK:
//   Mangled name: Ann
//   Public signature: /Ann|null[0]
open annotation class Ann : Annotation {
  // CHECK:
  //   Mangled name: Ann#<init>(){}
  //   Public signature: /Ann.<init>|-5645683436151566731[0]
  constructor() /* primary */ {
    super/*Any*/()
    /* <init>() */

  }

}

// CHECK:
//   Mangled name: I
//   Public signature: /I|null[0]
interface I {
  // CHECK:
  //   Mangled name: I#m(kotlin.String){}
  //   Public signature: /I.m|934693771674457301[0]
  fun m(@Ann s: String) {
  }

}

