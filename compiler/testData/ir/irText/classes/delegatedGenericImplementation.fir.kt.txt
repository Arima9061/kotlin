// CHECK:
//   Mangled name: IBase
//   Public signature: /IBase|null[0]
interface IBase<A : Any?> {
  // CHECK:
  //   Mangled name: IBase#foo(1:0;0:0){0§<kotlin.Any?>}
  //   Public signature: /IBase.foo|406069289574534187[0]
  abstract fun <B : Any?> foo(a: A, b: B)
  // CHECK:
  //   Mangled name computed from Ir:         IBase@0:0{0§<kotlin.Any?>}id
  //   Mangled name computed from Descriptor: could not compute mangled name: java.lang.IllegalArgumentException: No container found for type parameter 'C' of 'public abstract fun <C> C.`<get-id>`(): Map<A, C>? defined in IBase'
  //   Mangled name computed from Fir:        IBase@0:0{0§<kotlin.Any?>}id
  //   Public signature: /IBase.id|6409895071901545951[0]
  abstract val <C : Any?> C.id: Map<A, C>?
    // CHECK JVM_IR:
    //   Mangled name computed from Ir:         IBase#<get-id>@0:0(){0§<kotlin.Any?>}kotlin.collections.Map<1:0,0:0>?
    //   Mangled name computed from Descriptor: could not compute mangled name: java.lang.IllegalArgumentException: No container found for type parameter 'C' of 'public abstract fun <C> C.`<get-id>`(): Map<A, C>? defined in IBase'
    //   Mangled name computed from Fir:        IBase#<get-id>@0:0(){0§<kotlin.Any?>}kotlin.collections.Map<1:0,0:0>?
    //   Public signature: /IBase.id.<get-id>|-1161899104741266586[0]
    // CHECK JS_IR:
    //   Mangled name computed from Ir:         IBase#<get-id>@0:0(){0§<kotlin.Any?>}
    //   Mangled name computed from Descriptor: could not compute mangled name: java.lang.IllegalArgumentException: No container found for type parameter 'C' of 'public abstract fun <C> C.`<get-id>`(): Map<A, C>? defined in IBase'
    //   Mangled name computed from Fir:        IBase#<get-id>@0:0(){0§<kotlin.Any?>}kotlin.collections.Map<1:0,0:0>?
    //   Public signature: /IBase.id.<get-id>|-1161899104741266586[0]
    abstract get

  // CHECK:
  //   Mangled name computed from Ir:         IBase@kotlin.collections.List<0:0>{0§<kotlin.Any?>}x
  //   Mangled name computed from Descriptor: could not compute mangled name: java.lang.IllegalArgumentException: No container found for type parameter 'D' of 'public abstract fun <D> List<D>.`<get-x>`(): D? defined in IBase'
  //   Mangled name computed from Fir:        IBase@kotlin.collections.List<0:0>{0§<kotlin.Any?>}x
  //   Public signature: /IBase.x|-197950632589282220[0]
  abstract var <D : Any?> List<D>.x: D?
    // CHECK JVM_IR:
    //   Mangled name computed from Ir:         IBase#<get-x>@kotlin.collections.List<0:0>(){0§<kotlin.Any?>}0:0?
    //   Mangled name computed from Descriptor: could not compute mangled name: java.lang.IllegalArgumentException: No container found for type parameter 'D' of 'public abstract fun <D> List<D>.`<get-x>`(): D? defined in IBase'
    //   Mangled name computed from Fir:        IBase#<get-x>@kotlin.collections.List<0:0>(){0§<kotlin.Any?>}0:0?
    //   Public signature: /IBase.x.<get-x>|1915131689713400313[0]
    // CHECK JS_IR:
    //   Mangled name computed from Ir:         IBase#<get-x>@kotlin.collections.List<0:0>(){0§<kotlin.Any?>}
    //   Mangled name computed from Descriptor: could not compute mangled name: java.lang.IllegalArgumentException: No container found for type parameter 'D' of 'public abstract fun <D> List<D>.`<get-x>`(): D? defined in IBase'
    //   Mangled name computed from Fir:        IBase#<get-x>@kotlin.collections.List<0:0>(){0§<kotlin.Any?>}0:0?
    //   Public signature: /IBase.x.<get-x>|1915131689713400313[0]
    abstract get
    // CHECK:
    //   Mangled name computed from Ir:         IBase#<set-x>@kotlin.collections.List<0:0>(0:0?){0§<kotlin.Any?>}
    //   Mangled name computed from Descriptor: could not compute mangled name: java.lang.IllegalArgumentException: No container found for type parameter 'D' of 'public abstract fun <D> List<D>.`<set-x>`(`<set-?>`: D?): Unit defined in IBase'
    //   Mangled name computed from Fir:        IBase#<set-x>@kotlin.collections.List<0:0>(0:0?){0§<kotlin.Any?>}
    //   Public signature: /IBase.x.<set-x>|7048513426934671771[0]
    abstract set

}

// CHECK:
//   Mangled name: Test1
//   Public signature: /Test1|null[0]
class Test1<E : Any?> : IBase<E> {
  // CHECK:
  //   Mangled name computed from Ir:         Test1#<init>(IBase<1:0>){}
  //   Mangled name computed from Descriptor: Test1#<init>(IBase<1:0>){}
  //   Mangled name computed from Fir:        Test1#<init>(IBase<0:-1>){}
  //   Public signature: /Test1.<init>|4872450719580400953[0]
  constructor(i: IBase<E>) /* primary */ {
    super/*Any*/()
    /* <init>() */

  }

  // CHECK:
  //   Mangled name: Test1#foo(1:0;0:0){0§<kotlin.Any?>}
  //   Public signature: /Test1.foo|406069289574534187[0]
  override fun <B : Any?> foo(a: E, b: B) {
    <this>.#$$delegate_0.foo<B>(a = a, b = b)
  }

  // CHECK:
  //   Mangled name computed from Ir:         Test1@0:0{0§<kotlin.Any?>}id
  //   Mangled name computed from Descriptor: could not compute mangled name: java.lang.IllegalArgumentException: No container found for type parameter 'C' of 'public open fun <C> C.`<get-id>`(): Map<E, C>? defined in Test1'
  //   Mangled name computed from Fir:        Test1@0:0{0§<kotlin.Any?>}id
  //   Public signature: /Test1.id|6409895071901545951[0]
  override val <C : Any?> C.id: Map<E, C>?
    // CHECK JVM_IR:
    //   Mangled name computed from Ir:         Test1#<get-id>@0:0(){0§<kotlin.Any?>}kotlin.collections.Map<1:0,0:0>?
    //   Mangled name computed from Descriptor: could not compute mangled name: java.lang.IllegalArgumentException: No container found for type parameter 'C' of 'public open fun <C> C.`<get-id>`(): Map<E, C>? defined in Test1'
    //   Public signature: /Test1.id.<get-id>|-1161899104741266586[0]
    // CHECK JS_IR:
    //   Mangled name computed from Ir:         Test1#<get-id>@0:0(){0§<kotlin.Any?>}
    //   Mangled name computed from Descriptor: could not compute mangled name: java.lang.IllegalArgumentException: No container found for type parameter 'C' of 'public open fun <C> C.`<get-id>`(): Map<E, C>? defined in Test1'
    //   Public signature: /Test1.id.<get-id>|-1161899104741266586[0]
    override get(): Map<E, C>? {
      return (<this>.#$$delegate_0, <this>).<get-id><C>()
    }

  // CHECK:
  //   Mangled name computed from Ir:         Test1@kotlin.collections.List<0:0>{0§<kotlin.Any?>}x
  //   Mangled name computed from Descriptor: could not compute mangled name: java.lang.IllegalArgumentException: No container found for type parameter 'D' of 'public open fun <D> List<D>.`<get-x>`(): D? defined in Test1'
  //   Mangled name computed from Fir:        Test1@kotlin.collections.List<0:0>{0§<kotlin.Any?>}x
  //   Public signature: /Test1.x|-197950632589282220[0]
  override var <D : Any?> List<D>.x: D?
    // CHECK JVM_IR:
    //   Mangled name computed from Ir:         Test1#<get-x>@kotlin.collections.List<0:0>(){0§<kotlin.Any?>}0:0?
    //   Mangled name computed from Descriptor: could not compute mangled name: java.lang.IllegalArgumentException: No container found for type parameter 'D' of 'public open fun <D> List<D>.`<get-x>`(): D? defined in Test1'
    //   Public signature: /Test1.x.<get-x>|1915131689713400313[0]
    // CHECK JS_IR:
    //   Mangled name computed from Ir:         Test1#<get-x>@kotlin.collections.List<0:0>(){0§<kotlin.Any?>}
    //   Mangled name computed from Descriptor: could not compute mangled name: java.lang.IllegalArgumentException: No container found for type parameter 'D' of 'public open fun <D> List<D>.`<get-x>`(): D? defined in Test1'
    //   Public signature: /Test1.x.<get-x>|1915131689713400313[0]
    override get(): D? {
      return (<this>.#$$delegate_0, <this>).<get-x><D>()
    }
    // CHECK:
    //   Mangled name computed from Ir:         Test1#<set-x>@kotlin.collections.List<0:0>(0:0?){0§<kotlin.Any?>}
    //   Mangled name computed from Descriptor: could not compute mangled name: java.lang.IllegalArgumentException: No container found for type parameter 'D' of 'public open fun <D> List<D>.`<set-x>`(`<set-?>`: D?): Unit defined in Test1'
    //   Public signature: /Test1.x.<set-x>|7048513426934671771[0]
    override set(<set-?>: D?) {
      (<this>.#$$delegate_0, <this>).<set-x><D>(<set-?> = <set-?>)
    }

  // CHECK JVM_IR:
  //   Mangled name computed from Ir:         Test1.$$delegate_0
  //   Mangled name computed from Descriptor: Test1{}$$delegate_0#jf
  // CHECK JS_IR:
  //   Mangled name computed from Ir:         Test1.$$delegate_0
  //   Mangled name computed from Descriptor: Test1{}$$delegate_0
  private /* final field */ val $$delegate_0: IBase<E> = i

}

// CHECK:
//   Mangled name: Test2
//   Public signature: /Test2|null[0]
class Test2 : IBase<String> {
  // CHECK:
  //   Mangled name: Test2#<init>(IBase<kotlin.String>){}
  //   Public signature: /Test2.<init>|4395202944622832808[0]
  constructor(j: IBase<String>) /* primary */ {
    super/*Any*/()
    /* <init>() */

  }

  // CHECK:
  //   Mangled name: Test2#foo(kotlin.String;0:0){0§<kotlin.Any?>}
  //   Public signature: /Test2.foo|3497909443104319155[0]
  override fun <B : Any?> foo(a: String, b: B) {
    <this>.#j.foo<B>(a = a, b = b)
  }

  // CHECK:
  //   Mangled name computed from Ir:         Test2@0:0{0§<kotlin.Any?>}id
  //   Mangled name computed from Descriptor: could not compute mangled name: java.lang.IllegalArgumentException: No container found for type parameter 'C' of 'public open fun <C> C.`<get-id>`(): Map<String, C>? defined in Test2'
  //   Mangled name computed from Fir:        Test2@0:0{0§<kotlin.Any?>}id
  //   Public signature: /Test2.id|6409895071901545951[0]
  override val <C : Any?> C.id: Map<String, C>?
    // CHECK JVM_IR:
    //   Mangled name computed from Ir:         Test2#<get-id>@0:0(){0§<kotlin.Any?>}kotlin.collections.Map<kotlin.String,0:0>?
    //   Mangled name computed from Descriptor: could not compute mangled name: java.lang.IllegalArgumentException: No container found for type parameter 'C' of 'public open fun <C> C.`<get-id>`(): Map<String, C>? defined in Test2'
    //   Public signature: /Test2.id.<get-id>|5038832815964071118[0]
    // CHECK JS_IR:
    //   Mangled name computed from Ir:         Test2#<get-id>@0:0(){0§<kotlin.Any?>}
    //   Mangled name computed from Descriptor: could not compute mangled name: java.lang.IllegalArgumentException: No container found for type parameter 'C' of 'public open fun <C> C.`<get-id>`(): Map<String, C>? defined in Test2'
    //   Public signature: /Test2.id.<get-id>|5038832815964071118[0]
    override get(): Map<String, C>? {
      return (<this>.#j, <this>).<get-id><C>()
    }

  // CHECK:
  //   Mangled name computed from Ir:         Test2@kotlin.collections.List<0:0>{0§<kotlin.Any?>}x
  //   Mangled name computed from Descriptor: could not compute mangled name: java.lang.IllegalArgumentException: No container found for type parameter 'D' of 'public open fun <D> List<D>.`<get-x>`(): D? defined in Test2'
  //   Mangled name computed from Fir:        Test2@kotlin.collections.List<0:0>{0§<kotlin.Any?>}x
  //   Public signature: /Test2.x|-197950632589282220[0]
  override var <D : Any?> List<D>.x: D?
    // CHECK JVM_IR:
    //   Mangled name computed from Ir:         Test2#<get-x>@kotlin.collections.List<0:0>(){0§<kotlin.Any?>}0:0?
    //   Mangled name computed from Descriptor: could not compute mangled name: java.lang.IllegalArgumentException: No container found for type parameter 'D' of 'public open fun <D> List<D>.`<get-x>`(): D? defined in Test2'
    //   Public signature: /Test2.x.<get-x>|1915131689713400313[0]
    // CHECK JS_IR:
    //   Mangled name computed from Ir:         Test2#<get-x>@kotlin.collections.List<0:0>(){0§<kotlin.Any?>}
    //   Mangled name computed from Descriptor: could not compute mangled name: java.lang.IllegalArgumentException: No container found for type parameter 'D' of 'public open fun <D> List<D>.`<get-x>`(): D? defined in Test2'
    //   Public signature: /Test2.x.<get-x>|1915131689713400313[0]
    override get(): D? {
      return (<this>.#j, <this>).<get-x><D>()
    }
    // CHECK:
    //   Mangled name computed from Ir:         Test2#<set-x>@kotlin.collections.List<0:0>(0:0?){0§<kotlin.Any?>}
    //   Mangled name computed from Descriptor: could not compute mangled name: java.lang.IllegalArgumentException: No container found for type parameter 'D' of 'public open fun <D> List<D>.`<set-x>`(`<set-?>`: D?): Unit defined in Test2'
    //   Public signature: /Test2.x.<set-x>|7048513426934671771[0]
    override set(<set-?>: D?) {
      (<this>.#j, <this>).<set-x><D>(<set-?> = <set-?>)
    }

  // CHECK:
  //   Mangled name: Test2{}j
  //   Public signature: /Test2.j|-6836075379230315579[0]
  var j: IBase<String>
    field = j
    // CHECK JVM_IR:
    //   Mangled name: Test2#<get-j>(){}IBase<kotlin.String>
    //   Public signature: /Test2.j.<get-j>|-6883763672420899739[0]
    // CHECK JS_IR:
    //   Mangled name computed from Ir:         Test2#<get-j>(){}
    //   Mangled name computed from Descriptor: Test2#<get-j>(){}
    //   Mangled name computed from Fir:        Test2#<get-j>(){}IBase<kotlin.String>
    //   Public signature: /Test2.j.<get-j>|-6883763672420899739[0]
    get
    // CHECK:
    //   Mangled name: Test2#<set-j>(IBase<kotlin.String>){}
    //   Public signature: /Test2.j.<set-j>|4329154110216130240[0]
    set

}

