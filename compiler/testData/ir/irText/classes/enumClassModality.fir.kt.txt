// CHECK:
//   Mangled name: TestFinalEnum1
//   Public signature: /TestFinalEnum1|null[0]
enum class TestFinalEnum1 : Enum<TestFinalEnum1> {
  // CHECK:
  //   Mangled name: TestFinalEnum1#<init>(){}
  //   Public signature: /TestFinalEnum1.<init>|-5645683436151566731[0]
  private constructor() /* primary */ {
    super/*Enum*/<TestFinalEnum1>()
    /* <init>() */

  }

  // CHECK:
  //   Mangled name: TestFinalEnum1.X1
  //   Public signature: /TestFinalEnum1.X1|null[0]
  X1 = TestFinalEnum1()

  // CHECK:
  //   Mangled name: TestFinalEnum1#values#static(){}kotlin.Array<TestFinalEnum1>
  //   Public signature: /TestFinalEnum1.values|-2181276672467921798[0]
  fun values(): Array<TestFinalEnum1> /* Synthetic body for ENUM_VALUES */

  // CHECK:
  //   Mangled name: TestFinalEnum1#valueOf#static(kotlin.String){}TestFinalEnum1
  //   Public signature: /TestFinalEnum1.valueOf|-6956480038617460042[0]
  fun valueOf(value: String): TestFinalEnum1 /* Synthetic body for ENUM_VALUEOF */

  // CHECK:
  //   Mangled name: TestFinalEnum1#static{}entries
  //   Public signature: /TestFinalEnum1.entries|-5134227801081826149[0]
  val entries: EnumEntries<TestFinalEnum1>
    // CHECK:
    //   Mangled name computed from Ir:         TestFinalEnum1#<get-entries>#static(){}kotlin.enums.EnumEntries<TestFinalEnum1>
    //   Mangled name computed from Descriptor: TestFinalEnum1#<get-entries>#static(){}kotlin.enums.EnumEntries<TestFinalEnum1>
    //   Mangled name computed from Fir:        #<get-entries>#static(){}kotlin.enums.EnumEntries<TestFinalEnum1>
    //   Public signature: /TestFinalEnum1.entries.<get-entries>|7793286316162597646[0]
    get(): EnumEntries<TestFinalEnum1> /* Synthetic body for ENUM_ENTRIES */

}

// CHECK:
//   Mangled name: TestFinalEnum2
//   Public signature: /TestFinalEnum2|null[0]
open enum class TestFinalEnum2 : Enum<TestFinalEnum2> {
  // CHECK:
  //   Mangled name: TestFinalEnum2#<init>(kotlin.Int){}
  //   Public signature: /TestFinalEnum2.<init>|-5182794243525578284[0]
  private constructor(x: Int) /* primary */ {
    super/*Enum*/<TestFinalEnum2>()
    /* <init>() */

  }

  // CHECK:
  //   Mangled name: TestFinalEnum2{}x
  //   Public signature: /TestFinalEnum2.x|-8060530855978347579[0]
  val x: Int
    field = x
    // CHECK:
    //   Mangled name: TestFinalEnum2#<get-x>(){}kotlin.Int
    //   Public signature: /TestFinalEnum2.x.<get-x>|4966956098150895696[0]
    get

  // CHECK:
  //   Mangled name: TestFinalEnum2.X1
  //   Public signature: /TestFinalEnum2.X1|null[0]
  X1 = TestFinalEnum2(x = 1)

  // CHECK:
  //   Mangled name: TestFinalEnum2#values#static(){}kotlin.Array<TestFinalEnum2>
  //   Public signature: /TestFinalEnum2.values|2453561414820060883[0]
  fun values(): Array<TestFinalEnum2> /* Synthetic body for ENUM_VALUES */

  // CHECK:
  //   Mangled name: TestFinalEnum2#valueOf#static(kotlin.String){}TestFinalEnum2
  //   Public signature: /TestFinalEnum2.valueOf|-780401890225518867[0]
  fun valueOf(value: String): TestFinalEnum2 /* Synthetic body for ENUM_VALUEOF */

  // CHECK:
  //   Mangled name: TestFinalEnum2#static{}entries
  //   Public signature: /TestFinalEnum2.entries|-5134227801081826149[0]
  val entries: EnumEntries<TestFinalEnum2>
    // CHECK:
    //   Mangled name computed from Ir:         TestFinalEnum2#<get-entries>#static(){}kotlin.enums.EnumEntries<TestFinalEnum2>
    //   Mangled name computed from Descriptor: TestFinalEnum2#<get-entries>#static(){}kotlin.enums.EnumEntries<TestFinalEnum2>
    //   Mangled name computed from Fir:        #<get-entries>#static(){}kotlin.enums.EnumEntries<TestFinalEnum2>
    //   Public signature: /TestFinalEnum2.entries.<get-entries>|7934736600478259880[0]
    get(): EnumEntries<TestFinalEnum2> /* Synthetic body for ENUM_ENTRIES */

}

// CHECK:
//   Mangled name: TestFinalEnum3
//   Public signature: /TestFinalEnum3|null[0]
enum class TestFinalEnum3 : Enum<TestFinalEnum3> {
  // CHECK:
  //   Mangled name: TestFinalEnum3#<init>(){}
  //   Public signature: /TestFinalEnum3.<init>|-5645683436151566731[0]
  private constructor() /* primary */ {
    super/*Enum*/<TestFinalEnum3>()
    /* <init>() */

  }

  // CHECK:
  //   Mangled name: TestFinalEnum3.X1
  //   Public signature: /TestFinalEnum3.X1|null[0]
  X1 = TestFinalEnum3()

  // CHECK:
  //   Mangled name: TestFinalEnum3#doStuff(){}
  //   Public signature: /TestFinalEnum3.doStuff|7141990572475111133[0]
  fun doStuff() {
  }

  // CHECK:
  //   Mangled name: TestFinalEnum3#values#static(){}kotlin.Array<TestFinalEnum3>
  //   Public signature: /TestFinalEnum3.values|4010199590602977121[0]
  fun values(): Array<TestFinalEnum3> /* Synthetic body for ENUM_VALUES */

  // CHECK:
  //   Mangled name: TestFinalEnum3#valueOf#static(kotlin.String){}TestFinalEnum3
  //   Public signature: /TestFinalEnum3.valueOf|-7660458486476045816[0]
  fun valueOf(value: String): TestFinalEnum3 /* Synthetic body for ENUM_VALUEOF */

  // CHECK:
  //   Mangled name: TestFinalEnum3#static{}entries
  //   Public signature: /TestFinalEnum3.entries|-5134227801081826149[0]
  val entries: EnumEntries<TestFinalEnum3>
    // CHECK:
    //   Mangled name computed from Ir:         TestFinalEnum3#<get-entries>#static(){}kotlin.enums.EnumEntries<TestFinalEnum3>
    //   Mangled name computed from Descriptor: TestFinalEnum3#<get-entries>#static(){}kotlin.enums.EnumEntries<TestFinalEnum3>
    //   Mangled name computed from Fir:        #<get-entries>#static(){}kotlin.enums.EnumEntries<TestFinalEnum3>
    //   Public signature: /TestFinalEnum3.entries.<get-entries>|-3503795261994851998[0]
    get(): EnumEntries<TestFinalEnum3> /* Synthetic body for ENUM_ENTRIES */

}

// CHECK:
//   Mangled name: TestOpenEnum1
//   Public signature: /TestOpenEnum1|null[0]
open enum class TestOpenEnum1 : Enum<TestOpenEnum1> {
  // CHECK:
  //   Mangled name: TestOpenEnum1#<init>(){}
  //   Public signature: /TestOpenEnum1.<init>|-5645683436151566731[0]
  private constructor() /* primary */ {
    super/*Enum*/<TestOpenEnum1>()
    /* <init>() */

  }

  // CHECK:
  //   Mangled name: TestOpenEnum1.X1
  //   Public signature: /TestOpenEnum1.X1|null[0]

  X1 = X1()
  // CHECK:
  //   Mangled name computed from Ir:         TestOpenEnum1.X1
  //   Mangled name computed from Descriptor: TestOpenEnum1.X1
  //   Mangled name computed from Fir:        <anonymous>
  private enum entry class X1 : TestOpenEnum1 {
    // CHECK:
    //   Mangled name computed from Ir:         TestOpenEnum1.X1#<init>(){}
    //   Mangled name computed from Descriptor: TestOpenEnum1.X1#<init>(){}
    //   Mangled name computed from Fir:        #<init>(){}
    private constructor() /* primary */ {
      super/*TestOpenEnum1*/()
      /* <init>() */

    }

    // CHECK:
    //   Mangled name computed from Ir:         TestOpenEnum1.X1#toString(){}kotlin.String
    //   Mangled name computed from Descriptor: TestOpenEnum1.X1#toString(){}kotlin.String
    //   Mangled name computed from Fir:        #toString(){}kotlin.String
    override fun toString(): String {
      return "X1"
    }

  }

  // CHECK:
  //   Mangled name: TestOpenEnum1#values#static(){}kotlin.Array<TestOpenEnum1>
  //   Public signature: /TestOpenEnum1.values|3800638804003217382[0]
  fun values(): Array<TestOpenEnum1> /* Synthetic body for ENUM_VALUES */

  // CHECK:
  //   Mangled name: TestOpenEnum1#valueOf#static(kotlin.String){}TestOpenEnum1
  //   Public signature: /TestOpenEnum1.valueOf|-3895494988240235128[0]
  fun valueOf(value: String): TestOpenEnum1 /* Synthetic body for ENUM_VALUEOF */

  // CHECK:
  //   Mangled name: TestOpenEnum1#static{}entries
  //   Public signature: /TestOpenEnum1.entries|-5134227801081826149[0]
  val entries: EnumEntries<TestOpenEnum1>
    // CHECK:
    //   Mangled name computed from Ir:         TestOpenEnum1#<get-entries>#static(){}kotlin.enums.EnumEntries<TestOpenEnum1>
    //   Mangled name computed from Descriptor: TestOpenEnum1#<get-entries>#static(){}kotlin.enums.EnumEntries<TestOpenEnum1>
    //   Mangled name computed from Fir:        #<get-entries>#static(){}kotlin.enums.EnumEntries<TestOpenEnum1>
    //   Public signature: /TestOpenEnum1.entries.<get-entries>|-4208283468290053503[0]
    get(): EnumEntries<TestOpenEnum1> /* Synthetic body for ENUM_ENTRIES */

}

// CHECK:
//   Mangled name: TestOpenEnum2
//   Public signature: /TestOpenEnum2|null[0]
open enum class TestOpenEnum2 : Enum<TestOpenEnum2> {
  // CHECK:
  //   Mangled name: TestOpenEnum2#<init>(){}
  //   Public signature: /TestOpenEnum2.<init>|-5645683436151566731[0]
  private constructor() /* primary */ {
    super/*Enum*/<TestOpenEnum2>()
    /* <init>() */

  }

  // CHECK:
  //   Mangled name: TestOpenEnum2.X1
  //   Public signature: /TestOpenEnum2.X1|null[0]

  X1 = X1()
  // CHECK:
  //   Mangled name computed from Ir:         TestOpenEnum2.X1
  //   Mangled name computed from Descriptor: TestOpenEnum2.X1
  //   Mangled name computed from Fir:        <anonymous>
  private enum entry class X1 : TestOpenEnum2 {
    // CHECK:
    //   Mangled name computed from Ir:         TestOpenEnum2.X1#<init>(){}
    //   Mangled name computed from Descriptor: TestOpenEnum2.X1#<init>(){}
    //   Mangled name computed from Fir:        #<init>(){}
    private constructor() /* primary */ {
      super/*TestOpenEnum2*/()
      /* <init>() */

    }

    // CHECK:
    //   Mangled name computed from Ir:         TestOpenEnum2.X1#foo(){}
    //   Mangled name computed from Descriptor: TestOpenEnum2.X1#foo(){}
    //   Mangled name computed from Fir:        #foo(){}
    override fun foo() {
    }

  }

  // CHECK:
  //   Mangled name: TestOpenEnum2#foo(){}
  //   Public signature: /TestOpenEnum2.foo|-1041209573719867811[0]
  open fun foo() {
  }

  // CHECK:
  //   Mangled name: TestOpenEnum2#values#static(){}kotlin.Array<TestOpenEnum2>
  //   Public signature: /TestOpenEnum2.values|8731365896810749322[0]
  fun values(): Array<TestOpenEnum2> /* Synthetic body for ENUM_VALUES */

  // CHECK:
  //   Mangled name: TestOpenEnum2#valueOf#static(kotlin.String){}TestOpenEnum2
  //   Public signature: /TestOpenEnum2.valueOf|-6277423759061924196[0]
  fun valueOf(value: String): TestOpenEnum2 /* Synthetic body for ENUM_VALUEOF */

  // CHECK:
  //   Mangled name: TestOpenEnum2#static{}entries
  //   Public signature: /TestOpenEnum2.entries|-5134227801081826149[0]
  val entries: EnumEntries<TestOpenEnum2>
    // CHECK:
    //   Mangled name computed from Ir:         TestOpenEnum2#<get-entries>#static(){}kotlin.enums.EnumEntries<TestOpenEnum2>
    //   Mangled name computed from Descriptor: TestOpenEnum2#<get-entries>#static(){}kotlin.enums.EnumEntries<TestOpenEnum2>
    //   Mangled name computed from Fir:        #<get-entries>#static(){}kotlin.enums.EnumEntries<TestOpenEnum2>
    //   Public signature: /TestOpenEnum2.entries.<get-entries>|7144795131978512560[0]
    get(): EnumEntries<TestOpenEnum2> /* Synthetic body for ENUM_ENTRIES */

}

// CHECK:
//   Mangled name: TestAbstractEnum1
//   Public signature: /TestAbstractEnum1|null[0]
abstract enum class TestAbstractEnum1 : Enum<TestAbstractEnum1> {
  // CHECK:
  //   Mangled name: TestAbstractEnum1#<init>(){}
  //   Public signature: /TestAbstractEnum1.<init>|-5645683436151566731[0]
  private constructor() /* primary */ {
    super/*Enum*/<TestAbstractEnum1>()
    /* <init>() */

  }

  // CHECK:
  //   Mangled name: TestAbstractEnum1.X1
  //   Public signature: /TestAbstractEnum1.X1|null[0]

  X1 = X1()
  // CHECK:
  //   Mangled name computed from Ir:         TestAbstractEnum1.X1
  //   Mangled name computed from Descriptor: TestAbstractEnum1.X1
  //   Mangled name computed from Fir:        <anonymous>
  private enum entry class X1 : TestAbstractEnum1 {
    // CHECK:
    //   Mangled name computed from Ir:         TestAbstractEnum1.X1#<init>(){}
    //   Mangled name computed from Descriptor: TestAbstractEnum1.X1#<init>(){}
    //   Mangled name computed from Fir:        #<init>(){}
    private constructor() /* primary */ {
      super/*TestAbstractEnum1*/()
      /* <init>() */

    }

    // CHECK:
    //   Mangled name computed from Ir:         TestAbstractEnum1.X1#foo(){}
    //   Mangled name computed from Descriptor: TestAbstractEnum1.X1#foo(){}
    //   Mangled name computed from Fir:        #foo(){}
    override fun foo() {
    }

  }

  // CHECK:
  //   Mangled name: TestAbstractEnum1#foo(){}
  //   Public signature: /TestAbstractEnum1.foo|-1041209573719867811[0]
  abstract fun foo()
  // CHECK:
  //   Mangled name: TestAbstractEnum1#values#static(){}kotlin.Array<TestAbstractEnum1>
  //   Public signature: /TestAbstractEnum1.values|2421071688454673326[0]
  fun values(): Array<TestAbstractEnum1> /* Synthetic body for ENUM_VALUES */

  // CHECK:
  //   Mangled name: TestAbstractEnum1#valueOf#static(kotlin.String){}TestAbstractEnum1
  //   Public signature: /TestAbstractEnum1.valueOf|1031102409939396944[0]
  fun valueOf(value: String): TestAbstractEnum1 /* Synthetic body for ENUM_VALUEOF */

  // CHECK:
  //   Mangled name: TestAbstractEnum1#static{}entries
  //   Public signature: /TestAbstractEnum1.entries|-5134227801081826149[0]
  val entries: EnumEntries<TestAbstractEnum1>
    // CHECK:
    //   Mangled name computed from Ir:         TestAbstractEnum1#<get-entries>#static(){}kotlin.enums.EnumEntries<TestAbstractEnum1>
    //   Mangled name computed from Descriptor: TestAbstractEnum1#<get-entries>#static(){}kotlin.enums.EnumEntries<TestAbstractEnum1>
    //   Mangled name computed from Fir:        #<get-entries>#static(){}kotlin.enums.EnumEntries<TestAbstractEnum1>
    //   Public signature: /TestAbstractEnum1.entries.<get-entries>|-62644859580206762[0]
    get(): EnumEntries<TestAbstractEnum1> /* Synthetic body for ENUM_ENTRIES */

}

// CHECK:
//   Mangled name: IFoo
//   Public signature: /IFoo|null[0]
interface IFoo {
  // CHECK:
  //   Mangled name: IFoo#foo(){}
  //   Public signature: /IFoo.foo|-1041209573719867811[0]
  abstract fun foo()

}

// CHECK:
//   Mangled name: TestAbstractEnum2
//   Public signature: /TestAbstractEnum2|null[0]
abstract enum class TestAbstractEnum2 : IFoo, Enum<TestAbstractEnum2> {
  // CHECK:
  //   Mangled name: TestAbstractEnum2#<init>(){}
  //   Public signature: /TestAbstractEnum2.<init>|-5645683436151566731[0]
  private constructor() /* primary */ {
    super/*Enum*/<TestAbstractEnum2>()
    /* <init>() */

  }

  // CHECK:
  //   Mangled name: TestAbstractEnum2.X1
  //   Public signature: /TestAbstractEnum2.X1|null[0]

  X1 = X1()
  // CHECK:
  //   Mangled name computed from Ir:         TestAbstractEnum2.X1
  //   Mangled name computed from Descriptor: TestAbstractEnum2.X1
  //   Mangled name computed from Fir:        <anonymous>
  private enum entry class X1 : TestAbstractEnum2 {
    // CHECK:
    //   Mangled name computed from Ir:         TestAbstractEnum2.X1#<init>(){}
    //   Mangled name computed from Descriptor: TestAbstractEnum2.X1#<init>(){}
    //   Mangled name computed from Fir:        #<init>(){}
    private constructor() /* primary */ {
      super/*TestAbstractEnum2*/()
      /* <init>() */

    }

    // CHECK:
    //   Mangled name computed from Ir:         TestAbstractEnum2.X1#foo(){}
    //   Mangled name computed from Descriptor: TestAbstractEnum2.X1#foo(){}
    //   Mangled name computed from Fir:        #foo(){}
    override fun foo() {
    }

  }

  // CHECK:
  //   Mangled name: TestAbstractEnum2#values#static(){}kotlin.Array<TestAbstractEnum2>
  //   Public signature: /TestAbstractEnum2.values|-1014141399495495627[0]
  fun values(): Array<TestAbstractEnum2> /* Synthetic body for ENUM_VALUES */

  // CHECK:
  //   Mangled name: TestAbstractEnum2#valueOf#static(kotlin.String){}TestAbstractEnum2
  //   Public signature: /TestAbstractEnum2.valueOf|-3718310282234049027[0]
  fun valueOf(value: String): TestAbstractEnum2 /* Synthetic body for ENUM_VALUEOF */

  // CHECK:
  //   Mangled name: TestAbstractEnum2#static{}entries
  //   Public signature: /TestAbstractEnum2.entries|-5134227801081826149[0]
  val entries: EnumEntries<TestAbstractEnum2>
    // CHECK:
    //   Mangled name computed from Ir:         TestAbstractEnum2#<get-entries>#static(){}kotlin.enums.EnumEntries<TestAbstractEnum2>
    //   Mangled name computed from Descriptor: TestAbstractEnum2#<get-entries>#static(){}kotlin.enums.EnumEntries<TestAbstractEnum2>
    //   Mangled name computed from Fir:        #<get-entries>#static(){}kotlin.enums.EnumEntries<TestAbstractEnum2>
    //   Public signature: /TestAbstractEnum2.entries.<get-entries>|8627121999159520047[0]
    get(): EnumEntries<TestAbstractEnum2> /* Synthetic body for ENUM_ENTRIES */

}

