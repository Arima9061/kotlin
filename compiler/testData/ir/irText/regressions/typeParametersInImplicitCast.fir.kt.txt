// CHECK:
//   Mangled name: #problematic(kotlin.collections.List<kotlin.collections.List<0:0>>){0ยง<kotlin.Any?>}kotlin.collections.List<0:0>
//   Public signature: /problematic|-8622452458410513914[0]
fun <T : Any?> problematic(lss: List<List<T>>): List<T> {
  return lss.flatMap<List<T>, @FlexibleNullability T?>(transform = 
    // CHECK:
    //   Mangled name computed from Ir:         #problematic(kotlin.collections.List<kotlin.collections.List<1:0>>){0ยง<kotlin.Any?>}kotlin.collections.List<1:0>#<anonymous>#static(kotlin.collections.List<1:0>){}kotlin.collections.Iterable<1:0?>
    //   Mangled name computed from Descriptor: #problematic(kotlin.collections.List<kotlin.collections.List<1:0>>){0ยง<kotlin.Any?>}kotlin.collections.List<1:0>#<anonymous>#static(kotlin.collections.List<1:0>){}kotlin.collections.Iterable<1:0?>
    //   Mangled name computed from Fir:        could not compute mangled name: java.lang.IllegalStateException: unexpected element flatMap@fun <anonymous>(it: R|kotlin/collections/List<T>|): R|kotlin/collections/Iterable<ft<T & Any, T?>>| <inline=Inline, kind=UNKNOWN>  {... (truncated)
    local fun <anonymous>(it: List<T>): Iterable<@FlexibleNullability T?> {
      return id<@FlexibleNullability T?>(v = it) /*!! MutableList<@FlexibleNullability T?> */
    }
)
}

