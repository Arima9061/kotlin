// CHECK JVM_IR:
//   Mangled name: #one(){}kotlin.Int
//   Public signature: /one|-1338778839794458943[0]
// CHECK JS_IR:
//   Mangled name: #one(){}
//   Public signature: /one|-883930323179095603[0]
fun one(): Int {
  return 1
}

// CHECK JVM_IR:
//   Mangled name: #two(){}kotlin.Int
//   Public signature: /two|-3668245894055563667[0]
// CHECK JS_IR:
//   Mangled name: #two(){}
//   Public signature: /two|-8191816142589217386[0]
fun two(): Int {
  return 2
}

// CHECK JVM_IR:
//   Mangled name: #test1(){}kotlin.Int
//   Public signature: /test1|3246027394688469880[0]
// CHECK JS_IR:
//   Mangled name: #test1(){}
//   Public signature: /test1|4297044443957252634[0]
fun test1(): Int {
  while (true) { // BLOCK
    { // BLOCK
      val tmp0_subject: Int = one()
      when {
        EQEQ(arg0 = tmp0_subject, arg1 = 1) -> { // BLOCK
          { // BLOCK
            val tmp1_subject: Int = two()
            when {
              EQEQ(arg0 = tmp1_subject, arg1 = 2) -> return 2
            }
          }
        }
        else -> return 3
      }
    }
  }
}

// CHECK JVM_IR:
//   Mangled name: #test2(){}kotlin.Int
//   Public signature: /test2|5542371834528279174[0]
// CHECK JS_IR:
//   Mangled name: #test2(){}
//   Public signature: /test2|4279114864133353152[0]
fun test2(): Int {
  while (true) { // BLOCK
    { // BLOCK
      val tmp0_subject: Int = one()
      when {
        EQEQ(arg0 = tmp0_subject, arg1 = 1) -> { // BLOCK
          val tmp1_subject: Int = two()
          when {
            EQEQ(arg0 = tmp1_subject, arg1 = 2) -> return 2
          }
        }
        else -> return 3
      }
    }
  }
}

