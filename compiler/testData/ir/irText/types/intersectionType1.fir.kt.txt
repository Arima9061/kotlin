// CHECK:
//   Mangled name: In
//   Public signature: /In|null[0]
class In<in I : Any?> {
  // CHECK:
  //   Mangled name: In#<init>(){}
  //   Public signature: /In.<init>|-5645683436151566731[0]
  constructor() /* primary */ {
    super/*Any*/()
    /* <init>() */

  }

}

// CHECK JVM_IR:
//   Mangled name: #select(0:0;0:0){0§<kotlin.Any?>}0:0
//   Public signature: /select|8100705338685480795[0]
// CHECK JS_IR:
//   Mangled name computed from Ir:         #select(0:0;0:0){0§<kotlin.Any?>}
//   Mangled name computed from Descriptor: #select(0:0;0:0){0§<kotlin.Any?>}
//   Mangled name computed from Fir:        #select(0:0;0:0){0§<kotlin.Any?>}0:0
//   Public signature: /select|8100705338685480795[0]
fun <S : Any?> select(x: S, y: S): S {
  return x
}

// CHECK JVM_IR:
//   Mangled name: #foo(kotlin.Array<In<0:0>>;kotlin.Array<In<kotlin.String>>){0§<kotlin.Any?>}kotlin.Boolean
//   Public signature: /foo|2099284871117952931[0]
// CHECK JS_IR:
//   Mangled name computed from Ir:         #foo(kotlin.Array<In<0:0>>;kotlin.Array<In<kotlin.String>>){0§<kotlin.Any?>}
//   Mangled name computed from Descriptor: #foo(kotlin.Array<In<0:0>>;kotlin.Array<In<kotlin.String>>){0§<kotlin.Any?>}
//   Mangled name computed from Fir:        #foo(kotlin.Array<In<0:0>>;kotlin.Array<In<kotlin.String>>){0§<kotlin.Any?>}kotlin.Boolean
//   Public signature: /foo|2099284871117952931[0]
fun <T : Any?> foo(a: Array<In<T>>, b: Array<In<String>>): Boolean {
  return select<Array<out In<Nothing>>>(x = a, y = b).get(index = 0).ofType<Any>(y = true)
}

// CHECK JVM_IR:
//   Mangled name: #ofType@In<0:0>(kotlin.Any?){0§<kotlin.Any?>}kotlin.Boolean
//   Public signature: /ofType|2383203766625380016[0]
// CHECK JS_IR:
//   Mangled name computed from Ir:         #ofType@In<0:0>(kotlin.Any?){0§<kotlin.Any?>}
//   Mangled name computed from Descriptor: #ofType@In<0:0>(kotlin.Any?){0§<kotlin.Any?>}
//   Mangled name computed from Fir:        #ofType@In<0:0>(kotlin.Any?){0§<kotlin.Any?>}kotlin.Boolean
//   Public signature: /ofType|2383203766625380016[0]
inline fun <reified K : Any?> In<K>.ofType(y: Any?): Boolean {
  return y is K
}

// CHECK:
//   Mangled name: #test(){}
//   Public signature: /test|6620506149988718649[0]
fun test() {
  val a1: Array<In<Int>> = arrayOf<In<Int>>(elements = [In<Int>()])
  val a2: Array<In<String>> = arrayOf<In<String>>(elements = [In<String>()])
  foo<Int>(a = a1, b = a2) /*~> Unit */
}

