// CHECK:
//   Mangled name: A
//   Public signature: /A|null[0]
class A {
  // CHECK:
  //   Mangled name: A#<init>(){}
  //   Public signature: /A.<init>|-5645683436151566731[0]
  constructor() /* primary */ {
    super/*Any*/()
    /* <init>() */

  }

  // CHECK:
  //   Mangled name: A{}a
  //   Public signature: /A.a|-1200697420457237799[0]
  val a: Int
    field = 20
    // CHECK JVM_IR:
    //   Mangled name: A#<get-a>(){}kotlin.Int
    //   Public signature: /A.a.<get-a>|4232747788241509192[0]
    // CHECK JS_IR:
    //   Mangled name computed from Ir:         A#<get-a>(){}
    //   Mangled name computed from Descriptor: A#<get-a>(){}
    //   Mangled name computed from Fir:        A#<get-a>(){}kotlin.Int
    //   Public signature: /A.a.<get-a>|4232747788241509192[0]
    get

  // CHECK:
  //   Mangled name: A{}it
  //   Public signature: /A.it|3309866017710461759[0]
  val it: Int
    field = 4
    // CHECK JVM_IR:
    //   Mangled name: A#<get-it>(){}kotlin.Number
    //   Public signature: /A.it.<get-it>|-5000280677775858846[0]
    // CHECK JS_IR:
    //   Mangled name computed from Ir:         A#<get-it>(){}
    //   Mangled name computed from Descriptor: A#<get-it>(){}
    //   Mangled name computed from Fir:        A#<get-it>(){}kotlin.Number
    //   Public signature: /A.it.<get-it>|-5000280677775858846[0]
    get

  // CHECK:
  //   Mangled name: A{}invertedTypes
  //   Public signature: /A.invertedTypes|-5387375160663636997[0]
  var invertedTypes: Number
    field = 42
    // CHECK JVM_IR:
    //   Mangled name: A#<get-invertedTypes>(){}kotlin.Int
    //   Public signature: /A.invertedTypes.<get-invertedTypes>|-1770574096074676248[0]
    // CHECK JS_IR:
    //   Mangled name computed from Ir:         A#<get-invertedTypes>(){}
    //   Mangled name computed from Descriptor: A#<get-invertedTypes>(){}
    //   Mangled name computed from Fir:        A#<get-invertedTypes>(){}kotlin.Int
    //   Public signature: /A.invertedTypes.<get-invertedTypes>|-1770574096074676248[0]
    get(): Int {
      return when {
        greater(arg0 = <this>.#invertedTypes.toInt(), arg1 = 10) -> <this>.#invertedTypes.toInt()
        else -> 10
      }
    }
    // CHECK:
    //   Mangled name: A#<set-invertedTypes>(kotlin.Int){}
    //   Public signature: /A.invertedTypes.<set-invertedTypes>|7674452151545793623[0]
    set

  // CHECK:
  //   Mangled name: A{}p
  //   Public signature: /A.p|6715504260787941082[0]
  val p: Int
    field = 5
    // CHECK JVM_IR:
    //   Mangled name: A#<get-p>(){}kotlin.Int
    //   Public signature: /A.p.<get-p>|5329635969197638839[0]
    // CHECK JS_IR:
    //   Mangled name computed from Ir:         A#<get-p>(){}
    //   Mangled name computed from Descriptor: A#<get-p>(){}
    //   Mangled name computed from Fir:        A#<get-p>(){}kotlin.Int
    //   Public signature: /A.p.<get-p>|5329635969197638839[0]
    get(): Int {
      return <this>.#p
    }

}

