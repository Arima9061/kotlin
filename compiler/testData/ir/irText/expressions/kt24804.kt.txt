// CHECK JVM_IR:
//   Mangled name: #foo(){}kotlin.Boolean
//   Public signature: /foo|6817124238991280153[0]
// CHECK JS_IR:
//   Mangled name: #foo(){}
//   Public signature: /foo|-1041209573719867811[0]
inline fun foo(): Boolean {
  return false
}

// CHECK JVM_IR:
//   Mangled name: #run(kotlin.Boolean;kotlin.Boolean){}kotlin.String
//   Public signature: /run|-3816013026832590302[0]
// CHECK JS_IR:
//   Mangled name: #run(kotlin.Boolean;kotlin.Boolean){}
//   Public signature: /run|-3884343627033370648[0]
fun run(x: Boolean, y: Boolean): String {
  var z: Int = 10
  { // BLOCK
    l2@ do// COMPOSITE {
    z = z.plus(other = 1)
    when {
      greater(arg0 = z, arg1 = 100) -> return "NOT_OK"
    }
    when {
      x -> continue@l2
    }
    when {
      y -> continue@l2
    }
    // }    while (foo())
  }
  return "OK"
}

// CHECK JVM_IR:
//   Mangled name: #box(){}kotlin.String
//   Public signature: /box|-9347091776561469[0]
// CHECK JS_IR:
//   Mangled name: #box(){}
//   Public signature: /box|2173511048851971368[0]
fun box(): String {
  return run(x = true, y = true)
}

