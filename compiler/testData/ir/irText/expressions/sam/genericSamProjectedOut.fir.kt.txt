// CHECK:
//   Mangled name: #test(){}
//   Public signature: /test|6620506149988718649[0]
fun test() {
  var a: SomeJavaClass<out String> = SomeJavaClass<String>()
  a.someFunction(hello = 
    // CHECK:
    //   Mangled name computed from Ir:         #test(){}#<anonymous>#static(kotlin.String?){}
    //   Mangled name computed from Descriptor: #test(){}#<anonymous>#static(kotlin.String?){}
    //   Mangled name computed from Fir:        could not compute mangled name: java.lang.IllegalStateException: unexpected element someFunction@fun <anonymous>(it: R|kotlin/String!|): R|kotlin/Unit| <inline=NoInline>  {... (truncated)
    local fun <anonymous>(it: @FlexibleNullability String?) {
      return Unit
    }
 /*-> @FlexibleNullability Hello<out @FlexibleNullability String?>? */)
  a.plus(hello = 
    // CHECK:
    //   Mangled name computed from Ir:         #test(){}#<anonymous>#static(kotlin.String?){}
    //   Mangled name computed from Descriptor: #test(){}#<anonymous>#static(kotlin.String?){}
    //   Mangled name computed from Fir:        could not compute mangled name: java.lang.IllegalStateException: unexpected element fun <anonymous>(it: R|kotlin/String!|): R|kotlin/Unit| <inline=NoInline>  {... (truncated)
    local fun <anonymous>(it: @FlexibleNullability String?) {
      return Unit
    }
 /*-> @FlexibleNullability Hello<out @FlexibleNullability String?>? */) /*~> Unit */
  a.get(hello = 
    // CHECK:
    //   Mangled name computed from Ir:         #test(){}#<anonymous>#static(kotlin.String?){}
    //   Mangled name computed from Descriptor: #test(){}#<anonymous>#static(kotlin.String?){}
    //   Mangled name computed from Fir:        could not compute mangled name: java.lang.IllegalStateException: unexpected element fun <anonymous>(it: R|kotlin/String!|): R|kotlin/Unit| <inline=NoInline>  {... (truncated)
    local fun <anonymous>(it: @FlexibleNullability String?) {
      return Unit
    }
 /*-> @FlexibleNullability Hello<out @FlexibleNullability String?>? */)
  a = a.plus(hello = 
    // CHECK:
    //   Mangled name computed from Ir:         #test(){}#<anonymous>#static(kotlin.String?){}
    //   Mangled name computed from Descriptor: #test(){}#<anonymous>#static(kotlin.String?){}
    //   Mangled name computed from Fir:        could not compute mangled name: java.lang.IllegalStateException: unexpected element fun <anonymous>(it: R|kotlin/String!|): R|kotlin/Unit| <inline=NoInline>  {... (truncated)
    local fun <anonymous>(it: @FlexibleNullability String?) {
      return Unit
    }
 /*-> @FlexibleNullability Hello<out @FlexibleNullability String?>? */)
  a.set(i = 0, hello = 
    // CHECK:
    //   Mangled name computed from Ir:         #test(){}#<anonymous>#static(kotlin.String?){}
    //   Mangled name computed from Descriptor: #test(){}#<anonymous>#static(kotlin.String?){}
    //   Mangled name computed from Fir:        could not compute mangled name: java.lang.IllegalStateException: unexpected element fun <anonymous>(it: R|kotlin/String!|): R|kotlin/Unit| <inline=NoInline>  {... (truncated)
    local fun <anonymous>(it: @FlexibleNullability String?) {
      return Unit
    }
 /*-> @FlexibleNullability Hello<out @FlexibleNullability String?>? */)
}

