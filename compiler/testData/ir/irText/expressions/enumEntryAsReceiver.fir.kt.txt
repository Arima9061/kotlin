// CHECK:
//   Mangled name: X
//   Public signature: /X|null[0]
abstract enum class X : Enum<X> {
  // CHECK:
  //   Mangled name: X#<init>(){}
  //   Public signature: /X.<init>|-5645683436151566731[0]
  private constructor() /* primary */ {
    super/*Enum*/<X>()
    /* <init>() */

  }

  // CHECK:
  //   Mangled name: X.B
  //   Public signature: /X.B|null[0]

  B = B()
  // CHECK:
  //   Mangled name computed from Ir:         X.B
  //   Mangled name computed from Descriptor: X.B
  //   Mangled name computed from Fir:        <anonymous>
  private enum entry class B : X {
    // CHECK:
    //   Mangled name computed from Ir:         X.B#<init>(){}
    //   Mangled name computed from Descriptor: X.B#<init>(){}
    //   Mangled name computed from Fir:        #<init>(){}
    private constructor() /* primary */ {
      super/*X*/()
      /* <init>() */

    }

    // CHECK:
    //   Mangled name computed from Ir:         X.B{}value2
    //   Mangled name computed from Descriptor: X.B{}value2
    //   Mangled name computed from Fir:        {}value2
    val value2: String
      field = "OK"
      // CHECK:
      //   Mangled name computed from Ir:         X.B#<get-value2>(){}kotlin.String
      //   Mangled name computed from Descriptor: X.B#<get-value2>(){}kotlin.String
      //   Mangled name computed from Fir:        #<get-value2>(){}kotlin.String
      get

    // CHECK:
    //   Mangled name computed from Ir:         X.B{}value
    //   Mangled name computed from Descriptor: X.B{}value
    //   Mangled name computed from Fir:        {}value
    override val value: Function0<String>
      field = 
        // CHECK:
        //   Mangled name computed from Ir (compatible mode: false):         X.B{}value#<anonymous>#static(){}kotlin.String
        //   Mangled name computed from Ir (compatible mode: true):          X.B.value#<anonymous>#static(){}kotlin.String
        //   Mangled name computed from Descriptor (compatible mode: false): X.B{}value#jf#<anonymous>#static(){}kotlin.String
        //   Mangled name computed from Descriptor (compatible mode: true):  X.B{}value#jf#<anonymous>#static(){}kotlin.String
        //   Mangled name computed from Fir (compatible mode: false):        could not compute mangled name: java.lang.IllegalStateException: unexpected element fun <anonymous>(): R|kotlin/String| <inline=Unknown>  {... (truncated)
        //   Mangled name computed from Fir (compatible mode: true):         could not compute mangled name: java.lang.IllegalStateException: unexpected element fun <anonymous>(): R|kotlin/String| <inline=Unknown>  {... (truncated)
        local fun <anonymous>(): String {
          return <this>.<get-value2>()
        }

      // CHECK:
      //   Mangled name computed from Ir:         X.B#<get-value>(){}kotlin.Function0<kotlin.String>
      //   Mangled name computed from Descriptor: X.B#<get-value>(){}kotlin.Function0<kotlin.String>
      //   Mangled name computed from Fir:        #<get-value>(){}kotlin.Function0<kotlin.String>
      override get

  }

  // CHECK:
  //   Mangled name: X{}value
  //   Public signature: /X.value|1987073854177347439[0]
  abstract val value: Function0<String>
    // CHECK:
    //   Mangled name: X#<get-value>(){}kotlin.Function0<kotlin.String>
    //   Public signature: /X.value.<get-value>|-2160558915408168462[0]
    abstract get

  // CHECK:
  //   Mangled name: X#values#static(){}kotlin.Array<X>
  //   Public signature: /X.values|-7109739533511471403[0]
  fun values(): Array<X> /* Synthetic body for ENUM_VALUES */

  // CHECK:
  //   Mangled name: X#valueOf#static(kotlin.String){}X
  //   Public signature: /X.valueOf|5795127078210310399[0]
  fun valueOf(value: String): X /* Synthetic body for ENUM_VALUEOF */

  // CHECK:
  //   Mangled name: X#static{}entries
  //   Public signature: /X.entries|-5134227801081826149[0]
  val entries: EnumEntries<X>
    // CHECK:
    //   Mangled name computed from Ir:         X#<get-entries>#static(){}kotlin.enums.EnumEntries<X>
    //   Mangled name computed from Descriptor: X#<get-entries>#static(){}kotlin.enums.EnumEntries<X>
    //   Mangled name computed from Fir:        #<get-entries>#static(){}kotlin.enums.EnumEntries<X>
    //   Public signature: /X.entries.<get-entries>|6681560497291336349[0]
    get(): EnumEntries<X> /* Synthetic body for ENUM_ENTRIES */

}

// CHECK:
//   Mangled name: #box(){}kotlin.String
//   Public signature: /box|-9347091776561469[0]
fun box(): String {
  return X.B.<get-value>().invoke()
}

