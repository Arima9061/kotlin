// CHECK JVM_IR:
//   Mangled name: #test1(kotlin.Any?){}kotlin.Any
//   Public signature: /test1|3740103800770013069[0]
// CHECK JS_IR:
//   Mangled name computed from Ir:         #test1(kotlin.Any?){}
//   Mangled name computed from Descriptor: #test1(kotlin.Any?){}
//   Mangled name computed from Fir:        #test1(kotlin.Any?){}kotlin.Any
//   Public signature: /test1|3740103800770013069[0]
fun test1(a: Any?): Any {
  return CHECK_NOT_NULL<Any>(arg0 = a)
}

// CHECK JVM_IR:
//   Mangled name: #test2(kotlin.Any?){}kotlin.Int
//   Public signature: /test2|5851677675624690854[0]
// CHECK JS_IR:
//   Mangled name computed from Ir:         #test2(kotlin.Any?){}
//   Mangled name computed from Descriptor: #test2(kotlin.Any?){}
//   Mangled name computed from Fir:        #test2(kotlin.Any?){}kotlin.Int
//   Public signature: /test2|5851677675624690854[0]
fun test2(a: Any?): Int {
  return CHECK_NOT_NULL<Int>(arg0 = { // BLOCK
    val tmp0_safe_receiver: Any? = a
    when {
      EQEQ(arg0 = tmp0_safe_receiver, arg1 = null) -> null
      else -> tmp0_safe_receiver.hashCode()
    }
  })
}

// CHECK JVM_IR:
//   Mangled name: #test3(0:0){0§<kotlin.Any?>}0:0
//   Public signature: /test3|6230015698608081924[0]
// CHECK JS_IR:
//   Mangled name computed from Ir:         #test3(0:0){0§<kotlin.Any?>}
//   Mangled name computed from Descriptor: #test3(0:0){0§<kotlin.Any?>}
//   Mangled name computed from Fir:        #test3(0:0){0§<kotlin.Any?>}0:0
//   Public signature: /test3|6230015698608081924[0]
fun <X : Any?> test3(a: X): (X & Any) {
  return CHECK_NOT_NULL<(X & Any)>(arg0 = a)
}

// CHECK:
//   Mangled name: #useString(kotlin.String){}
//   Public signature: /useString|2275790659251057343[0]
fun useString(s: String) {
}

// CHECK:
//   Mangled name: #test4(0:0){0§<kotlin.Any?>}
//   Public signature: /test4|5293645353028387515[0]
fun <X : Any?> test4(a: X) {
  when {
    a is String? -> CHECK_NOT_NULL<String>(arg0 = a /*as String? */) /*~> Unit */
  }
  when {
    a is String? -> useString(s = CHECK_NOT_NULL<String>(arg0 = a /*as String */))
  }
}

