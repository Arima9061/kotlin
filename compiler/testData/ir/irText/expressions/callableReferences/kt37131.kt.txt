// CHECK JVM_IR:
//   Mangled name: #foo(kotlin.String){}kotlin.String
//   Public signature: /foo|-5534735991146511619[0]
// CHECK JS_IR:
//   Mangled name: #foo(kotlin.String){}
//   Public signature: /foo|1351044947738582195[0]
fun foo(x: String = ""): String {
  return x
}

// CHECK:
//   Mangled name: C
//   Public signature: /C|null[0]
class C {
  // CHECK:
  //   Mangled name: C#<init>(kotlin.String){}
  //   Public signature: /C.<init>|1280618353163213788[0]
  constructor(x: String = "") /* primary */ {
    super/*Any*/()
    /* <init>() */

  }

  // CHECK:
  //   Mangled name: C{}x
  //   Public signature: /C.x|-8060530855978347579[0]
  val x: String
    field = x
    // CHECK JVM_IR:
    //   Mangled name: C#<get-x>(){}kotlin.String
    //   Public signature: /C.x.<get-x>|316111172223894646[0]
    // CHECK JS_IR:
    //   Mangled name: C#<get-x>(){}
    //   Public signature: /C.x.<get-x>|1482705010654679335[0]
    get

}

// CHECK JVM_IR:
//   Mangled name: #use(kotlin.Function0<kotlin.Any>){}kotlin.Any
//   Public signature: /use|2706182574849638898[0]
// CHECK JS_IR:
//   Mangled name: #use(kotlin.Function0<kotlin.Any>){}
//   Public signature: /use|-6442695911656516766[0]
fun use(fn: Function0<Any>): Any {
  return fn.invoke()
}

// CHECK JVM_IR:
//   Mangled name: #testFn(){}kotlin.Any
//   Public signature: /testFn|-7705393787943646360[0]
// CHECK JS_IR:
//   Mangled name: #testFn(){}
//   Public signature: /testFn|-8314695367743779873[0]
fun testFn(): Any {
  return use(fn = { // BLOCK
    // CHECK JVM_IR:
    //   Mangled name: #testFn(){}kotlin.Any#foo#static(){}kotlin.String
    // CHECK JS_IR:
    //   Mangled name: #testFn(){}#foo#static(){}
    local fun foo(): String {
      return foo()
    }

    ::foo
  })
}

// CHECK JVM_IR:
//   Mangled name: #testCtor(){}kotlin.Any
//   Public signature: /testCtor|3044873605974435250[0]
// CHECK JS_IR:
//   Mangled name: #testCtor(){}
//   Public signature: /testCtor|3811619636113238850[0]
fun testCtor(): Any {
  return use(fn = { // BLOCK
    // CHECK JVM_IR:
    //   Mangled name: #testCtor(){}kotlin.Any#<init>#static(){}C
    // CHECK JS_IR:
    //   Mangled name: #testCtor(){}#<init>#static(){}
    local fun <init>(): C {
      return C()
    }

    ::<init>
  })
}

