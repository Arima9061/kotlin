// CHECK:
//   Mangled name: #use(kotlin.Function2<C,kotlin.Int,kotlin.Unit>){}
//   Public signature: /use|-4652353913536286192[0]
fun use(f: @ExtensionFunctionType Function2<C, Int, Unit>) {
}

// CHECK:
//   Mangled name: C
//   Public signature: /C|null[0]
class C {
  // CHECK:
  //   Mangled name: C#<init>(){}
  //   Public signature: /C.<init>|-5645683436151566731[0]
  constructor() /* primary */ {
    super/*Any*/()
    /* <init>() */

  }

}

// CHECK:
//   Mangled name: #extensionVararg@C(kotlin.Int;kotlin.Array<out|kotlin.String>...){}
//   Public signature: /extensionVararg|6428350929057458618[0]
fun C.extensionVararg(i: Int, vararg s: String) {
}

// CHECK:
//   Mangled name: #extensionDefault@C(kotlin.Int;kotlin.String){}
//   Public signature: /extensionDefault|-2068501962137011033[0]
fun C.extensionDefault(i: Int, s: String = "") {
}

// CHECK:
//   Mangled name: #extensionBoth@C(kotlin.Int;kotlin.String;kotlin.Array<out|kotlin.String>...){}
//   Public signature: /extensionBoth|-2642733408340966988[0]
fun C.extensionBoth(i: Int, s: String = "", vararg t: String) {
}

// CHECK:
//   Mangled name: #testExtensionVararg(){}
//   Public signature: /testExtensionVararg|3578031816468213112[0]
fun testExtensionVararg() {
  use(f = 
    // CHECK:
    //   Mangled name computed from Ir:         #testExtensionVararg(){}#extensionVararg#static(C;kotlin.Int){}
    //   Mangled name computed from Descriptor: #testExtensionVararg(){}#extensionVararg#static(C;kotlin.Int){}
    //   Mangled name computed from Fir:        #extensionVararg@C(kotlin.Int;kotlin.Array<out|kotlin.String>...){}
    local fun extensionVararg(p0: C, p1: Int) {
      p0.extensionVararg(i = p1)
    }
)
}

// CHECK:
//   Mangled name: #testExtensionDefault(){}
//   Public signature: /testExtensionDefault|412398110121818525[0]
fun testExtensionDefault() {
  use(f = 
    // CHECK:
    //   Mangled name computed from Ir:         #testExtensionDefault(){}#extensionDefault#static(C;kotlin.Int){}
    //   Mangled name computed from Descriptor: #testExtensionDefault(){}#extensionDefault#static(C;kotlin.Int){}
    //   Mangled name computed from Fir:        #extensionDefault@C(kotlin.Int;kotlin.String){}
    local fun extensionDefault(p0: C, p1: Int) {
      p0.extensionDefault(i = p1)
    }
)
}

// CHECK:
//   Mangled name: #testExtensionBoth(){}
//   Public signature: /testExtensionBoth|-9046612088279185180[0]
fun testExtensionBoth() {
  use(f = 
    // CHECK:
    //   Mangled name computed from Ir:         #testExtensionBoth(){}#extensionBoth#static(C;kotlin.Int){}
    //   Mangled name computed from Descriptor: #testExtensionBoth(){}#extensionBoth#static(C;kotlin.Int){}
    //   Mangled name computed from Fir:        #extensionBoth@C(kotlin.Int;kotlin.String;kotlin.Array<out|kotlin.String>...){}
    local fun extensionBoth(p0: C, p1: Int) {
      p0.extensionBoth(i = p1)
    }
)
}

