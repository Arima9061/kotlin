// CHECK:
//   Mangled name: C
//   Public signature: /C|null[0]
class C {
  // CHECK:
  //   Mangled name: C#<init>(kotlin.Int){}
  //   Public signature: /C.<init>|-5182794243525578284[0]
  constructor(x: Int) /* primary */ {
    super/*Any*/()
    /* <init>() */

  }

  // CHECK:
  //   Mangled name: C{}x
  //   Public signature: /C.x|-8060530855978347579[0]
  var x: Int
    field = x
    // CHECK JVM_IR:
    //   Mangled name: C#<get-x>(){}kotlin.Int
    //   Public signature: /C.x.<get-x>|4966956098150895696[0]
    // CHECK JS_IR:
    //   Mangled name computed from Ir:         C#<get-x>(){}
    //   Mangled name computed from Descriptor: C#<get-x>(){}
    //   Mangled name computed from Fir:        C#<get-x>(){}kotlin.Int
    //   Public signature: /C.x.<get-x>|4966956098150895696[0]
    get
    // CHECK:
    //   Mangled name: C#<set-x>(kotlin.Int){}
    //   Public signature: /C.x.<set-x>|-740209739415615559[0]
    set

}

// CHECK:
//   Mangled name: #test(C?){}
//   Public signature: /test|-9127084887599042119[0]
fun test(nc: C?) {
  { // BLOCK
    val tmp0_safe_receiver: C? = nc
    when {
      EQEQ(arg0 = tmp0_safe_receiver, arg1 = null) -> null
      else -> tmp0_safe_receiver.<set-x>(<set-?> = 42)
    }
  } /*~> Unit */
}

