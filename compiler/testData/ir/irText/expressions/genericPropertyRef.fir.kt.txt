// CHECK:
//   Mangled name: Value
//   Public signature: /Value|null[0]
class Value<T : Any?> {
  // CHECK:
  //   Mangled name computed from Ir:         Value#<init>(1:0;kotlin.String?){}
  //   Mangled name computed from Descriptor: Value#<init>(1:0;kotlin.String?){}
  //   Mangled name computed from Fir:        Value#<init>(0:-1;kotlin.String?){}
  //   Public signature: /Value.<init>|9099716296166343732[0]
  constructor(value: T = null as T, text: String? = null) /* primary */ {
    super/*Any*/()
    /* <init>() */

  }

  // CHECK:
  //   Mangled name: Value{}value
  //   Public signature: /Value.value|1987073854177347439[0]
  var value: T
    field = value
    // CHECK JVM_IR:
    //   Mangled name: Value#<get-value>(){}1:0
    //   Public signature: /Value.value.<get-value>|3167862337988859752[0]
    // CHECK JS_IR:
    //   Mangled name computed from Ir:         Value#<get-value>(){}
    //   Mangled name computed from Descriptor: Value#<get-value>(){}
    //   Mangled name computed from Fir:        Value#<get-value>(){}1:0
    //   Public signature: /Value.value.<get-value>|3167862337988859752[0]
    get
    // CHECK:
    //   Mangled name: Value#<set-value>(1:0){}
    //   Public signature: /Value.value.<set-value>|-5529925203468114125[0]
    set

  // CHECK:
  //   Mangled name: Value{}text
  //   Public signature: /Value.text|2188424425118836640[0]
  var text: String?
    field = text
    // CHECK JVM_IR:
    //   Mangled name: Value#<get-text>(){}kotlin.String?
    //   Public signature: /Value.text.<get-text>|-7147571129451640862[0]
    // CHECK JS_IR:
    //   Mangled name computed from Ir:         Value#<get-text>(){}
    //   Mangled name computed from Descriptor: Value#<get-text>(){}
    //   Mangled name computed from Fir:        Value#<get-text>(){}kotlin.String?
    //   Public signature: /Value.text.<get-text>|-7147571129451640862[0]
    get
    // CHECK:
    //   Mangled name: Value#<set-text>(kotlin.String?){}
    //   Public signature: /Value.text.<set-text>|-5643986239339503171[0]
    set

}

// CHECK:
//   Mangled name computed from Ir:         @Value<0:0>{0§<kotlin.Any?>}additionalText
//   Mangled name computed from Descriptor: could not compute mangled name: java.lang.IllegalArgumentException: No container found for type parameter 'T' of 'public fun <T> Value<T>.`<get-additionalText>`(): Int defined in root package'
//   Mangled name computed from Fir:        @Value<0:0>{0§<kotlin.Any?>}additionalText
//   Public signature: /additionalText|7734412113224529319[0]
val <T : Any?> Value<T>.additionalText: Int /* by */ 
  field = DVal(kmember = Value::text)
  // CHECK JVM_IR:
  //   Mangled name computed from Ir:         #<get-additionalText>@Value<0:0>(){0§<kotlin.Any?>}kotlin.Int
  //   Mangled name computed from Descriptor: could not compute mangled name: java.lang.IllegalArgumentException: No container found for type parameter 'T' of 'public fun <T> Value<T>.`<get-additionalText>`(): Int defined in root package'
  //   Mangled name computed from Fir:        #<get-additionalText>@Value<0:0>(){0§<kotlin.Any?>}kotlin.Int
  //   Public signature: /additionalText.<get-additionalText>|-1100553327198583886[0]
  // CHECK JS_IR:
  //   Mangled name computed from Ir:         #<get-additionalText>@Value<0:0>(){0§<kotlin.Any?>}
  //   Mangled name computed from Descriptor: could not compute mangled name: java.lang.IllegalArgumentException: No container found for type parameter 'T' of 'public fun <T> Value<T>.`<get-additionalText>`(): Int defined in root package'
  //   Mangled name computed from Fir:        #<get-additionalText>@Value<0:0>(){0§<kotlin.Any?>}kotlin.Int
  //   Public signature: /additionalText.<get-additionalText>|-1100553327198583886[0]
  get(): Int {
    return #additionalText$delegate.getValue(t = <this>, p = ::additionalText/*</* null */>()*/)
  }

// CHECK:
//   Mangled name computed from Ir:         @Value<0:0>{0§<kotlin.Any?>}additionalValue
//   Mangled name computed from Descriptor: could not compute mangled name: java.lang.IllegalArgumentException: No container found for type parameter 'T' of 'public fun <T> Value<T>.`<get-additionalValue>`(): Int defined in root package'
//   Mangled name computed from Fir:        @Value<0:0>{0§<kotlin.Any?>}additionalValue
//   Public signature: /additionalValue|-2810095538737902404[0]
val <T : Any?> Value<T>.additionalValue: Int /* by */ 
  field = DVal(kmember = Value::value)
  // CHECK JVM_IR:
  //   Mangled name computed from Ir:         #<get-additionalValue>@Value<0:0>(){0§<kotlin.Any?>}kotlin.Int
  //   Mangled name computed from Descriptor: could not compute mangled name: java.lang.IllegalArgumentException: No container found for type parameter 'T' of 'public fun <T> Value<T>.`<get-additionalValue>`(): Int defined in root package'
  //   Mangled name computed from Fir:        #<get-additionalValue>@Value<0:0>(){0§<kotlin.Any?>}kotlin.Int
  //   Public signature: /additionalValue.<get-additionalValue>|-6473236166172047985[0]
  // CHECK JS_IR:
  //   Mangled name computed from Ir:         #<get-additionalValue>@Value<0:0>(){0§<kotlin.Any?>}
  //   Mangled name computed from Descriptor: could not compute mangled name: java.lang.IllegalArgumentException: No container found for type parameter 'T' of 'public fun <T> Value<T>.`<get-additionalValue>`(): Int defined in root package'
  //   Mangled name computed from Fir:        #<get-additionalValue>@Value<0:0>(){0§<kotlin.Any?>}kotlin.Int
  //   Public signature: /additionalValue.<get-additionalValue>|-6473236166172047985[0]
  get(): Int {
    return #additionalValue$delegate.getValue(t = <this>, p = ::additionalValue/*</* null */>()*/)
  }

// CHECK:
//   Mangled name: DVal
//   Public signature: /DVal|null[0]
class DVal {
  // CHECK:
  //   Mangled name: DVal#<init>(kotlin.Any){}
  //   Public signature: /DVal.<init>|4518179880532599055[0]
  constructor(kmember: Any) /* primary */ {
    super/*Any*/()
    /* <init>() */

  }

  // CHECK:
  //   Mangled name: DVal{}kmember
  //   Public signature: /DVal.kmember|-9008673543363374935[0]
  val kmember: Any
    field = kmember
    // CHECK JVM_IR:
    //   Mangled name: DVal#<get-kmember>(){}kotlin.Any
    //   Public signature: /DVal.kmember.<get-kmember>|-7207078138930224715[0]
    // CHECK JS_IR:
    //   Mangled name computed from Ir:         DVal#<get-kmember>(){}
    //   Mangled name computed from Descriptor: DVal#<get-kmember>(){}
    //   Mangled name computed from Fir:        DVal#<get-kmember>(){}kotlin.Any
    //   Public signature: /DVal.kmember.<get-kmember>|-7207078138930224715[0]
    get

  // CHECK JVM_IR:
  //   Mangled name: DVal#getValue(kotlin.Any?;kotlin.Any){}kotlin.Int
  //   Public signature: /DVal.getValue|-4563103632143148557[0]
  // CHECK JS_IR:
  //   Mangled name computed from Ir:         DVal#getValue(kotlin.Any?;kotlin.Any){}
  //   Mangled name computed from Descriptor: DVal#getValue(kotlin.Any?;kotlin.Any){}
  //   Mangled name computed from Fir:        DVal#getValue(kotlin.Any?;kotlin.Any){}kotlin.Int
  //   Public signature: /DVal.getValue|-4563103632143148557[0]
  operator fun getValue(t: Any?, p: Any): Int {
    return 42
  }

}

// CHECK:
//   Mangled name: {}recivier
//   Public signature: /recivier|1393137265049165560[0]
var recivier: Any?
  field = "fail"
  // CHECK JVM_IR:
  //   Mangled name: #<get-recivier>(){}kotlin.Any?
  //   Public signature: /recivier.<get-recivier>|-76909196192166129[0]
  // CHECK JS_IR:
  //   Mangled name computed from Ir:         #<get-recivier>(){}
  //   Mangled name computed from Descriptor: #<get-recivier>(){}
  //   Mangled name computed from Fir:        #<get-recivier>(){}kotlin.Any?
  //   Public signature: /recivier.<get-recivier>|-76909196192166129[0]
  get
  // CHECK:
  //   Mangled name: #<set-recivier>(kotlin.Any?){}
  //   Public signature: /recivier.<set-recivier>|-6816770784536396062[0]
  set

// CHECK:
//   Mangled name: {}value2
//   Public signature: /value2|-1664181645671419060[0]
var value2: Any?
  field = "fail2"
  // CHECK JVM_IR:
  //   Mangled name: #<get-value2>(){}kotlin.Any?
  //   Public signature: /value2.<get-value2>|8693017805210729038[0]
  // CHECK JS_IR:
  //   Mangled name computed from Ir:         #<get-value2>(){}
  //   Mangled name computed from Descriptor: #<get-value2>(){}
  //   Mangled name computed from Fir:        #<get-value2>(){}kotlin.Any?
  //   Public signature: /value2.<get-value2>|8693017805210729038[0]
  get
  // CHECK:
  //   Mangled name: #<set-value2>(kotlin.Any?){}
  //   Public signature: /value2.<set-value2>|4550500963091635103[0]
  set

// CHECK:
//   Mangled name computed from Ir:         @0:0{0§<kotlin.Any?>}bar
//   Mangled name computed from Descriptor: could not compute mangled name: java.lang.IllegalArgumentException: No container found for type parameter 'T' of 'public fun <T> T.`<get-bar>`(): T defined in root package'
//   Mangled name computed from Fir:        @0:0{0§<kotlin.Any?>}bar
//   Public signature: /bar|-2607368775982314867[0]
var <T : Any?> T.bar: T
  // CHECK JVM_IR:
  //   Mangled name computed from Ir:         #<get-bar>@0:0(){0§<kotlin.Any?>}0:0
  //   Mangled name computed from Descriptor: could not compute mangled name: java.lang.IllegalArgumentException: No container found for type parameter 'T' of 'public fun <T> T.`<get-bar>`(): T defined in root package'
  //   Mangled name computed from Fir:        #<get-bar>@0:0(){0§<kotlin.Any?>}0:0
  //   Public signature: /bar.<get-bar>|-1733273639849676739[0]
  // CHECK JS_IR:
  //   Mangled name computed from Ir:         #<get-bar>@0:0(){0§<kotlin.Any?>}
  //   Mangled name computed from Descriptor: could not compute mangled name: java.lang.IllegalArgumentException: No container found for type parameter 'T' of 'public fun <T> T.`<get-bar>`(): T defined in root package'
  //   Mangled name computed from Fir:        #<get-bar>@0:0(){0§<kotlin.Any?>}0:0
  //   Public signature: /bar.<get-bar>|-1733273639849676739[0]
  get(): T {
    return <this>
  }
  // CHECK:
  //   Mangled name computed from Ir:         #<set-bar>@0:0(0:0){0§<kotlin.Any?>}
  //   Mangled name computed from Descriptor: could not compute mangled name: java.lang.IllegalArgumentException: No container found for type parameter 'T' of 'public fun <T> T.`<set-bar>`(value: T): Unit defined in root package'
  //   Mangled name computed from Fir:        #<set-bar>@0:0(0:0){0§<kotlin.Any?>}
  //   Public signature: /bar.<set-bar>|1507801333641327058[0]
  set(value: T) {
    <set-recivier>(<set-?> = <this>)
    <set-value2>(<set-?> = value)
  }

// CHECK:
//   Mangled name: {}barRef
//   Public signature: /barRef|3707178067815059623[0]
val barRef: KMutableProperty1<String?, String?>
  field = ::bar/*<String?>()*/
  // CHECK JVM_IR:
  //   Mangled name: #<get-barRef>(){}kotlin.reflect.KMutableProperty1<kotlin.String?,kotlin.String?>
  //   Public signature: /barRef.<get-barRef>|-5465997532673085658[0]
  // CHECK JS_IR:
  //   Mangled name computed from Ir:         #<get-barRef>(){}
  //   Mangled name computed from Descriptor: #<get-barRef>(){}
  //   Mangled name computed from Fir:        #<get-barRef>(){}kotlin.reflect.KMutableProperty1<kotlin.String?,kotlin.String?>
  //   Public signature: /barRef.<get-barRef>|-5465997532673085658[0]
  get

