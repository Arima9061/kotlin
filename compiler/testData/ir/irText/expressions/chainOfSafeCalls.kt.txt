// CHECK:
//   Mangled name: C
//   Public signature: /C|null[0]
class C {
  // CHECK:
  //   Mangled name: C#<init>(){}
  //   Public signature: /C.<init>|-5645683436151566731[0]
  constructor() /* primary */ {
    super/*Any*/()
    /* <init>() */

  }

  // CHECK JVM_IR:
  //   Mangled name: C#foo(){}C
  //   Public signature: /C.foo|3027884397623430086[0]
  // CHECK JS_IR:
  //   Mangled name: C#foo(){}
  //   Public signature: /C.foo|-1041209573719867811[0]
  fun foo(): C {
    return <this>
  }

  // CHECK JVM_IR:
  //   Mangled name: C#bar(){}C?
  //   Public signature: /C.bar|1617899871460343611[0]
  // CHECK JS_IR:
  //   Mangled name: C#bar(){}
  //   Public signature: /C.bar|496682602797471549[0]
  fun bar(): C? {
    return <this>
  }

}

// CHECK JVM_IR:
//   Mangled name: #test(C?){}C?
//   Public signature: /test|2090113898813172602[0]
// CHECK JS_IR:
//   Mangled name: #test(C?){}
//   Public signature: /test|-9127084887599042119[0]
fun test(nc: C?): C? {
  return { // BLOCK
    val tmp3_safe_receiver: C? = { // BLOCK
      val tmp2_safe_receiver: C? = { // BLOCK
        val tmp1_safe_receiver: C? = { // BLOCK
          val tmp0_safe_receiver: C? = nc
          when {
            EQEQ(arg0 = tmp0_safe_receiver, arg1 = null) -> null
            else -> tmp0_safe_receiver.foo()
          }
        }
        when {
          EQEQ(arg0 = tmp1_safe_receiver, arg1 = null) -> null
          else -> tmp1_safe_receiver.bar()
        }
      }
      when {
        EQEQ(arg0 = tmp2_safe_receiver, arg1 = null) -> null
        else -> tmp2_safe_receiver.foo()
      }
    }
    when {
      EQEQ(arg0 = tmp3_safe_receiver, arg1 = null) -> null
      else -> tmp3_safe_receiver.foo()
    }
  }
}

