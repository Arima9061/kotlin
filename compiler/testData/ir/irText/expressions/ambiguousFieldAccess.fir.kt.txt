package test

// CHECK:
//   Mangled name computed from Ir:         test#eval(kotlin.Function0<0:0>){0ยง<kotlin.Any?>}0:0
//   Mangled name computed from Descriptor: test#eval(kotlin.Function0<0:0>){0ยง<kotlin.Any?>}0:0
//   Mangled name computed from Fir:        #eval(kotlin.Function0<0:0>){0ยง<kotlin.Any?>}0:0
//   Public signature: test/eval|-3571752498880916343[0]
fun <T : Any?> eval(f: Function0<T>): T {
  return f.invoke()
}

// CHECK:
//   Mangled name: test.C
//   Public signature: test/C|null[0]
class C : B {
  // CHECK:
  //   Mangled name: test.C#<init>(){}
  //   Public signature: test/C.<init>|-5645683436151566731[0]
  constructor() /* primary */ {
    super/*B*/()
    /* <init>() */

  }

  // CHECK:
  //   Mangled name: test.C#f(){}kotlin.String?
  //   Public signature: test/C.f|6718023650115810455[0]
  fun f(): @FlexibleNullability String? {
    return eval<@FlexibleNullability String?>(f = 
      // CHECK:
      //   Mangled name computed from Ir:         test.C#f(){}kotlin.String?#<anonymous>#static(){}kotlin.String?
      //   Mangled name computed from Descriptor: test.C#f(){}kotlin.String?#<anonymous>#static(){}kotlin.String?
      //   Mangled name computed from Fir:        could not compute mangled name: java.lang.IllegalStateException: unexpected element eval@fun <anonymous>(): R|kotlin/String!| <inline=NoInline>  {... (truncated)
      local fun <anonymous>(): @FlexibleNullability String? {
        return <this>.#x
      }
)
  }

  // CHECK:
  //   Mangled name: test.C#g(){}kotlin.String?
  //   Public signature: test/C.g|-377144927952738440[0]
  fun g(): @FlexibleNullability String? {
    return eval<@FlexibleNullability String?>(f = 
      // CHECK:
      //   Mangled name computed from Ir:         test.C#g(){}kotlin.String?#<anonymous>#static(){}kotlin.String?
      //   Mangled name computed from Descriptor: test.C#g(){}kotlin.String?#<anonymous>#static(){}kotlin.String?
      //   Mangled name computed from Fir:        could not compute mangled name: java.lang.IllegalStateException: unexpected element eval@fun <anonymous>(): R|kotlin/String!| <inline=NoInline>  {... (truncated)
      local fun <anonymous>(): @FlexibleNullability String? {
        return <this>.#y
      }
)
  }

}

