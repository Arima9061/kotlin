// CHECK:
//   Mangled name: {}p
//   Public signature: /p|6715504260787941082[0]
var p: Int
  field = 0
  // CHECK:
  //   Mangled name: #<get-p>(){}kotlin.Int
  //   Public signature: /p.<get-p>|5329635969197638839[0]
  get
  // CHECK:
  //   Mangled name: #<set-p>(kotlin.Int){}
  //   Public signature: /p.<set-p>|-6346582004572228570[0]
  set

// CHECK:
//   Mangled name: {}arr
//   Public signature: /arr|3895543167155351037[0]
val arr: IntArray
  field = intArrayOf(elements = [1, 2, 3])
  // CHECK:
  //   Mangled name: #<get-arr>(){}kotlin.IntArray
  //   Public signature: /arr.<get-arr>|-3280308842233711836[0]
  get

// CHECK:
//   Mangled name: C
//   Public signature: /C|null[0]
class C {
  // CHECK:
  //   Mangled name: C#<init>(){}
  //   Public signature: /C.<init>|-5645683436151566731[0]
  constructor() /* primary */ {
    super/*Any*/()
    /* <init>() */

  }

  // CHECK:
  //   Mangled name: C{}p
  //   Public signature: /C.p|6715504260787941082[0]
  var p: Int
    field = 0
    // CHECK:
    //   Mangled name: C#<get-p>(){}kotlin.Int
    //   Public signature: /C.p.<get-p>|5329635969197638839[0]
    get
    // CHECK:
    //   Mangled name: C#<set-p>(kotlin.Int){}
    //   Public signature: /C.p.<set-p>|-6346582004572228570[0]
    set

  // CHECK:
  //   Mangled name: C#get(kotlin.Int){}kotlin.Int
  //   Public signature: /C.get|3217555545696752959[0]
  operator fun get(i: Int): Int {
    return i
  }

  // CHECK:
  //   Mangled name: C#set(kotlin.Int;kotlin.Int){}
  //   Public signature: /C.set|-213984015376347786[0]
  operator fun set(i: Int, value: Int) {
  }

}

// CHECK:
//   Mangled name: O
//   Public signature: /O|null[0]
object O {
  // CHECK:
  //   Mangled name: O#<init>(){}
  //   Public signature: /O.<init>|-5645683436151566731[0]
  private constructor() /* primary */ {
    super/*Any*/()
    /* <init>() */

  }

  // CHECK:
  //   Mangled name: O{}p
  //   Public signature: /O.p|6715504260787941082[0]
  var p: Int
    field = 0
    // CHECK:
    //   Mangled name: O#<get-p>(){}kotlin.Int
    //   Public signature: /O.p.<get-p>|5329635969197638839[0]
    get
    // CHECK:
    //   Mangled name: O#<set-p>(kotlin.Int){}
    //   Public signature: /O.p.<set-p>|-6346582004572228570[0]
    set

  // CHECK:
  //   Mangled name: O#get(kotlin.Int){}kotlin.Int
  //   Public signature: /O.get|3217555545696752959[0]
  operator fun get(i: Int): Int {
    return i
  }

  // CHECK:
  //   Mangled name: O#set(kotlin.Int;kotlin.Int){}
  //   Public signature: /O.set|-213984015376347786[0]
  operator fun set(i: Int, value: Int) {
  }

}

// CHECK:
//   Mangled name: #testVarPrefix(){}
//   Public signature: /testVarPrefix|-4413709736918376229[0]
fun testVarPrefix() {
  var x: Int = 0
  val x1: Int = { // BLOCK
    x = x.inc()
    x
  }
  val x2: Int = { // BLOCK
    x = x.dec()
    x
  }
}

// CHECK:
//   Mangled name: #testVarPostfix(){}
//   Public signature: /testVarPostfix|-5300999320944368230[0]
fun testVarPostfix() {
  var x: Int = 0
  val x1: Int = { // BLOCK
    val tmp0: Int = x
    x = tmp0.inc()
    tmp0
  }
  val x2: Int = { // BLOCK
    val tmp1: Int = x
    x = tmp1.dec()
    tmp1
  }
}

// CHECK:
//   Mangled name: #testPropPrefix(){}
//   Public signature: /testPropPrefix|-2042336393408932139[0]
fun testPropPrefix() {
  val p1: Int = { // BLOCK
    { // BLOCK
      <set-p>(<set-?> = <get-p>().inc())
      <get-p>()
    }
  }
  val p2: Int = { // BLOCK
    { // BLOCK
      <set-p>(<set-?> = <get-p>().dec())
      <get-p>()
    }
  }
}

// CHECK:
//   Mangled name: #testPropPostfix(){}
//   Public signature: /testPropPostfix|-2249245688892536772[0]
fun testPropPostfix() {
  val p1: Int = { // BLOCK
    { // BLOCK
      val tmp0: Int = <get-p>()
      <set-p>(<set-?> = tmp0.inc())
      tmp0
    }
  }
  val p2: Int = { // BLOCK
    { // BLOCK
      val tmp1: Int = <get-p>()
      <set-p>(<set-?> = tmp1.dec())
      tmp1
    }
  }
}

// CHECK:
//   Mangled name: #testArrayPrefix(){}
//   Public signature: /testArrayPrefix|3229135807367985846[0]
fun testArrayPrefix() {
  val a1: Int = { // BLOCK
    val tmp0_array: IntArray = <get-arr>()
    val tmp1_index0: Int = 0
    tmp0_array.set(index = tmp1_index0, value = tmp0_array.get(index = tmp1_index0).inc())
    tmp0_array.get(index = tmp1_index0)
  }
  val a2: Int = { // BLOCK
    val tmp2_array: IntArray = <get-arr>()
    val tmp3_index0: Int = 0
    tmp2_array.set(index = tmp3_index0, value = tmp2_array.get(index = tmp3_index0).dec())
    tmp2_array.get(index = tmp3_index0)
  }
}

// CHECK:
//   Mangled name: #testArrayPostfix(){}
//   Public signature: /testArrayPostfix|-5183940712820420583[0]
fun testArrayPostfix() {
  val a1: Int = { // BLOCK
    val tmp0_array: IntArray = <get-arr>()
    val tmp1_index0: Int = 0
    val tmp2: Int = tmp0_array.get(index = tmp1_index0)
    tmp0_array.set(index = tmp1_index0, value = tmp2.inc())
    tmp2
  }
  val a2: Int = { // BLOCK
    val tmp3_array: IntArray = <get-arr>()
    val tmp4_index0: Int = 0
    val tmp5: Int = tmp3_array.get(index = tmp4_index0)
    tmp3_array.set(index = tmp4_index0, value = tmp5.dec())
    tmp5
  }
}

// CHECK:
//   Mangled name: #testClassPropPrefix(){}
//   Public signature: /testClassPropPrefix|1087589743797908334[0]
fun testClassPropPrefix() {
  val p1: Int = { // BLOCK
    val tmp0_this: C = C()
    { // BLOCK
      tmp0_this.<set-p>(<set-?> = tmp0_this.<get-p>().inc())
      tmp0_this.<get-p>()
    }
  }
  val p2: Int = { // BLOCK
    val tmp1_this: C = C()
    { // BLOCK
      tmp1_this.<set-p>(<set-?> = tmp1_this.<get-p>().dec())
      tmp1_this.<get-p>()
    }
  }
}

// CHECK:
//   Mangled name: #testClassPropPostfix(){}
//   Public signature: /testClassPropPostfix|-4203305206320166261[0]
fun testClassPropPostfix() {
  val p1: Int = { // BLOCK
    val tmp0_this: C = C()
    { // BLOCK
      val tmp1: Int = tmp0_this.<get-p>()
      tmp0_this.<set-p>(<set-?> = tmp1.inc())
      tmp1
    }
  }
  val p2: Int = { // BLOCK
    val tmp2_this: C = C()
    { // BLOCK
      val tmp3: Int = tmp2_this.<get-p>()
      tmp2_this.<set-p>(<set-?> = tmp3.dec())
      tmp3
    }
  }
}

// CHECK:
//   Mangled name: #testClassOperatorPrefix(){}
//   Public signature: /testClassOperatorPrefix|6915419153076323743[0]
fun testClassOperatorPrefix() {
  val a1: Int = { // BLOCK
    val tmp0_array: C = C()
    val tmp1_index0: Int = 0
    tmp0_array.set(i = tmp1_index0, value = tmp0_array.get(i = tmp1_index0).inc())
    tmp0_array.get(i = tmp1_index0)
  }
  val a2: Int = { // BLOCK
    val tmp2_array: C = C()
    val tmp3_index0: Int = 0
    tmp2_array.set(i = tmp3_index0, value = tmp2_array.get(i = tmp3_index0).dec())
    tmp2_array.get(i = tmp3_index0)
  }
}

// CHECK:
//   Mangled name: #testClassOperatorPostfix(){}
//   Public signature: /testClassOperatorPostfix|2906708313202825150[0]
fun testClassOperatorPostfix() {
  val a1: Int = { // BLOCK
    val tmp0_array: C = C()
    val tmp1_index0: Int = 0
    val tmp2: Int = tmp0_array.get(i = tmp1_index0)
    tmp0_array.set(i = tmp1_index0, value = tmp2.inc())
    tmp2
  }
  val a2: Int = { // BLOCK
    val tmp3_array: C = C()
    val tmp4_index0: Int = 0
    val tmp5: Int = tmp3_array.get(i = tmp4_index0)
    tmp3_array.set(i = tmp4_index0, value = tmp5.dec())
    tmp5
  }
}

// CHECK:
//   Mangled name: #testObjectPropPrefix(){}
//   Public signature: /testObjectPropPrefix|428265185993627760[0]
fun testObjectPropPrefix() {
  val p1: Int = { // BLOCK
    val tmp0_this: O = O
    { // BLOCK
      tmp0_this.<set-p>(<set-?> = tmp0_this.<get-p>().inc())
      tmp0_this.<get-p>()
    }
  }
  val p2: Int = { // BLOCK
    val tmp1_this: O = O
    { // BLOCK
      tmp1_this.<set-p>(<set-?> = tmp1_this.<get-p>().dec())
      tmp1_this.<get-p>()
    }
  }
}

// CHECK:
//   Mangled name: #testObjectPropPostfix(){}
//   Public signature: /testObjectPropPostfix|2876726747893752873[0]
fun testObjectPropPostfix() {
  val p1: Int = { // BLOCK
    val tmp0_this: O = O
    { // BLOCK
      val tmp1: Int = tmp0_this.<get-p>()
      tmp0_this.<set-p>(<set-?> = tmp1.inc())
      tmp1
    }
  }
  val p2: Int = { // BLOCK
    val tmp2_this: O = O
    { // BLOCK
      val tmp3: Int = tmp2_this.<get-p>()
      tmp2_this.<set-p>(<set-?> = tmp3.dec())
      tmp3
    }
  }
}

// CHECK:
//   Mangled name: #testObjectOperatorPrefix(){}
//   Public signature: /testObjectOperatorPrefix|-3519675779257775428[0]
fun testObjectOperatorPrefix() {
  val a1: Int = { // BLOCK
    val tmp0_array: O = O
    val tmp1_index0: Int = 0
    tmp0_array.set(i = tmp1_index0, value = tmp0_array.get(i = tmp1_index0).inc())
    tmp0_array.get(i = tmp1_index0)
  }
  val a2: Int = { // BLOCK
    val tmp2_array: O = O
    val tmp3_index0: Int = 0
    tmp2_array.set(i = tmp3_index0, value = tmp2_array.get(i = tmp3_index0).dec())
    tmp2_array.get(i = tmp3_index0)
  }
}

// CHECK:
//   Mangled name: #testObjectOperatorPostfix(){}
//   Public signature: /testObjectOperatorPostfix|3636050613187164383[0]
fun testObjectOperatorPostfix() {
  val a1: Int = { // BLOCK
    val tmp0_array: O = O
    val tmp1_index0: Int = 0
    val tmp2: Int = tmp0_array.get(i = tmp1_index0)
    tmp0_array.set(i = tmp1_index0, value = tmp2.inc())
    tmp2
  }
  val a2: Int = { // BLOCK
    val tmp3_array: O = O
    val tmp4_index0: Int = 0
    val tmp5: Int = tmp3_array.get(i = tmp4_index0)
    tmp3_array.set(i = tmp4_index0, value = tmp5.dec())
    tmp5
  }
}

