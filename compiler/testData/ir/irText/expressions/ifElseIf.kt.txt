// CHECK JVM_IR:
//   Mangled name: #test(kotlin.Int){}kotlin.Int
//   Public signature: /test|-291422697420002546[0]
// CHECK JS_IR:
//   Mangled name: #test(kotlin.Int){}
//   Public signature: /test|7577436859890467564[0]
fun test(i: Int): Int {
  return when {
    greater(arg0 = i, arg1 = 0) -> 1
    less(arg0 = i, arg1 = 0) -> -1
    else -> 0
  }
}

// CHECK:
//   Mangled name: #testEmptyBranches1(kotlin.Boolean){}
//   Public signature: /testEmptyBranches1|6749407893686345218[0]
fun testEmptyBranches1(flag: Boolean) {
  when {
    flag -> { // BLOCK
    }
    else -> true /*~> Unit */
  }
  when {
    flag -> true /*~> Unit */
  }
}

// CHECK:
//   Mangled name: #testEmptyBranches2(kotlin.Boolean){}
//   Public signature: /testEmptyBranches2|3860029463289034948[0]
fun testEmptyBranches2(flag: Boolean) {
  when {
    flag -> { // BLOCK
    }
    else -> true /*~> Unit */
  }
  when {
    flag -> true /*~> Unit */
    else -> { // BLOCK
    }
  }
}

// CHECK:
//   Mangled name: #testEmptyBranches3(kotlin.Boolean){}
//   Public signature: /testEmptyBranches3|-3957627705861131354[0]
fun testEmptyBranches3(flag: Boolean) {
  when {
    flag -> { // BLOCK
    }
    else -> true /*~> Unit */
  }
}

