// CHECK:
//   Mangled name: FiveTimes
//   Public signature: /FiveTimes|null[0]
object FiveTimes {
  // CHECK:
  //   Mangled name: FiveTimes#<init>(){}
  //   Public signature: /FiveTimes.<init>|-5645683436151566731[0]
  private constructor() /* primary */ {
    super/*Any*/()
    /* <init>() */

  }

}

// CHECK:
//   Mangled name: IntCell
//   Public signature: /IntCell|null[0]
class IntCell {
  // CHECK:
  //   Mangled name: IntCell#<init>(kotlin.Int){}
  //   Public signature: /IntCell.<init>|-5182794243525578284[0]
  constructor(value: Int) /* primary */ {
    super/*Any*/()
    /* <init>() */

  }

  // CHECK:
  //   Mangled name: IntCell{}value
  //   Public signature: /IntCell.value|1987073854177347439[0]
  var value: Int
    field = value
    // CHECK:
    //   Mangled name: IntCell#<get-value>(){}kotlin.Int
    //   Public signature: /IntCell.value.<get-value>|-5900028706170996[0]
    get
    // CHECK:
    //   Mangled name: IntCell#<set-value>(kotlin.Int){}
    //   Public signature: /IntCell.value.<set-value>|-195057410739577239[0]
    set

}

// CHECK:
//   Mangled name: IReceiver
//   Public signature: /IReceiver|null[0]
interface IReceiver {
  // CHECK:
  //   Mangled name: IReceiver#iterator@FiveTimes(){}IntCell
  //   Public signature: /IReceiver.iterator|-6854781980601462817[0]
  operator fun FiveTimes.iterator(): IntCell {
    return IntCell(value = 5)
  }

  // CHECK:
  //   Mangled name: IReceiver#hasNext@IntCell(){}kotlin.Boolean
  //   Public signature: /IReceiver.hasNext|8807543829800046753[0]
  operator fun IntCell.hasNext(): Boolean {
    return greater(arg0 = <this>.<get-value>(), arg1 = 0)
  }

  // CHECK:
  //   Mangled name: IReceiver#next@IntCell(){}kotlin.Int
  //   Public signature: /IReceiver.next|-2134453721443530519[0]
  operator fun IntCell.next(): Int {
    return { // BLOCK
      val tmp0_this: IntCell = <this>
      { // BLOCK
        val tmp1: Int = tmp0_this.<get-value>()
        tmp0_this.<set-value>(<set-?> = tmp1.dec())
        tmp1
      }
    }
  }

}

// CHECK:
//   Mangled name: #test@IReceiver(){}
//   Public signature: /test|-5472672617978108350[0]
fun IReceiver.test() {
  { // BLOCK
    val tmp0_iterator: IntCell = (<this>, FiveTimes).iterator()
    while ((<this>, tmp0_iterator).hasNext()) { // BLOCK
      val i: Int = (<this>, tmp0_iterator).next()
      { // BLOCK
        println(message = i)
      }
    }
  }
}

