// CHECK:
//   Mangled name: {}test1
//   Public signature: /test1|6005685442305498193[0]
val test1: Function0<Unit>
  field = 
    // CHECK:
    //   Mangled name (compatible mode: false): {}test1#<anonymous>#static(){}
    //   Mangled name (compatible mode: true):  test1#<anonymous>#static(){}
    local fun <anonymous>() {
      42 /*~> Unit */
    }

  // CHECK:
  //   Mangled name: #<get-test1>(){}kotlin.Function0<kotlin.Unit>
  //   Public signature: /test1.<get-test1>|4031203072491725526[0]
  get

// CHECK:
//   Mangled name: #test2(kotlin.collections.MutableCollection<kotlin.String>){}
//   Public signature: /test2|127920314882232051[0]
fun test2(mc: MutableCollection<String>) {
  mc.add(element = "") /*~> Unit */
}

// CHECK:
//   Mangled name: #test3(){}
//   Public signature: /test3|-3759735065270951803[0]
fun test3() {
  { // BLOCK
    val tmp0_safe_receiver: @FlexibleNullability PrintStream? = super<System>.#out
    when {
      EQEQ(arg0 = tmp0_safe_receiver, arg1 = null) -> null
      else -> tmp0_safe_receiver /*!! PrintStream */.println(p0 = "Hello,")
    }
  } /*~> Unit */
  { // BLOCK
    val tmp1_safe_receiver: @FlexibleNullability PrintStream? = super<System>.#out
    when {
      EQEQ(arg0 = tmp1_safe_receiver, arg1 = null) -> null
      else -> tmp1_safe_receiver /*!! PrintStream */.println(p0 = "world!")
    }
  } /*~> Unit */
}

