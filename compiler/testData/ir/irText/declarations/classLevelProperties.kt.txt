// CHECK:
//   Mangled name: C
//   Public signature: /C|null[0]
class C {
  // CHECK:
  //   Mangled name: C#<init>(){}
  //   Public signature: /C.<init>|-5645683436151566731[0]
  constructor() /* primary */ {
    super/*Any*/()
    /* <init>() */

  }

  // CHECK:
  //   Mangled name: C{}test1
  //   Public signature: /C.test1|6005685442305498193[0]
  val test1: Int
    field = 0
    // CHECK:
    //   Mangled name: C#<get-test1>(){}kotlin.Int
    //   Public signature: /C.test1.<get-test1>|3978508226793108919[0]
    get

  // CHECK:
  //   Mangled name: C{}test2
  //   Public signature: /C.test2|2517758057000911509[0]
  val test2: Int
    // CHECK:
    //   Mangled name: C#<get-test2>(){}kotlin.Int
    //   Public signature: /C.test2.<get-test2>|-8779933517717592707[0]
    get(): Int {
      return 0
    }

  // CHECK:
  //   Mangled name: C{}test3
  //   Public signature: /C.test3|7677556066983021166[0]
  var test3: Int
    field = 0
    // CHECK:
    //   Mangled name: C#<get-test3>(){}kotlin.Int
    //   Public signature: /C.test3.<get-test3>|6145294165644146033[0]
    get
    // CHECK:
    //   Mangled name: C#<set-test3>(kotlin.Int){}
    //   Public signature: /C.test3.<set-test3>|-4170290427940674844[0]
    set

  // CHECK:
  //   Mangled name: C{}test4
  //   Public signature: /C.test4|-9115637610245762085[0]
  var test4: Int
    field = 1
    // CHECK:
    //   Mangled name: C#<get-test4>(){}kotlin.Int
    //   Public signature: /C.test4.<get-test4>|-8911174941514444072[0]
    get
    // CHECK:
    //   Mangled name: C#<set-test4>(kotlin.Int){}
    //   Public signature: /C.test4.<set-test4>|8105340104867729538[0]
    set(value: Int) {
      <this>.#test4 = value
    }

  // CHECK:
  //   Mangled name: C{}test5
  //   Public signature: /C.test5|4734809624271551895[0]
  var test5: Int
    field = 1
    // CHECK:
    //   Mangled name: C#<get-test5>(){}kotlin.Int
    //   Public signature: /C.test5.<get-test5>|-639929328226188476[0]
    get
    // CHECK:
    //   Mangled name: C#<set-test5>(kotlin.Int){}
    //   Public signature: /C.test5.<set-test5>|-8941794992615749462[0]
    private set

  // CHECK:
  //   Mangled name: C{}test6
  //   Public signature: /C.test6|-2606527149405855403[0]
  val test6: Int
    field = 1
    // CHECK:
    //   Mangled name: C#<get-test6>(){}kotlin.Int
    //   Public signature: /C.test6.<get-test6>|-7378740493776144578[0]
    get

  // CHECK:
  //   Mangled name: C{}test7
  //   Public signature: /C.test7|1362036650170262859[0]
  val test7: Int /* by */ 
    field = lazy<Int>(initializer = 
      // CHECK:
      //   Mangled name (compatible mode: false): C{}test7#<anonymous>#static(){}kotlin.Int
      //   Mangled name (compatible mode: true):  C.test7$delegate#<anonymous>#static(){}kotlin.Int
      local fun <anonymous>(): Int {
        return 42
      }
)
    // CHECK:
    //   Mangled name: C#<get-test7>(){}kotlin.Int
    //   Public signature: /C.test7.<get-test7>|-7305979124924885797[0]
    get(): Int {
      return <this>.#test7$delegate.getValue<Int>(thisRef = <this>, property = C::test7)
    }

  // CHECK:
  //   Mangled name: C{}test8
  //   Public signature: /C.test8|5640428216506241852[0]
  var test8: Int /* by */ 
    field = hashMapOf<String, Int>()
    // CHECK:
    //   Mangled name: C#<get-test8>(){}kotlin.Int
    //   Public signature: /C.test8.<get-test8>|-4986202166917088055[0]
    get(): Int {
      return <this>.#test8$delegate.getValue<Int, Int>(thisRef = <this>, property = C::test8)
    }
    // CHECK:
    //   Mangled name: C#<set-test8>(kotlin.Int){}
    //   Public signature: /C.test8.<set-test8>|-6993542117905462862[0]
    set(<set-?>: Int) {
      return <this>.#test8$delegate.setValue<Int>(thisRef = <this>, property = C::test8, value = <set-?>)
    }

}

