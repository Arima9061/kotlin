// CHECK:
//   Mangled name: {}test1
//   Public signature: /test1|6005685442305498193[0]
val test1: Function1<String, String>
  field = 
    // CHECK JVM_IR:
    //   Mangled name computed from Ir (compatible mode: false):         {}test1#<anonymous>#static(kotlin.String){}kotlin.String
    //   Mangled name computed from Ir (compatible mode: true):          test1#<anonymous>#static(kotlin.String){}kotlin.String
    //   Mangled name computed from Descriptor (compatible mode: false): {}test1#jf#<anonymous>#static(kotlin.String){}kotlin.String
    //   Mangled name computed from Descriptor (compatible mode: true):  {}test1#jf#<anonymous>#static(kotlin.String){}kotlin.String
    //   Mangled name computed from Fir (compatible mode: false):        could not compute mangled name: java.lang.IllegalStateException: unexpected element fun <anonymous>(it: R|kotlin/String|): R|kotlin/String| <inline=Unknown>  {... (truncated)
    //   Mangled name computed from Fir (compatible mode: true):         could not compute mangled name: java.lang.IllegalStateException: unexpected element fun <anonymous>(it: R|kotlin/String|): R|kotlin/String| <inline=Unknown>  {... (truncated)
    // CHECK JS_IR:
    //   Mangled name computed from Ir (compatible mode: false):         {}test1#<anonymous>#static(kotlin.String){}
    //   Mangled name computed from Ir (compatible mode: true):          test1#<anonymous>#static(kotlin.String){}
    //   Mangled name computed from Descriptor (compatible mode: false): {}test1#<anonymous>#static(kotlin.String){}
    //   Mangled name computed from Descriptor (compatible mode: true):  {}test1#<anonymous>#static(kotlin.String){}
    //   Mangled name computed from Fir (compatible mode: false):        could not compute mangled name: java.lang.IllegalStateException: unexpected element fun <anonymous>(it: R|kotlin/String|): R|kotlin/String| <inline=Unknown>  {... (truncated)
    //   Mangled name computed from Fir (compatible mode: true):         could not compute mangled name: java.lang.IllegalStateException: unexpected element fun <anonymous>(it: R|kotlin/String|): R|kotlin/String| <inline=Unknown>  {... (truncated)
    local fun <anonymous>(it: String): String {
      return it
    }

  // CHECK JVM_IR:
  //   Mangled name: #<get-test1>(){}kotlin.Function1<kotlin.String,kotlin.String>
  //   Public signature: /test1.<get-test1>|2788097897117242625[0]
  // CHECK JS_IR:
  //   Mangled name computed from Ir:         #<get-test1>(){}
  //   Mangled name computed from Descriptor: #<get-test1>(){}
  //   Mangled name computed from Fir:        #<get-test1>(){}kotlin.Function1<kotlin.String,kotlin.String>
  //   Public signature: /test1.<get-test1>|2788097897117242625[0]
  get

// CHECK:
//   Mangled name: {}test2
//   Public signature: /test2|2517758057000911509[0]
val test2: @ExtensionFunctionType Function2<Any, Any, Any>
  field = 
    // CHECK JVM_IR:
    //   Mangled name computed from Ir (compatible mode: false):         {}test2#<anonymous>#static@kotlin.Any(kotlin.Any){}kotlin.Int
    //   Mangled name computed from Ir (compatible mode: true):          test2#<anonymous>#static@kotlin.Any(kotlin.Any){}kotlin.Int
    //   Mangled name computed from Descriptor (compatible mode: false): {}test2#jf#<anonymous>#static@kotlin.Any(kotlin.Any){}kotlin.Int
    //   Mangled name computed from Descriptor (compatible mode: true):  {}test2#jf#<anonymous>#static@kotlin.Any(kotlin.Any){}kotlin.Int
    //   Mangled name computed from Fir (compatible mode: false):        could not compute mangled name: java.lang.IllegalStateException: unexpected element fun R|kotlin/Any|.<anonymous>(it: R|kotlin/Any|): R|kotlin/Int| <inline=Unknown>  {... (truncated)
    //   Mangled name computed from Fir (compatible mode: true):         could not compute mangled name: java.lang.IllegalStateException: unexpected element fun R|kotlin/Any|.<anonymous>(it: R|kotlin/Any|): R|kotlin/Int| <inline=Unknown>  {... (truncated)
    // CHECK JS_IR:
    //   Mangled name computed from Ir (compatible mode: false):         {}test2#<anonymous>#static@kotlin.Any(kotlin.Any){}
    //   Mangled name computed from Ir (compatible mode: true):          test2#<anonymous>#static@kotlin.Any(kotlin.Any){}
    //   Mangled name computed from Descriptor (compatible mode: false): {}test2#<anonymous>#static@kotlin.Any(kotlin.Any){}
    //   Mangled name computed from Descriptor (compatible mode: true):  {}test2#<anonymous>#static@kotlin.Any(kotlin.Any){}
    //   Mangled name computed from Fir (compatible mode: false):        could not compute mangled name: java.lang.IllegalStateException: unexpected element fun R|kotlin/Any|.<anonymous>(it: R|kotlin/Any|): R|kotlin/Int| <inline=Unknown>  {... (truncated)
    //   Mangled name computed from Fir (compatible mode: true):         could not compute mangled name: java.lang.IllegalStateException: unexpected element fun R|kotlin/Any|.<anonymous>(it: R|kotlin/Any|): R|kotlin/Int| <inline=Unknown>  {... (truncated)
    local fun Any.<anonymous>(it: Any): Int {
      return it.hashCode()
    }

  // CHECK JVM_IR:
  //   Mangled name: #<get-test2>(){}kotlin.Function2<kotlin.Any,kotlin.Any,kotlin.Any>
  //   Public signature: /test2.<get-test2>|-8953585576935292690[0]
  // CHECK JS_IR:
  //   Mangled name computed from Ir:         #<get-test2>(){}
  //   Mangled name computed from Descriptor: #<get-test2>(){}
  //   Mangled name computed from Fir:        #<get-test2>(){}kotlin.Function2<kotlin.Any,kotlin.Any,kotlin.Any>
  //   Public signature: /test2.<get-test2>|-8953585576935292690[0]
  get

// CHECK:
//   Mangled name: {}test3
//   Public signature: /test3|7677556066983021166[0]
val test3: Function2<Int, Int, Unit>
  field = 
    // CHECK JVM_IR:
    //   Mangled name computed from Ir (compatible mode: false):         {}test3#<anonymous>#static(kotlin.Int;kotlin.Int){}
    //   Mangled name computed from Ir (compatible mode: true):          test3#<anonymous>#static(kotlin.Int;kotlin.Int){}
    //   Mangled name computed from Descriptor (compatible mode: false): {}test3#jf#<anonymous>#static(kotlin.Int;kotlin.Int){}
    //   Mangled name computed from Descriptor (compatible mode: true):  {}test3#jf#<anonymous>#static(kotlin.Int;kotlin.Int){}
    //   Mangled name computed from Fir (compatible mode: false):        could not compute mangled name: java.lang.IllegalStateException: unexpected element fun <anonymous>(i: R|kotlin/Int|, j: R|kotlin/Int|): R|kotlin/Unit| <inline=Unknown>  {... (truncated)
    //   Mangled name computed from Fir (compatible mode: true):         could not compute mangled name: java.lang.IllegalStateException: unexpected element fun <anonymous>(i: R|kotlin/Int|, j: R|kotlin/Int|): R|kotlin/Unit| <inline=Unknown>  {... (truncated)
    // CHECK JS_IR:
    //   Mangled name computed from Ir (compatible mode: false):         {}test3#<anonymous>#static(kotlin.Int;kotlin.Int){}
    //   Mangled name computed from Ir (compatible mode: true):          test3#<anonymous>#static(kotlin.Int;kotlin.Int){}
    //   Mangled name computed from Descriptor (compatible mode: false): {}test3#<anonymous>#static(kotlin.Int;kotlin.Int){}
    //   Mangled name computed from Descriptor (compatible mode: true):  {}test3#<anonymous>#static(kotlin.Int;kotlin.Int){}
    //   Mangled name computed from Fir (compatible mode: false):        could not compute mangled name: java.lang.IllegalStateException: unexpected element fun <anonymous>(i: R|kotlin/Int|, j: R|kotlin/Int|): R|kotlin/Unit| <inline=Unknown>  {... (truncated)
    //   Mangled name computed from Fir (compatible mode: true):         could not compute mangled name: java.lang.IllegalStateException: unexpected element fun <anonymous>(i: R|kotlin/Int|, j: R|kotlin/Int|): R|kotlin/Unit| <inline=Unknown>  {... (truncated)
    local fun <anonymous>(i: Int, j: Int) {
      return Unit
    }

  // CHECK JVM_IR:
  //   Mangled name: #<get-test3>(){}kotlin.Function2<kotlin.Int,kotlin.Int,kotlin.Unit>
  //   Public signature: /test3.<get-test3>|7794341945053892780[0]
  // CHECK JS_IR:
  //   Mangled name computed from Ir:         #<get-test3>(){}
  //   Mangled name computed from Descriptor: #<get-test3>(){}
  //   Mangled name computed from Fir:        #<get-test3>(){}kotlin.Function2<kotlin.Int,kotlin.Int,kotlin.Unit>
  //   Public signature: /test3.<get-test3>|7794341945053892780[0]
  get

// CHECK:
//   Mangled name: {}test4
//   Public signature: /test4|-9115637610245762085[0]
val test4: Function2<Int, Int, Unit>
  field = 
    // CHECK JVM_IR:
    //   Mangled name computed from Ir (compatible mode: false):         {}test4#<no name provided>#static(kotlin.Int;kotlin.Int){}
    //   Mangled name computed from Ir (compatible mode: true):          test4#<no name provided>#static(kotlin.Int;kotlin.Int){}
    //   Mangled name computed from Descriptor (compatible mode: false): {}test4#jf#<no name provided>#static(kotlin.Int;kotlin.Int){}
    //   Mangled name computed from Descriptor (compatible mode: true):  {}test4#jf#<no name provided>#static(kotlin.Int;kotlin.Int){}
    //   Mangled name computed from Fir (compatible mode: false):        could not compute mangled name: java.lang.IllegalStateException: unexpected element fun <anonymous>(i: R|kotlin/Int|, j: R|kotlin/Int|): R|kotlin/Unit| <inline=Unknown>  {... (truncated)
    //   Mangled name computed from Fir (compatible mode: true):         could not compute mangled name: java.lang.IllegalStateException: unexpected element fun <anonymous>(i: R|kotlin/Int|, j: R|kotlin/Int|): R|kotlin/Unit| <inline=Unknown>  {... (truncated)
    // CHECK JS_IR:
    //   Mangled name computed from Ir (compatible mode: false):         {}test4#<no name provided>#static(kotlin.Int;kotlin.Int){}
    //   Mangled name computed from Ir (compatible mode: true):          test4#<no name provided>#static(kotlin.Int;kotlin.Int){}
    //   Mangled name computed from Descriptor (compatible mode: false): {}test4#<no name provided>#static(kotlin.Int;kotlin.Int){}
    //   Mangled name computed from Descriptor (compatible mode: true):  {}test4#<no name provided>#static(kotlin.Int;kotlin.Int){}
    //   Mangled name computed from Fir (compatible mode: false):        could not compute mangled name: java.lang.IllegalStateException: unexpected element fun <anonymous>(i: R|kotlin/Int|, j: R|kotlin/Int|): R|kotlin/Unit| <inline=Unknown>  {... (truncated)
    //   Mangled name computed from Fir (compatible mode: true):         could not compute mangled name: java.lang.IllegalStateException: unexpected element fun <anonymous>(i: R|kotlin/Int|, j: R|kotlin/Int|): R|kotlin/Unit| <inline=Unknown>  {... (truncated)
    local fun <no name provided>(i: Int, j: Int) {
    }

  // CHECK JVM_IR:
  //   Mangled name: #<get-test4>(){}kotlin.Function2<kotlin.Int,kotlin.Int,kotlin.Unit>
  //   Public signature: /test4.<get-test4>|6534158501518091161[0]
  // CHECK JS_IR:
  //   Mangled name computed from Ir:         #<get-test4>(){}
  //   Mangled name computed from Descriptor: #<get-test4>(){}
  //   Mangled name computed from Fir:        #<get-test4>(){}kotlin.Function2<kotlin.Int,kotlin.Int,kotlin.Unit>
  //   Public signature: /test4.<get-test4>|6534158501518091161[0]
  get

