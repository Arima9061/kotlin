// CHECK:
//   Mangled name: TestAnn
//   Public signature: /TestAnn|null[0]
open annotation class TestAnn : Annotation {
  // CHECK:
  //   Mangled name: TestAnn#<init>(kotlin.String){}
  //   Public signature: /TestAnn.<init>|1280618353163213788[0]
  constructor(x: String) /* primary */ {
    super/*Any*/()
    /* <init>() */

  }

  // CHECK:
  //   Mangled name: TestAnn{}x
  //   Public signature: /TestAnn.x|-8060530855978347579[0]
  val x: String
    field = x
    // CHECK:
    //   Mangled name: TestAnn#<get-x>(){}kotlin.String
    //   Public signature: /TestAnn.x.<get-x>|316111172223894646[0]
    get

}

// CHECK:
//   Mangled name: TestEnum
//   Public signature: /TestEnum|null[0]
open enum class TestEnum : Enum<TestEnum> {
  // CHECK:
  //   Mangled name: TestEnum#<init>(){}
  //   Public signature: /TestEnum.<init>|-5645683436151566731[0]
  private constructor() /* primary */ {
    super/*Enum*/<TestEnum>()
    /* <init>() */

  }

  // CHECK:
  //   Mangled name: TestEnum.ENTRY1
  //   Public signature: /TestEnum.ENTRY1|null[0]
  @TestAnn(x = "ENTRY1")
  ENTRY1 = TestEnum()

  // CHECK:
  //   Mangled name: TestEnum.ENTRY2
  //   Public signature: /TestEnum.ENTRY2|null[0]

  @TestAnn(x = "ENTRY2")
  ENTRY2 = ENTRY2()
  // CHECK:
  //   Mangled name: TestEnum.ENTRY2
  //   Public signature: /TestEnum.ENTRY2.<EEC>|null[0]
  @TestAnn(x = "ENTRY2")
  private enum entry class ENTRY2 : TestEnum {
    // CHECK:
    //   Mangled name: TestEnum.ENTRY2#<init>(){}
    //   Public signature: /TestEnum.ENTRY2.<EEC>.<init>|-5645683436151566731[0]
    private constructor() /* primary */ {
      super/*TestEnum*/() /*~> Unit */
      /* <init>() */

    }

    // CHECK:
    //   Mangled name: TestEnum.ENTRY2{}x
    //   Public signature: /TestEnum.ENTRY2.<EEC>.x|-8060530855978347579[0]
    val x: Int
      field = 42
      // CHECK:
      //   Mangled name: TestEnum.ENTRY2#<get-x>(){}kotlin.Int
      //   Public signature: /TestEnum.ENTRY2.<EEC>.x.<get-x>|4966956098150895696[0]
      get

  }

  // CHECK:
  //   Mangled name: TestEnum#values#static(){}kotlin.Array<TestEnum>
  //   Public signature: /TestEnum.values|-4299804782350326897[0]
  fun values(): Array<TestEnum> /* Synthetic body for ENUM_VALUES */

  // CHECK:
  //   Mangled name: TestEnum#valueOf#static(kotlin.String){}TestEnum
  //   Public signature: /TestEnum.valueOf|1811575739170804829[0]
  fun valueOf(value: String): TestEnum /* Synthetic body for ENUM_VALUEOF */

  // CHECK:
  //   Mangled name: TestEnum#static{}entries
  //   Public signature: /TestEnum.entries|-5134227801081826149[0]
  val entries: EnumEntries<TestEnum>
    // CHECK:
    //   Mangled name: TestEnum#<get-entries>#static(){}kotlin.enums.EnumEntries<TestEnum>
    //   Public signature: /TestEnum.entries.<get-entries>|6962221716588245012[0]
    get(): EnumEntries<TestEnum> /* Synthetic body for ENUM_ENTRIES */

}

