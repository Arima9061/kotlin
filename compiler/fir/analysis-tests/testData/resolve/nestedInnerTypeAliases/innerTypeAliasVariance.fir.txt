FILE: innerTypeAliasVariance.kt
    public final class P<T> : R|kotlin/Any| {
        public constructor<T>(): R|P<T>| {
            super<R|kotlin/Any|>()
        }

    }
    public final class C<out T> : R|kotlin/Any| {
        public constructor<out T>(): R|C<T>| {
            super<R|kotlin/Any|>()
        }

        public final inner typealias TA<out Outer(T)> = R|P<T>|

        public final inner class Inner<out Outer(T)> : R|kotlin/Any| {
            public C<T>.constructor(): R|C.Inner<T>| {
                super<R|kotlin/Any|>()
            }

        }

        public final inner typealias TA1<out Outer(T)> = R|C.Inner<T>|

    }
    public final fun test(): R|kotlin/Unit| {
        lval a0: R|{C.TA<kotlin/Any>=} P<kotlin/Any>| = R|/C.C|<R|kotlin/Int|>().R|/P.P|<R|kotlin/Any|>()
        lval a1: R|{C.TA<kotlin/Any>=} P<kotlin/Any>| = R|/P.P<CS errors: /P.P>#|<R|kotlin/Int|>()
        lval a2: R|{C.TA1<kotlin/Any>=} C.Inner<kotlin/Any>| = R|/C.C|<R|kotlin/Int|>().<Unresolved name: TA1>#()
    }
