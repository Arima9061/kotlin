FILE: simple.kt
    public final class C<T> : R|kotlin/Any| {
        public constructor<T>(t: R|T|): R|C<T>| {
            super<R|kotlin/Any|>()
        }

        public final val t: R|T| = R|<local>/t|
            public get(): R|T|

        private final inner class Inner<Outer(T)> : R|kotlin/Any| {
            public C<T>.constructor(): R|C.Inner<T>| {
                super<R|kotlin/Any|>()
            }

            public final fun innerTest(): R|T| {
                ^innerTest this@R|/C|.R|/C.t|
            }

        }

        @R|kotlin/Suppress|(names = vararg(String(WRONG_MODIFIER_TARGET))) private final inner typealias InnerTA<Outer(T)> = R|C.Inner<T>|

        public final fun test(): R|T| {
            ^test (this@R|/C|, this@R|/C|).R|/C.Inner.Inner|().R|/C.Inner.innerTest|()
        }

    }
    public final fun box(): R|kotlin/String| {
        ^box R|/C.C|<R|kotlin/String|>(String(OK)).R|SubstitutionOverride</C.test: R|kotlin/String|>|()
    }
