FILE: binaryOpStackOverflow.kt
    public final fun stackOverflow(): R|kotlin/Unit| {
        lval a: R|kotlin/String| = <strcat>(String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a), String(a))
    }
