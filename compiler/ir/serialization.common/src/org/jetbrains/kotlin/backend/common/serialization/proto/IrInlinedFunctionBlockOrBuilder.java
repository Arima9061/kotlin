// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: compiler/ir/serialization.common/src/KotlinIr.proto

package org.jetbrains.kotlin.backend.common.serialization.proto;

public interface IrInlinedFunctionBlockOrBuilder extends
    // @@protoc_insertion_point(interface_extends:org.jetbrains.kotlin.backend.common.serialization.proto.IrInlinedFunctionBlock)
    org.jetbrains.kotlin.protobuf.MessageLiteOrBuilder {

  /**
   * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrStatement statement = 1;</code>
   */
  java.util.List<org.jetbrains.kotlin.backend.common.serialization.proto.IrStatement> 
      getStatementList();
  /**
   * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrStatement statement = 1;</code>
   */
  org.jetbrains.kotlin.backend.common.serialization.proto.IrStatement getStatement(int index);
  /**
   * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrStatement statement = 1;</code>
   */
  int getStatementCount();

  /**
   * <code>optional int32 origin_name = 2;</code>
   */
  boolean hasOriginName();
  /**
   * <code>optional int32 origin_name = 2;</code>
   */
  int getOriginName();

  /**
   * <code>required .org.jetbrains.kotlin.backend.common.serialization.proto.IrExpression inline_call = 3;</code>
   */
  boolean hasInlineCall();
  /**
   * <code>required .org.jetbrains.kotlin.backend.common.serialization.proto.IrExpression inline_call = 3;</code>
   */
  org.jetbrains.kotlin.backend.common.serialization.proto.IrExpression getInlineCall();

  /**
   * <code>optional int64 inlined_function_symbol = 4;</code>
   */
  boolean hasInlinedFunctionSymbol();
  /**
   * <code>optional int64 inlined_function_symbol = 4;</code>
   */
  long getInlinedFunctionSymbol();

  /**
   * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrExpression inlined_expression = 5;</code>
   */
  boolean hasInlinedExpression();
  /**
   * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrExpression inlined_expression = 5;</code>
   */
  org.jetbrains.kotlin.backend.common.serialization.proto.IrExpression getInlinedExpression();
}