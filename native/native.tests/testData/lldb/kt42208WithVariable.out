(lldb) target create <path to executable>
Current executable set to <path to executable>.
(lldb) settings set stop-disassembly-display never
(lldb) command script import <path to lldb script>
Stop hook #1 added.
(lldb) b kt42208-2.kt:17
Breakpoint 1: where = lldb_kt42208WithVariable.kexe`kfun:main$lambda$0#internal + <breakpoint offset> at kt42208-2.kt:17:5, address = <memory address>
(lldb) r
Process <process id> stopped
* thread #<thread id>, stop reason = breakpoint 1.1
    frame #0: <frame pc> lldb_kt42208WithVariable.kexe`kfun:main$lambda$0#internal at kt42208-2.kt:17:5
   14  	class A
   15  	val list = mutableListOf<A>()
   16  	inline fun foo() = { ->
-> 17  	    list.add(A())
    	    ^
   18  	}
Process <process id> launched: <path to executable>
(lldb) bt
* thread #<thread id>, stop reason = breakpoint 1.1
  * frame #0: <frame pc> lldb_kt42208WithVariable.kexe`kfun:main$lambda$0#internal at kt42208-2.kt:17:5
    frame #1: <frame pc> lldb_kt42208WithVariable.kexe`kfun:$main$lambda$0$FUNCTION_REFERENCE$0.invoke#internal(_this=[]) at kt42208-2.kt:16:20
    frame #2: <frame pc> lldb_kt42208WithVariable.kexe`kfun:$main$lambda$0$FUNCTION_REFERENCE$0.$<bridge-UNN>invoke(_this=[]){}kotlin.Boolean#internal at kt42208-2.kt:16:20
    frame #3: <frame pc> lldb_kt42208WithVariable.kexe`kfun:kotlin.Function0#invoke(){}1:0-trampoline at [K][Suspend]Functions:1:1
    frame #4: <frame pc> lldb_kt42208WithVariable.kexe`kfun:#main(){} at kt42208-1.kt:8:5
(lldb) c
Process <process id> resuming
Process <process id> stopped
* thread #<thread id>, stop reason = breakpoint 1.1
    frame #0: <frame pc> lldb_kt42208WithVariable.kexe`kfun:main$lambda$0#internal at kt42208-2.kt:17:5
   14  	class A
   15  	val list = mutableListOf<A>()
   16  	inline fun foo() = { ->
-> 17  	    list.add(A())
    	    ^
   18  	}
(lldb) bt
* thread #<thread id>, stop reason = breakpoint 1.1
  * frame #0: <frame pc> lldb_kt42208WithVariable.kexe`kfun:main$lambda$0#internal at kt42208-2.kt:17:5
    frame #1: <frame pc> lldb_kt42208WithVariable.kexe`kfun:$main$lambda$0$FUNCTION_REFERENCE$0.invoke#internal(_this=[]) at kt42208-2.kt:16:20
    frame #2: <frame pc> lldb_kt42208WithVariable.kexe`kfun:$main$lambda$0$FUNCTION_REFERENCE$0.$<bridge-UNN>invoke(_this=[]){}kotlin.Boolean#internal at kt42208-2.kt:16:20
    frame #3: <frame pc> lldb_kt42208WithVariable.kexe`kfun:kotlin.Function0#invoke(){}1:0-trampoline at [K][Suspend]Functions:1:1
    frame #4: <frame pc> lldb_kt42208WithVariable.kexe`kfun:#main(){} at kt42208-1.kt:9:5
(lldb) c
Process <process id> resuming
Process <process id> stopped
* thread #<thread id>, stop reason = breakpoint 1.1
    frame #0: <frame pc> lldb_kt42208WithVariable.kexe`kfun:main$lambda$0#internal at kt42208-2.kt:17:5
   14  	class A
   15  	val list = mutableListOf<A>()
   16  	inline fun foo() = { ->
-> 17  	    list.add(A())
    	    ^
   18  	}
(lldb) bt
* thread #<thread id>, stop reason = breakpoint 1.1
  * frame #0: <frame pc> lldb_kt42208WithVariable.kexe`kfun:main$lambda$0#internal at kt42208-2.kt:17:5
    frame #1: <frame pc> lldb_kt42208WithVariable.kexe`kfun:$main$lambda$0$FUNCTION_REFERENCE$0.invoke#internal(_this=[]) at kt42208-2.kt:16:20
    frame #2: <frame pc> lldb_kt42208WithVariable.kexe`kfun:$main$lambda$0$FUNCTION_REFERENCE$0.$<bridge-UNN>invoke(_this=[]){}kotlin.Boolean#internal at kt42208-2.kt:16:20
    frame #3: <frame pc> lldb_kt42208WithVariable.kexe`kfun:kotlin.Function0#invoke(){}1:0-trampoline at [K][Suspend]Functions:1:1
    frame #4: <frame pc> lldb_kt42208WithVariable.kexe`kfun:#main(){} at kt42208-1.kt:10:5
(lldb) q
