(lldb) target create <path to executable>
Current executable set to <path to executable>.
(lldb) settings set stop-disassembly-display never
(lldb) settings set frame-format "frame #${frame.index}: <frame pc>{ ${module.file.basename}{\`${function.name-with-args}{${frame.no-debug}}}}{ at ${line.file.basename}:${line.number}{:${line.column}}}{${function.is-optimized} [opt]}{${frame.is-artificial} [artificial]}\n"
(lldb) settings set thread-format "thread #<thread id>{ ${module.file.basename}{\`${function.name-with-args}{${frame.no-debug}}}}{ at ${line.file.basename}:${line.number}{:${line.column}}}{, stop reason = ${thread.stop-reason}}{\nReturn value: ${thread.return-value}}{\nCompleted expression: ${thread.completed-expression}}\n"
(lldb) settings set thread-stop-format "thread #<thread id>{, activity = '${thread.info.activity.name}'}{, ${thread.info.trace_messages} messages}{, stop reason = ${thread.stop-reason}}{\nReturn value: ${thread.return-value}}{\nCompleted expression: ${thread.completed-expression}}\n"
(lldb) command script import <path to lldb script>
Stop hook #1 added.
(lldb) b kt42208-2.kt:15
Breakpoint 1: where = lldb_kt42208WithPassingLambdaTo-cf023500.kexe`kfun:main$lambda$0#internal + <breakpoint offset> at kt42208-2.kt:15:5, address = <memory address>
(lldb) r
Process <process id> stopped
* thread #<thread id>, stop reason = breakpoint 1.1
    frame #0: <frame pc> lldb_kt42208WithPassingLambdaTo-cf023500.kexe`kfun:main$lambda$0#internal at kt42208-2.kt:15:5
   12  	class A
   13  	val list = mutableListOf<A>()
   14  	inline fun foo() = { ->
-> 15  	    list.add(A())
    	    ^
   16  	}
Process <process id> launched: <path to executable>
(lldb) bt
* thread #<thread id>, stop reason = breakpoint 1.1
  * frame #0: <frame pc> lldb_kt42208WithPassingLambdaTo-cf023500.kexe`kfun:main$lambda$0#internal at kt42208-2.kt:15:5
    frame #1: <frame pc> lldb_kt42208WithPassingLambdaTo-cf023500.kexe`kfun:$main$lambda$0$FUNCTION_REFERENCE$0.invoke#internal(_this=[]) at kt42208-2.kt:14:20
    frame #2: <frame pc> lldb_kt42208WithPassingLambdaTo-cf023500.kexe`kfun:$main$lambda$0$FUNCTION_REFERENCE$0.$<bridge-UNN>invoke(_this=[]){}kotlin.Boolean#internal at kt42208-2.kt:14:20
    frame #3: <frame pc> lldb_kt42208WithPassingLambdaTo-cf023500.kexe`kfun:kotlin.Function0#invoke(){}1:0-trampoline at [K][Suspend]Functions:1:1
    frame #4: <frame pc> lldb_kt42208WithPassingLambdaTo-cf023500.kexe`kfun:#bar(v=[]){} at kt42208-3.kt:19:5
    frame #5: <frame pc> lldb_kt42208WithPassingLambdaTo-cf023500.kexe`kfun:#main(){} at kt42208-1.kt:8:5
(lldb) c
Process <process id> resuming
Process <process id> exited with status = 0 (<memory address>)
(lldb) q
