library {
  // module name: <main>

  library fragment {
    // package name: <root>

    // class name: BoxBoxInt
    // class name: BoxInt

    public final value class BoxBoxInt : kotlin/Any {

      public constructor(x: BoxInt)

      public open /* synthesized */ operator fun equals(other: kotlin/Any?): kotlin/Boolean

      public open /* synthesized */ fun hashCode(): kotlin/Int

      public open /* synthesized */ fun toString(): kotlin/String

      public final val x: BoxInt
        public final get

      // underlying property: x

      // underlying type: BoxInt
    }

    public final value class BoxInt : kotlin/Any {

      public constructor(x: kotlin/Int)

      public open /* synthesized */ operator fun equals(other: kotlin/Any?): kotlin/Boolean

      public open /* synthesized */ fun hashCode(): kotlin/Int

      public open /* synthesized */ fun toString(): kotlin/String

      public final val x: kotlin/Int
        public final get

      // underlying property: x

      // underlying type: kotlin/Int
    }

    package {

      public final fun box(): kotlin/String
    }
  }
}
