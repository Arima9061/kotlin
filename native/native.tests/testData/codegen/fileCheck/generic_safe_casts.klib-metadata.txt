library {
  // module name: <main>

  library fragment {
    // package name: <root>

    // class name: A
    // class name: B
    // class name: Foo

    public open class A : kotlin/Any {

      public constructor(x: kotlin/Int)

      public final val x: kotlin/Int
        public final get
    }

    public open class B : A {

      public constructor()
    }

    public final value class Foo : kotlin/Any {

      public constructor(value: kotlin/Int)

      public open /* synthesized */ operator fun equals(other: kotlin/Any?): kotlin/Boolean

      public open /* synthesized */ fun hashCode(): kotlin/Int

      public open /* synthesized */ fun toString(): kotlin/String

      public final val value: kotlin/Int
        public final get

      // underlying property: value

      // underlying type: kotlin/Int
    }

    package {

      public final fun bar(): B

      public final fun baz(): A

      public final fun box(): kotlin/String

      public final fun foo(x: kotlin/Any): kotlin/Int
    }
  }
}
