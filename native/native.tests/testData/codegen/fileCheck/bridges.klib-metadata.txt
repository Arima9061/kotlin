library {
  // module name: <main>

  library fragment {
    // package name: <root>

    // class name: Bar2
    // class name: Bar3
    // class name: C1
    // class name: Foo2
    // class name: Foo3
    // class name: I1
    // class name: I2
    // class name: I3

    public final class Bar2 : Foo2<kotlin/Unit>, I2 {

      public constructor()
    }

    public final class Bar3 : Foo3<kotlin/Nothing>, I3 {

      public constructor()
    }

    public final class C1 : I1 {

      public constructor()

      public open fun foo(): kotlin/Nothing
    }

    public open class Foo2<T#0 /* T */> : kotlin/Any {

      public constructor(x: T#0)

      public final val x: T#0
        public final get
    }

    public open class Foo3<T#0 /* T */ : kotlin/Int> : kotlin/Any {

      public constructor()

      public final fun foo(): T#0
    }

    public abstract interface I1 : kotlin/Any {

      public abstract fun foo(): kotlin/Int
    }

    public abstract interface I2 : kotlin/Any {

      public abstract val x: kotlin/Unit
        public abstract get
    }

    public abstract interface I3 : kotlin/Any {

      public abstract fun foo(): kotlin/Nothing
    }

    package {

      public final fun box(): kotlin/String

      public final fun getX2(i: I2): kotlin/Unit
    }
  }
}
