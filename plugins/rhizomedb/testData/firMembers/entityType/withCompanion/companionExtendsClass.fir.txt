FILE: companionExtendsClass.kt
    public abstract class MyBaseClass : R|kotlin/Any| {
        public constructor(id: R|kotlin/String|): R|MyBaseClass| {
            super<R|kotlin/Any|>()
        }

        public final val id: R|kotlin/String| = R|<local>/id|
            public get(): R|kotlin/String|

    }
    @R|com/jetbrains/rhizomedb/GeneratedEntityType|() public final data class MyEntity : R|com/jetbrains/rhizomedb/Entity| {
        public constructor(eid: R|{com/jetbrains/rhizomedb/EID=} kotlin/Int|): R|MyEntity| {
            super<R|kotlin/Any|>()
        }

        public open override val eid: R|{com/jetbrains/rhizomedb/EID=} kotlin/Int| = R|<local>/eid|
            public get(): R|{com/jetbrains/rhizomedb/EID=} kotlin/Int|

        public final companion object Companion : R|MyBaseClass| {
            private constructor(): R|MyEntity.Companion| {
                super<R|MyBaseClass|>(String(MyEntity))
            }

            public final val X: R|kotlin/Int| = Int(42)
                public get(): R|kotlin/Int|

        }

        public final operator fun component1(): R|{com/jetbrains/rhizomedb/EID=} kotlin/Int|

        public final fun copy(eid: R|{com/jetbrains/rhizomedb/EID=} kotlin/Int| = this@R|/MyEntity|.R|/MyEntity.eid|): R|MyEntity|

    }
    public final fun foo(): R|kotlin/Unit| {
        Q|MyEntity|.<Ambiguity: all, [com/jetbrains/rhizomedb/all, com/jetbrains/rhizomedb/all, com/jetbrains/rhizomedb/all, com/jetbrains/rhizomedb/all]>#()
        Q|MyEntity|.<Ambiguity: single, [com/jetbrains/rhizomedb/single, com/jetbrains/rhizomedb/single]>#()
        Q|MyEntity|.<Ambiguity: singleOrNull, [com/jetbrains/rhizomedb/singleOrNull, com/jetbrains/rhizomedb/singleOrNull]>#()
    }
