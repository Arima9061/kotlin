/*
 * Copyright 2010-2024 JetBrains s.r.o. and Kotlin Programming Language contributors.
 * Use of this source code is governed by the Apache 2.0 license that can be found in the license/LICENSE.txt file.
 */

package org.jetbrains.kotlinx.jspo.runners;

import com.intellij.testFramework.TestDataPath;
import org.jetbrains.kotlin.test.util.KtTestUtil;
import org.jetbrains.kotlin.test.TestMetadata;
import org.junit.jupiter.api.RepeatedTest;

import java.io.File;
import java.util.regex.Pattern;

/** This class is generated by {@link org.jetbrains.kotlinx.jspo.TestGeneratorKt}. DO NOT MODIFY MANUALLY */
@SuppressWarnings("all")
@TestMetadata("plugins/js-plain-objects/compiler-plugin/testData/diagnostics")
@TestDataPath("$PROJECT_ROOT")
public class FirJsPlainObjectsPluginDiagnosticTestGenerated extends AbstractFirJsPlainObjectsPluginDiagnosticTest {
  @RepeatedTest(value = 5)
  public void testAllFilesPresentInDiagnostics() {
    KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("plugins/js-plain-objects/compiler-plugin/testData/diagnostics"), Pattern.compile("^(.+)\\.kt$"), null, true);
  }

  @RepeatedTest(value = 5)
  @TestMetadata("inheritance.kt")
  public void testInheritance() {
    runTest("plugins/js-plain-objects/compiler-plugin/testData/diagnostics/inheritance.kt");
  }

  @RepeatedTest(value = 5)
  @TestMetadata("only-properties.kt")
  public void testOnly_properties() {
    runTest("plugins/js-plain-objects/compiler-plugin/testData/diagnostics/only-properties.kt");
  }

  @RepeatedTest(value = 5)
  @TestMetadata("wrongAnnotationTarget.kt")
  public void testWrongAnnotationTarget() {
    runTest("plugins/js-plain-objects/compiler-plugin/testData/diagnostics/wrongAnnotationTarget.kt");
  }
}
